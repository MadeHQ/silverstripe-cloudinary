{"version":3,"sources":["webpack:///javascript/node_modules/@cloudinary/transformation-builder-sdk/internal/qualifier/QualifierValue.js","webpack:///javascript/node_modules/@cloudinary/transformation-builder-sdk/internal/utils/unsupportedError.js","webpack:///javascript/node_modules/@cloudinary/transformation-builder-sdk/internal/models/QualifierModel.js","webpack:///javascript/node_modules/@cloudinary/transformation-builder-sdk/internal/models/qualifierToJson.js","webpack:///javascript/node_modules/@cloudinary/transformation-builder-sdk/internal/qualifier/Qualifier.js","webpack:///javascript/node_modules/@cloudinary/transformation-builder-sdk/qualifiers/flag/FlagQualifier.js","webpack:///javascript/node_modules/@cloudinary/transformation-builder-sdk/internal/models/ActionModel.js","webpack:///javascript/node_modules/@cloudinary/transformation-builder-sdk/internal/models/actionToJson.js","webpack:///javascript/node_modules/@cloudinary/transformation-builder-sdk/internal/Action.js","webpack:///javascript/node_modules/@cloudinary/transformation-builder-sdk/internal/utils/dataStructureUtils.js","webpack:///javascript/node_modules/@cloudinary/transformation-builder-sdk/actions/background/actions/BackgroundColor.js","webpack:///javascript/node_modules/@cloudinary/transformation-builder-sdk/internal/utils/prepareColor.js","webpack:///javascript/node_modules/@cloudinary/transformation-builder-sdk/internal/RawAction.js","webpack:///javascript/node_modules/@cloudinary/transformation-builder-sdk/qualifiers/flag.js","webpack:///javascript/node_modules/@cloudinary/transformation-builder-sdk/qualifiers/format/FormatQualifier.js","webpack:///javascript/node_modules/@cloudinary/transformation-builder-sdk/internal/utils/objectFlip.js","webpack:///javascript/node_modules/@cloudinary/transformation-builder-sdk/internal/internalConstants.js","webpack:///javascript/node_modules/@cloudinary/transformation-builder-sdk/actions/delivery/DeliveryAction.js","webpack:///javascript/node_modules/@cloudinary/transformation-builder-sdk/qualifiers/progressive.js","webpack:///javascript/node_modules/@cloudinary/transformation-builder-sdk/actions/delivery/DeliveryFormatAction.js","webpack:///javascript/node_modules/@cloudinary/transformation-builder-sdk/transformation/Transformation.js","webpack:///javascript/node_modules/@cloudinary/transformation-builder-sdk/internal/models/IErrorObject.js","webpack:///javascript/node_modules/@cloudinary/transformation-builder-sdk/transformation/ImageTransformation.js","webpack:///javascript/node_modules/@cloudinary/url-gen/config/BaseConfig.js","webpack:///javascript/node_modules/@cloudinary/url-gen/internal/internalConstants.js","webpack:///javascript/node_modules/@cloudinary/url-gen/config/URLConfig.js","webpack:///javascript/node_modules/@cloudinary/url-gen/sdkAnalytics/stringPad.js","webpack:///javascript/node_modules/@cloudinary/url-gen/sdkAnalytics/base64Map.js","webpack:///javascript/node_modules/@cloudinary/url-gen/sdkAnalytics/encodeVersion.js","webpack:///javascript/node_modules/@cloudinary/url-gen/sdkAnalytics/padVersion.js","webpack:///javascript/node_modules/@cloudinary/url-gen/sdkAnalytics/reverseVersion.js","webpack:///javascript/node_modules/@cloudinary/url-gen/internal/utils/packageVersion.js","webpack:///javascript/node_modules/@cloudinary/url-gen/sdkAnalytics/getSDKAnalyticsSignature.js","webpack:///javascript/node_modules/@cloudinary/url-gen/sdkAnalytics/getAnalyticsOptions.js","webpack:///javascript/node_modules/@cloudinary/url-gen/sdkAnalytics/encodeOSVersion.js","webpack:///javascript/node_modules/@cloudinary/url-gen/assets/CloudinaryFile.js","webpack:///javascript/node_modules/@cloudinary/url-gen/assets/CloudinaryTransformable.js","webpack:///javascript/node_modules/@cloudinary/url-gen/internal/url/cloudinaryURL.js","webpack:///javascript/node_modules/@cloudinary/url-gen/internal/url/urlUtils/publicIDContainsVersion.js","webpack:///javascript/node_modules/@cloudinary/url-gen/internal/url/urlUtils/isUrl.js","webpack:///javascript/node_modules/@cloudinary/url-gen/internal/url/urlUtils/isFileName.js","webpack:///javascript/node_modules/@cloudinary/url-gen/assets/CloudinaryImage.js","webpack:///javascript/node_modules/@cloudinary/transformation-builder-sdk/transformation/VideoTransformation.js","webpack:///javascript/node_modules/@cloudinary/url-gen/assets/CloudinaryVideo.js","webpack:///javascript/node_modules/@cloudinary/url-gen/instance/Cloudinary.js","webpack:///javascript/node_modules/@cloudinary/url-gen/backwards/utils/isObject.js","webpack:///javascript/node_modules/@cloudinary/url-gen/internal/utils/base64Encode.js","webpack:///javascript/node_modules/@cloudinary/url-gen/backwards/consts.js","webpack:///javascript/node_modules/@cloudinary/url-gen/backwards/utils/smartEscape.js","webpack:///javascript/node_modules/@cloudinary/url-gen/backwards/utils/snakeCase.js","webpack:///javascript/node_modules/@cloudinary/url-gen/backwards/legacyLayer/layer.js","webpack:///javascript/node_modules/@cloudinary/url-gen/backwards/utils/isEmpty.js","webpack:///javascript/node_modules/@cloudinary/url-gen/backwards/utils/isNumberLike.js","webpack:///javascript/node_modules/@cloudinary/url-gen/backwards/legacyLayer/textlayer.js","webpack:///javascript/node_modules/@cloudinary/url-gen/backwards/transformationProcessing/processLayer.js","webpack:///javascript/node_modules/@cloudinary/url-gen/backwards/utils/legacyNormalizeExpression.js","webpack:///javascript/node_modules/@cloudinary/url-gen/backwards/utils/toArray.js","webpack:///javascript/node_modules/@cloudinary/url-gen/backwards/transformationProcessing/processCustomFunction.js","webpack:///javascript/node_modules/@cloudinary/url-gen/backwards/utils/splitRange.js","webpack:///javascript/node_modules/@cloudinary/url-gen/backwards/utils/norm_range_values.js","webpack:///javascript/node_modules/@cloudinary/url-gen/backwards/expression.js","webpack:///javascript/node_modules/@cloudinary/url-gen/backwards/condition.js","webpack:///javascript/node_modules/@cloudinary/url-gen/backwards/configuration.js","webpack:///javascript/node_modules/@cloudinary/url-gen/internal/utils/cloneDeep.js","webpack:///javascript/node_modules/@cloudinary/url-gen/backwards/utils/legacyBaseUtil.js","webpack:///javascript/node_modules/@cloudinary/url-gen/backwards/legacyLayer/subtitleslayer.js","webpack:///javascript/node_modules/@cloudinary/url-gen/internal/utils/dataStructureUtils.js","webpack:///javascript/node_modules/@cloudinary/url-gen/backwards/legacyLayer/fetchlayer.js","webpack:///javascript/node_modules/@cloudinary/url-gen/backwards/utils/isFunction.js","webpack:///javascript/node_modules/@cloudinary/url-gen/backwards/transformation.js","webpack:///./TinyMCE_ssmedia.js","webpack:///javascript/node_modules/@cloudinary/url-gen/backwards/generateTransformationString.js","webpack:///javascript/node_modules/@cloudinary/url-gen/backwards/transformationProcessing/processDpr.js","webpack:///javascript/node_modules/@cloudinary/url-gen/backwards/transformationProcessing/processRadius.js","webpack:///javascript/node_modules/@cloudinary/url-gen/backwards/transformationProcessing/processIf.js","webpack:///javascript/node_modules/@cloudinary/url-gen/backwards/transformationProcessing/processCustomPreFunction.js","webpack:///javascript/node_modules/@cloudinary/url-gen/backwards/transformationProcessing/processVideoParams.js"],"names":["QualifierValue","constructor","qualifierValue","this","values","delimiter","hasValue","addValue","toString","join","v","value","Array","isArray","concat","push","filter","setDelimiter","UnsupportedError","Error","message","super","createUnsupportedError","QualifierModel","_qualifierModel","toJson","error","name","apply","Qualifier","key","FlagQualifier","flagType","flagValue","replace","getFlagValue","ActionModel","_actionModel","actionModelIsNotEmpty","Object","keys","length","sourceTransformationError","_c","_b","_a","source","transformation","Action","arguments","qualifiers","Map","flags","actionTag","prepareQualifiers","getActionTag","setActionTag","tag","map","array","from","entries","forEach","flag","sort","mapToSortedArray","addQualifier","qualifier","toLowerCase","split","set","addFlag","addValueToQualifier","qualifierKey","get","BackgroundColor","color","match","substr","actionType","actionModel","RawAction","raw","lossy","preserveTransparency","progressive","mode","FormatQualifier","val","getValue","objectFlip","obj","result","444","420","limitFit","limitFill","minimumFit","thumbnail","limitPad","minimumPad","autoPad","DELIVERY_MODE_TO_ACTION_TYPE_MAP","colorSpace","dpr","density","defaultImage","format","quality","redEye","advancedRedEye","oilPaint","unsharpMask","makeTransparent","generativeRestore","upscale","autoBest","autoEco","autoGood","autoLow","jpegminiHigh","jpegminiMedium","jpegminiBest","fullHd","fullHdWifi","fullHdLean","hdLean","DeliveryAction","deliveryKey","deliveryType","modelProperty","deliveryTypeValue","ProgressiveQualifier","DeliveryFormatAction","formatType","Transformation","actions","addAction","action","actionToAdd","indexOf","addTransformation","tx","a","animated","animatedAction","border","borderAction","reshape","reshapeAction","resize","resizeAction","roundCorners","roundCornersAction","overlay","overlayAction","underlay","underlayAction","setLayerType","addVariable","variableAction","conditional","conditionAction","effect","effectAction","adjust","rotate","rotateAction","namedTransformation","delivery","deliveryAction","backgroundColor","psdTools","extract","flagQualifier","flagToAdd","customFunction","transcode","videoEdit","json","errorObj","ImageTransformation","filterOutNonSupportedKeys","userProvidedConfig","validKeys","create","console","warn","ALLOWED_URL_CONFIG","URLConfig","userURLConfig","urlConfig","assign","secure","extend","setCname","cname","setSecureDistribution","secureDistribution","setPrivateCdn","privateCdn","setSignUrl","signUrl","setLongUrlSignature","longUrlSignature","setShorten","shorten","setUseRootPath","useRootPath","setSecure","setForceVersion","forceVersion","setQueryParams","params","queryParams","stringPad","_targetLength","_padString","targetLength","padString","String","string","_times","times","repeatedString","repeatStringNumTimes","slice","base64Map","num","encodeVersion","semVer","strResult","paddedStringLength","paddedSemver","asNumber","segment","isNaN","padVersion","reverse","reverseVersion","parseInt","paddedBinary","bitString","char","packageVersion","ensureShapeOfTrackedProperties","trackedAnalytics","defaults","techVersion","failedVersion","window","process","versions","node","e","getNodeVersion","sdkCode","sdkSemver","product","osType","osVersion","responsive","placeholder","lazyload","accessibility","getSDKAnalyticsSignature","_trackedAnalytics","analyticsOptions","options","feature","getAnalyticsOptions","twoPartVersion","semVerStr","parts","removePatchFromSemver","encodedSDKVersion","encodedTechVersion","encodedOSVersion","major","minor","binaryMajorVersion","binaryMinorVersion","paddedMajor","padStart","paddedMinor","encodeOSVersion","featureCode","SDKCode","SEO_TYPES","CloudinaryTransformable","publicID","cloudConfig","setPublicID","setCloudConfig","setURLConfig","cloudName","apiKey","apiSecret","authToken","setDeliveryType","newType","setSuffix","newSuffix","suffix","setSignature","signature","setVersion","newVersion","version","setAssetType","assetType","sign","toURL","overwriteOptions","createCloudinaryURL","validateAssetForURLCreation","suffixContainsDot","suffixContainsSlash","getResourceType","hasSuffix","regularSEOType","shortSEOType","getSignature","prefix","privateCDN","transformationString","shouldForceVersion","safeURL","encodeURI","shouldAddAnalytics","analytics","includes","queryParamsString","URLSearchParams","err","conditionalAction","CloudinaryImage","VideoTransformation","CloudinaryVideo","Cloudinary","cloudinaryConfig","image","cloud","url","video","setConfig","getConfig","extendConfig","base64Encode","input","encodedResult","btoa","decodeURI","global","Buffer","LEGACY_CONDITIONAL_OPERATORS","LEGACY_PREDEFINED_VARS","OFFSET_ANY_PATTERN","RANGE_VALUE_RE","RegExp","OFFSET_ANY_PATTERN_RE","LAYER_KEYWORD_PARAMS","font_weight","font_style","text_decoration","text_align","stroke","smartEscape","unsafe","c","charCodeAt","toUpperCase","snakeCase","str","letter","Layer","ref","resourceType","type","publicId","getPublicId","getFullPublicId","components","x","clone","isEmpty","trim","isNumberLike","parseFloat","TextLayer","fontFamily","fontSize","fontWeight","fontStyle","textDecoration","textAlign","letterSpacing","lineSpacing","fontHinting","fontAntialiasing","text","hasPublicId","hasStyle","re","res","start","textSource","style","textStyleIdentifier","exec","index","unshift","textStyle","layer","keywords","default_value","attr","attr_value","pop","hasOwnProperty","font_size","font_family","processLayer","resource_type","public_id","noPublicId","noStyle","decodeURIComponent","encodeURIComponent","test","legacyNormalizeExpression","expression","operatorsReplaceRE","predefinedVarsPattern","variablesReplaceRE","toArray","arg","processCustomFunction","function_type","encodedSource","splitRange","range","normRangeValues","offset","modifier","Expression","expressionStr","expressions","normalize","predefinedVarsReplaceRE","OPERATORS","PREDEFINED_VARS","p1","serialize","getParent","parent","setParent","predicate","operator","and","or","then","if","height","width","aspectRatio","pageCount","faceCount","Condition","conditionStr","duration","initialDuration","location","protocol","HASH_UNDEFINED","MAX_SAFE_INTEGER","argsTag","boolTag","dateTag","funcTag","genTag","mapTag","numberTag","objectTag","promiseTag","regexpTag","setTag","stringTag","symbolTag","weakMapTag","arrayBufferTag","dataViewTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","reFlags","reIsHostCtor","reIsUint","cloneableTags","freeGlobal","freeSelf","self","root","Function","freeExports","exports","nodeType","freeModule","module","moduleExports","addMapEntry","pair","addSetEntry","add","arrayReduce","iteratee","accumulator","initAccum","isHostObject","mapToArray","size","overArg","func","transform","setToArray","arrayProto","prototype","funcProto","objectProto","coreJsData","maskSrcKey","uid","IE_PROTO","funcToString","objectToString","reIsNative","call","undefined","Symbol","Uint8Array","getPrototype","getPrototypeOf","objectCreate","propertyIsEnumerable","splice","nativeGetSymbols","getOwnPropertySymbols","nativeIsBuffer","isBuffer","nativeKeys","DataView","getNative","Promise","Set","WeakMap","nativeCreate","dataViewCtorString","toSource","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","symbolProto","symbolValueOf","valueOf","Hash","clear","entry","ListCache","MapCache","Stack","__data__","arrayLikeKeys","inherited","isObjectLike","isArrayLike","isArrayLikeObject","n","baseTimes","skipIndexes","assignValue","object","objValue","eq","assocIndexOf","baseClone","isDeep","isFull","customizer","stack","isArr","initCloneArray","copyArray","getTag","isFunc","buffer","copy","cloneBuffer","isPrototype","proto","baseCreate","copyObject","getSymbols","cloneFunc","Ctor","cloneArrayBuffer","dataView","byteOffset","byteLength","cloneDataView","typedArray","cloneTypedArray","cloneMap","regexp","lastIndex","cloneRegExp","cloneSet","symbol","cloneSymbol","initCloneByTag","props","stacked","arrayEach","keysFunc","symbolsFunc","arrayPush","baseGetAllKeys","subValue","baseIsNative","isFunction","arrayBuffer","newValue","getMapData","data","delete","has","cache","pairs","LARGE_ARRAY_SIZE","other","ArrayBuffer","resolve","ctorString","withCamelCaseKeys","converter","convertKeys","camelCase","words","reWords","word","charAt","toLocaleUpperCase","toLocaleLowerCase","upper","identity","contains","i","SubtitlesLayer","FetchLayer","variableToCheck","URL_KEYS","assignNotNull","target","sources","Param","shortName","origValue","valid","param","codec","profile","level","ArrayParam","sep","arrayValue","flat","t","TransformationParam","list","every","joined","origValue1","RangeParam","norm_range_value","RawParam","LayerParam","layerOptions","TransformationBase","trans","toOptions","opt","withChain","otherOptions","chained","tr","fromOptions","abbr","defaultValue","rawParam","lastArgCallback","rangeParam","arrayParam","transformationParam","layerParam","remove","temp","results","VAR_NAME_RE","toPlainObject","hash","chain","getOwnPropertyNames","resetTransformations","fromTransformation","camelKey","methods","hasLayer","j","len","ref3","transformationList","vars","arr2","resultArray","paramList","transformations","ifParam","ref1","variables","varArray","processVar","ref2","ref4","k","len1","param_separator","trans_separator","toHtmlAttributes","attrName","snakeCaseKey","PARAM_NAMES","toHtml","args","callback","angle","audioCodec","audioFrequency","background","norm_color","bitRate","crop","customPreFunction","delay","else","endIf","endOffset","fallbackContent","fetchFormat","gravity","fps","htmlHeight","htmlWidth","ifVal","trIf","trRest","new","keyframeInterval","ocr","start_o","end_o","startOffset","opacity","page","poster","radius","rawTransformation","sourceTypes","sourceTransformation","streamingProfile","variable","videoCodec","process_video_params","videoSampling","y","zoom","ssmedia","transformationStringFromObject","generateTransformationString","transformationOptions","singleTransformation","processDpr","_radius","findIndex","processRadius","ifValue","custom_function","custom_pre_function","namedTransformations","childTransformations","sizeWidth","no_html_sizes","sizeHeight","isAnyChildAnObject","some","urlParams","ar","aspect_ratio","b","bo","co","fl","fn","h","ki","keyframe_interval","l","o","q","r","u","w","z","ac","audio_codec","af","audio_frequency","br","bit_rate","cs","color_space","d","default_image","dl","dn","du","eo","end_offset","f","fetch_format","g","pg","p","so","start_offset","sp","streaming_profile","vc","processVideoParams","video_codec","vs","video_sampling","startsWith","urlImageTransfomrations","finalTransformationString","raw_transformation","editor","init","openCloudinaryBrowser","bind","insertImageHandler","insertLinkHandler","insertText","translate","editText","fileText","ui","registry","addButton","title","icon","cmd","onAction","execCommand","stateSelector","addMenuItem","addCommand","insertHandler","CLOUDINARY_CONFIG","multiple","navigator","userAgent","username","timestamp","cloudinary","openMediaLibrary","cloudinaryInstance","cloud_name","response","asset","assets","defaultTransformations","getParam","defaultAltText","context","custom","alt","defaultTitle","caption","altText","prompt","titleText","img","document","createElement","src","outerHTML","secureUrl","derived","secure_url","linkText","selection","getContent","defaultDescription","description","titleAttribute","link","tinymce","PluginManager"],"mappings":"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","file":"tinymce.js","sourcesContent":["/**\n * @summary SDK\n * @memberOf SDK\n */\nclass QualifierValue {\n    /**\n     *\n     * @param {QualifierValue | QualifierValue[] | any[] | string | number}qualifierValue\n     */\n    constructor(qualifierValue) {\n        this.values = [];\n        this.delimiter = ':'; // {value}{delimiter}{value}...\n        if (this.hasValue(qualifierValue)) {\n            this.addValue(qualifierValue);\n        }\n    }\n    /**\n     * @description Joins the provided values with the provided delimiter\n     */\n    toString() {\n        return this.values.join(this.delimiter);\n    }\n    /**\n     * @description Checks if the provided argument has a value\n     * @param {any} v\n     * @private\n     * @return {boolean}\n     */\n    hasValue(v) {\n        return typeof v !== 'undefined' && v !== null && v !== '';\n    }\n    /**\n     * @desc Adds a value for the this qualifier instance\n     * @param {any} value\n     * @return {this}\n     */\n    addValue(value) {\n        // Append value or array of values\n        if (Array.isArray(value)) {\n            this.values = this.values.concat(value);\n        }\n        else {\n            this.values.push(value);\n        }\n        // Remove falsy values\n        this.values = this.values.filter((v) => this.hasValue(v));\n        return this;\n    }\n    /**\n     * @description Sets the delimiter for this instance\n     * @param delimiter\n     */\n    setDelimiter(delimiter) {\n        this.delimiter = delimiter;\n        return this;\n    }\n}\nexport { QualifierValue };\n","class UnsupportedError extends Error {\n    constructor(message = 'Unsupported') {\n        super(message);\n    }\n}\n/**\n * Creates a new UnsupportedError\n * @param message\n */\nfunction createUnsupportedError(message) {\n    return new UnsupportedError(message);\n}\nexport { UnsupportedError, createUnsupportedError };\n","import { qualifierToJson } from \"./qualifierToJson.js\";\nexport class QualifierModel {\n    constructor() {\n        this._qualifierModel = {};\n    }\n    toJson() {\n        return qualifierToJson.apply(this);\n    }\n}\n","import { createUnsupportedError } from \"../utils/unsupportedError.js\";\n/**\n * Returns the action's model\n */\nexport function qualifierToJson() {\n    return this._qualifierModel || { error: createUnsupportedError(`unsupported qualifier ${this.constructor.name}`) };\n}\n","import { QualifierValue } from './QualifierValue.js';\nimport { QualifierModel } from '../models/QualifierModel.js';\n/**\n * @summary SDK\n * @memberOf SDK\n */\nclass Qualifier extends QualifierModel {\n    constructor(key, qualifierValue) {\n        super();\n        this.delimiter = '_'; // {key}{delimiter}{qualifierValue}\n        this.key = key;\n        if (qualifierValue instanceof QualifierValue) {\n            this.qualifierValue = qualifierValue;\n        }\n        else {\n            this.qualifierValue = new QualifierValue();\n            this.qualifierValue.addValue(qualifierValue);\n        }\n    }\n    toString() {\n        const { key, delimiter, qualifierValue } = this;\n        return `${key}${delimiter}${qualifierValue.toString()}`;\n    }\n    addValue(value) {\n        this.qualifierValue.addValue(value);\n        return this;\n    }\n}\nexport { Qualifier };\n","import { QualifierValue } from \"../../internal/qualifier/QualifierValue.js\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\n/**\n * @memberOf Qualifiers.Flag\n * @extends {SDK.Qualifier}\n * @description the FlagQualifier class\n */\nclass FlagQualifier extends Qualifier {\n    constructor(flagType, flagValue) {\n        let qualifierValue;\n        if (flagValue) {\n            qualifierValue = new QualifierValue([flagType, `${flagValue}`]).setDelimiter(':');\n        }\n        else {\n            qualifierValue = flagType;\n        }\n        super('fl', qualifierValue);\n        this.flagValue = flagValue;\n    }\n    toString() {\n        return super.toString().replace(/\\./g, '%2E');\n    }\n    getFlagValue() {\n        return this.flagValue;\n    }\n}\nexport { FlagQualifier };\n","import { actionToJson } from \"./actionToJson.js\";\nexport class ActionModel {\n    constructor() {\n        this._actionModel = {};\n    }\n    toJson() {\n        return actionToJson.apply(this);\n    }\n}\n","import { createUnsupportedError } from \"../utils/unsupportedError.js\";\n/**\n * Returns the action's model\n */\nexport function actionToJson() {\n    var _a, _b, _c;\n    const actionModelIsNotEmpty = this._actionModel && Object.keys(this._actionModel).length;\n    const sourceTransformationError = (_c = (_b = (_a = this._actionModel) === null || _a === void 0 ? void 0 : _a.source) === null || _b === void 0 ? void 0 : _b.transformation) === null || _c === void 0 ? void 0 : _c.error;\n    // Should return error when there is unsupported transformation inside\n    if (sourceTransformationError && sourceTransformationError instanceof Error) {\n        return { error: sourceTransformationError };\n    }\n    if (actionModelIsNotEmpty) {\n        return this._actionModel;\n    }\n    return { error: createUnsupportedError(`unsupported action ${this.constructor.name}`) };\n}\n","import { FlagQualifier } from \"../qualifiers/flag/FlagQualifier.js\";\nimport { Qualifier } from \"./qualifier/Qualifier.js\";\nimport { mapToSortedArray } from \"./utils/dataStructureUtils.js\";\nimport { ActionModel } from \"./models/ActionModel.js\";\n/**\n * @summary SDK\n * @memberOf SDK\n * @description Defines the category of transformation to perform.\n */\nclass Action extends ActionModel {\n    constructor() {\n        super(...arguments);\n        // We're using map, to overwrite existing keys. for example:\n        // addParam(w_100).addQualifier(w_200) should result in w_200. and not w_100,w_200\n        this.qualifiers = new Map();\n        // Unlike regular qualifiers, there can be multiple flags in each url component /fl_1,fl_2/\n        // If the falgs are added to the qualifiers map, only a single flag could exist in a component (it's a map)\n        // So flags are stored separately until the very end because of that reason\n        this.flags = [];\n        this.delimiter = ','; // {qualifier}{delimiter}{qualifier} for example: `${'w_100'}${','}${'c_fill'}`\n        this.actionTag = ''; // A custom name tag to identify this action in the future\n    }\n    prepareQualifiers() { }\n    /**\n     * @description Returns the custom name tag that was given to this action\n     * @return {string}\n     */\n    getActionTag() {\n        return this.actionTag;\n    }\n    /**\n     * @description Sets the custom name tag for this action\n     * @return {this}\n     */\n    setActionTag(tag) {\n        this.actionTag = tag;\n        return this;\n    }\n    /**\n     * @description Calls toString() on all child qualifiers (implicitly by using .join()).\n     * @return {string}\n     */\n    toString() {\n        this.prepareQualifiers();\n        return mapToSortedArray(this.qualifiers, this.flags).join(this.delimiter);\n    }\n    /**\n     * @description Adds the parameter to the action.\n     * @param {SDK.Qualifier} qualifier\n     * @return {this}\n     */\n    addQualifier(qualifier) {\n        // if string, find the key and value\n        if (typeof qualifier === 'string') {\n            const [key, value] = qualifier.toLowerCase().split('_');\n            if (key === 'fl') {\n                // if string qualifier is a flag, store it in the flags arrays\n                this.flags.push(new FlagQualifier(value));\n            }\n            else {\n                // if the string qualifier is not a flag, create a new qualifier from it\n                this.qualifiers.set(key, new Qualifier(key, value));\n            }\n        }\n        else {\n            // if a qualifier object, insert to the qualifiers map\n            this.qualifiers.set(qualifier.key, qualifier);\n        }\n        return this;\n    }\n    /**\n     * @description Adds a flag to the current action.\n     * @param {Qualifiers.Flag} flag\n     * @return {this}\n     */\n    addFlag(flag) {\n        if (typeof flag === 'string') {\n            this.flags.push(new FlagQualifier(flag));\n        }\n        else {\n            if (flag instanceof FlagQualifier) {\n                this.flags.push(flag);\n            }\n        }\n        return this;\n    }\n    addValueToQualifier(qualifierKey, qualifierValue) {\n        this.qualifiers.get(qualifierKey).addValue(qualifierValue);\n        return this;\n    }\n}\nexport { Action };\n","/**\n * Sort a map by key\n * @private\n * @param map <string, any>\n * @Return array of map's values sorted by key\n */\nfunction mapToSortedArray(map, flags) {\n    const array = Array.from(map.entries());\n    // objects from the Array.from() method above are stored in array of arrays:\n    // [[qualifierKey, QualifierObj], [qualifierKey, QualifierObj]]\n    // Flags is an array of FlagQualifierObj\n    // We need to convert it to the same form: [flagQualifier] =>  ['fl', flagQualifier]\n    flags.forEach((flag) => {\n        array.push(['fl', flag]); // push ['fl', flagQualifier]\n    });\n    return array.sort().map((v) => v[1]);\n}\n/**\n * Checks if `value` is a string.\n * @private\n * @param {*} value The value to check.\n * @return {boolean} `true` if `value` is a string, else `false`.\n */\nfunction isString(value) {\n    return (typeof value === 'string' || value instanceof String);\n}\nexport { isString, mapToSortedArray };\n","import { Action } from \"../../../internal/Action.js\";\nimport { QualifierValue } from \"../../../internal/qualifier/QualifierValue.js\";\nimport { Qualifier } from \"../../../internal/qualifier/Qualifier.js\";\nimport { prepareColor } from \"../../../internal/utils/prepareColor.js\";\n/**\n * @extends SDK.Action\n * @description A class for background transformations.\n */\nclass BackgroundColor extends Action {\n    constructor(color) {\n        super();\n        this._actionModel = {};\n        this.addQualifier(new Qualifier('b', new QualifierValue(prepareColor(color)).setDelimiter('_')));\n        this._actionModel.color = color;\n        this._actionModel.actionType = 'backgroundColor';\n    }\n    static fromJson(actionModel) {\n        const { color } = actionModel;\n        // We are using this() to allow inheriting classes to use super.fromJson.apply(this, [actionModel])\n        // This allows the inheriting classes to determine the class to be created\n        const result = new this(color);\n        return result;\n    }\n}\nexport { BackgroundColor };\n","/**\n * Returns RGB or Color\n * @private\n * @param color\n */\nexport function prepareColor(color) {\n    if (color) {\n        return color.match(/^#/) ? `rgb:${color.substr(1)}` : color;\n    }\n    else {\n        return color;\n    }\n}\n","import { createUnsupportedError } from \"./utils/unsupportedError.js\";\n/**\n * @summary SDK\n * @memberOf SDK\n * @description Defines an action that's a string literal, no validations or manipulations are performed\n */\nclass RawAction {\n    constructor(raw) {\n        this.raw = raw;\n    }\n    toString() {\n        return this.raw;\n    }\n    toJson() {\n        return { error: createUnsupportedError(`unsupported action ${this.constructor.name}`) };\n    }\n}\nexport { RawAction };\n","/**\n * @description Defines flags that you can use to alter the default transformation behavior.\n * @namespace Flag\n * @memberOf Qualifiers\n */\nimport { FlagQualifier } from \"./flag/FlagQualifier.js\";\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Used when delivering a video file as an image format that supports animation, such as animated WebP.\n * Plays all frames rather than just delivering the first one as a static image.\n * Use this flag in addition to the flag or parameter controlling the delivery format,\n * for example f_auto or fl_awebp.\n\n * Note: When delivering a video in GIF format, it is delivered as an animated GIF by default and this flag is not\n * necessary. To deliver a single frame of a video in GIF format, use the page parameter.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction animated() {\n    return new FlagQualifier('animated');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description When converting animated images to WebP format, generate an animated WebP from all the frames in the\n * original\n * animated file instead of only from the first still frame.\n *\n * Note that animated WebPs are not supported in all browsers and versions.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction animatedWebP() {\n    return new FlagQualifier('awebp');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description When used together with automatic quality (q_auto):\n * allow switching to PNG8 encoding if the quality algorithm decides that it's more efficient.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction anyFormat() {\n    return new FlagQualifier('any_format');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description When converting animated images to PNG format, generates an animated PNG from all the frames in the\n * original\n * animated file instead of only from the first still frame.\n *\n * Note that animated PNGs are not supported in all browsers and versions.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction animatedPng() {\n    return new FlagQualifier('apng');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Trims pixels according to a clipping path included in the original image\n * (e.g., manually created using PhotoShop).\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction clip() {\n    return new FlagQualifier('clip');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Trims pixels according to a clipping path included in the original image (e.g., manually created\n * using PhotoShop)\n * using an evenodd clipping rule.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction clipEvenOdd() {\n    return new FlagQualifier('clip_evenodd');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Instructs Cloudinary to clear all image meta-data (IPTC, Exif and XMP) while applying an incoming\n * transformation.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction forceStrip() {\n    return new FlagQualifier('force_strip');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Allows custom flag\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction custom(value) {\n    return new FlagQualifier(value);\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Adds ICC color space metadata to the image, even when the original image doesn't contain any ICC data.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction forceIcc() {\n    return new FlagQualifier('force_icc');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Delivers the image as an attachment.\n * @param {string} filename The attachment's filename\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction attachment(filename) {\n    return new FlagQualifier('attachment', filename);\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Returns metadata of the input asset and of the transformed output asset in JSON instead of the\n * transformed image.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction getInfo() {\n    return new FlagQualifier('getinfo');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Deliver an HLS adaptive bitrate streaming file as HLS v3 instead of the default version (HLS v4).\n * Delivering in this format requires a private CDN configuration.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction hlsv3() {\n    return new FlagQualifier('hlsv3');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Sets the cache-control to immutable for the asset.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction immutableCache() {\n    return new FlagQualifier('immutable_cache');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description * Allows specifying only either width or height so the value of the second axis remains as is, and is not\n * recalculated to maintain the aspect ratio of the original image.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction ignoreInitialAspectRatio() {\n    return new FlagQualifier('ignore_aspect_ratio');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Keeps the copyright related fields when stripping meta-data.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction keepAttribution() {\n    return new FlagQualifier('keep_attribution');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * Keep the Display Aspect Ratio metadata of the uploaded video (if it’s different from the current video\n * dimensions).\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction keepDar() {\n    return new FlagQualifier('keep_dar');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Keeps all meta-data.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction keepIptc() {\n    return new FlagQualifier('keep_iptc');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Applies all chained transformations, until a transformation component that includes this flag, on the last added\n * overlay or underlay instead of applying on the containing image.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction layerApply() {\n    return new FlagQualifier('layer_apply');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Automatically use lossy compression when delivering animated GIF files.\n *\n * This flag can also be used as a conditional flag for delivering PNG files: it tells Cloudinary to deliver the\n * image in PNG format (as requested) unless there is no transparency channel - in which case deliver in JPEG\n * format.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction lossy() {\n    return new FlagQualifier('lossy');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Convert the audio channel to mono\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction mono() {\n    return new FlagQualifier('mono');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Used internally by Position within an Overlay, this flag will tile the overlay across your image.\n *\n * <b>Learn more:</b> {@link https://cloudinary.com/documentation/transformation_reference#fl_no_overflow|Overflow in overlays}\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction noOverflow() {\n    return new FlagQualifier('no_overflow');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Don't stream a video that is currently being generated on the fly. Wait until the video is fully generated.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction noStream() {\n    return new FlagQualifier('no_stream');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Generate PNG images in the png24 format.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction png24() {\n    return new FlagQualifier('png24');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Generate PNG images in the png32 format.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction png32() {\n    return new FlagQualifier('png32');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Generate PNG images in the PNG8 format.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction png8() {\n    return new FlagQualifier('png8');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description When used with automatic fetch_format (f_auto): ensures that images with a transparency channel will be\n * delivered in PNG format.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction preserveTransparency() {\n    return new FlagQualifier('preserve_transparency');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Generates a JPG image using the progressive (interlaced) JPG format.\n *\n * This format allows the browser to quickly show a low-quality rendering of the image until the full-quality\n * image is loaded.\n *\n * @param {string} mode? The mode to determine a specific progressive outcome as follows:\n * * semi - A smart optimization of the decoding time, compression level and progressive rendering\n *          (less iterations). This is the default mode when using q_auto.\n * * steep - Delivers a preview very quickly, and in a single later phase improves the image to\n *           the required resolution.\n * * none  - Use this to deliver a non-progressive image. This is the default mode when setting\n *           a specific value for quality.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction progressive(mode) {\n    return new FlagQualifier('progressive', mode);\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Modifies percentage-based width & height parameters of overlays and underlays (e.g., 1.0) to be relative to the overlaid region\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction regionRelative() {\n    return new FlagQualifier('region_relative');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Reduces the image to one flat pixelated layer (as opposed to the default vector based graphic) in\n * order to enable\n * PDF resizing and overlay manipulations.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction rasterize() {\n    return new FlagQualifier('rasterize');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Modifies percentage-based width & height parameters of overlays and underlays (e.g., 1.0) to be relative to the containing image instead of the added layer.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction relative() {\n    return new FlagQualifier('relative');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Instructs Cloudinary to run a sanitizer on the image (relevant only for the SVG format).\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction sanitize() {\n    return new FlagQualifier('sanitize');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Splices the video stipulated as an overlay on to the end of the container video instead of adding it as an\n * overlay.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction splice() {\n    return new FlagQualifier('splice');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Instructs Cloudinary to clear all ICC color profile data included with the image.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction stripProfile() {\n    return new FlagQualifier('strip_profile');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description If the requested video transformation has already been generated, this flag works identically to\n * Flag::attachment.\n *\n *  However, if the video transformation is being requested for the first time, this flag causes the video download\n * to begin immediately, streaming it as a fragmented video file.\n *\n * In contrast, if the regular fl_attachment flag is used when a user requests a new video transformation,\n * the download will begin only after the complete transformed video has been generated.\n *\n * Most standard video players successfully play fragmented video files without issue.\n *\n * @param {string} filename The attachment's filename\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction streamingAttachment(filename) {\n    return new FlagQualifier('streaming_attachment', filename);\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Generates TIFF images using LZW compression and in the TIFF8 format.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction tiff8Lzw() {\n    return new FlagQualifier('tiff8_lzw');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Used internally by Position within an Overlay, this flag will tile the overlay across your image.\n *\n * <b>Learn more:</b> {@link https://cloudinary.com/documentation/layers#automatic_tiling|Tiling overlay}\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction tiled() {\n    return new FlagQualifier('tiled');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Truncate (trim) a video file based on the start time defined in the metadata (relevant only where the metadata\n * includes a directive to play only a section of the video).\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction truncateTS() {\n    return new FlagQualifier('truncate_ts');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description Create a waveform image (in the format specified by the file extension) from the audio or video file.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction waveform() {\n    return new FlagQualifier('waveform');\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.Flag\n * @description A qualifier that ensures that an alpha channel is not applied to a TIFF image if it is a mask channel.\n * @return {Qualifiers.Flag.FlagQualifier}\n */\nfunction ignoreMaskChannels() {\n    return new FlagQualifier('ignore_mask_channels');\n}\nconst Flag = {\n    animated, anyFormat, animatedPng, animatedWebP,\n    clipEvenOdd, lossy, preserveTransparency, png8, png24, png32, progressive, rasterize,\n    sanitize, stripProfile, tiff8Lzw, attachment, forceIcc, forceStrip, getInfo, immutableCache,\n    keepAttribution, keepIptc, custom, streamingAttachment, hlsv3, keepDar, noStream, mono,\n    layerApply, relative, regionRelative, splice, truncateTS, waveform, ignoreInitialAspectRatio, clip,\n    tiled, noOverflow, ignoreMaskChannels\n};\nexport { Flag, animated, anyFormat, animatedPng, animatedWebP, clipEvenOdd, lossy, preserveTransparency, png8, png24, png32, progressive, rasterize, sanitize, stripProfile, tiff8Lzw, attachment, forceIcc, forceStrip, getInfo, immutableCache, keepAttribution, keepIptc, custom, streamingAttachment, hlsv3, keepDar, noStream, mono, layerApply, relative, regionRelative, splice, truncateTS, waveform, ignoreInitialAspectRatio, clip, tiled, noOverflow, ignoreMaskChannels };\n","import { QualifierValue } from \"../../internal/qualifier/QualifierValue.js\";\n/**\n * @memberOf Qualifiers.Format\n * @extends {SDK.QualifierValue}\n */\nclass FormatQualifier extends QualifierValue {\n    constructor(val) {\n        super(val);\n        this.val = val;\n    }\n    getValue() {\n        return this.val;\n    }\n}\nexport { FormatQualifier };\n","/**\n * Flip keys and values for given object\n * @param obj\n */\nfunction objectFlip(obj) {\n    const result = {};\n    Object.keys(obj).forEach((key) => {\n        result[obj[key]] = key;\n    });\n    return result;\n}\nexport { objectFlip };\n","/**\n * This file is for internal constants only.\n * It is not intended for public use and is not part of the public API\n */\nimport { objectFlip } from \"./utils/objectFlip.js\";\nexport const CONDITIONAL_OPERATORS = {\n    \"=\": \"eq\",\n    \"!=\": \"ne\",\n    \"<\": \"lt\",\n    \">\": \"gt\",\n    \"<=\": \"lte\",\n    \">=\": \"gte\",\n    \"&&\": \"and\",\n    \"||\": \"or\",\n    \"*\": \"mul\",\n    \"/\": \"div\",\n    \"+\": \"add\",\n    \"-\": \"sub\",\n    \"^\": \"pow\"\n};\nexport const RESERVED_NAMES = {\n    \"aspect_ratio\": \"ar\",\n    \"aspectRatio\": \"ar\",\n    \"current_page\": \"cp\",\n    \"currentPage\": \"cp\",\n    \"duration\": \"du\",\n    \"face_count\": \"fc\",\n    \"faceCount\": \"fc\",\n    \"height\": \"h\",\n    \"initial_aspect_ratio\": \"iar\",\n    \"initial_height\": \"ih\",\n    \"initial_width\": \"iw\",\n    \"initialAspectRatio\": \"iar\",\n    \"initialHeight\": \"ih\",\n    \"initialWidth\": \"iw\",\n    \"initial_duration\": \"idu\",\n    \"initialDuration\": \"idu\",\n    \"page_count\": \"pc\",\n    \"page_x\": \"px\",\n    \"page_y\": \"py\",\n    \"pageCount\": \"pc\",\n    \"pageX\": \"px\",\n    \"pageY\": \"py\",\n    \"tags\": \"tags\",\n    \"width\": \"w\",\n    \"trimmed_aspect_ratio\": \"tar\",\n    \"current_public_id\": \"cpi\",\n    \"initial_density\": \"idn\",\n    \"page_names\": \"pgnames\"\n};\nexport const ACTION_TYPE_TO_CROP_MODE_MAP = {\n    limitFit: 'limit',\n    limitFill: 'lfill',\n    minimumFit: 'mfit',\n    thumbnail: 'thumb',\n    limitPad: 'lpad',\n    minimumPad: 'mpad',\n    autoPad: 'auto_pad'\n};\nexport const ACTION_TYPE_TO_DELIVERY_MODE_MAP = {\n    colorSpace: 'cs',\n    dpr: 'dpr',\n    density: 'dn',\n    defaultImage: 'd',\n    format: 'f',\n    quality: 'q'\n};\nexport const ACTION_TYPE_TO_EFFECT_MODE_MAP = {\n    redEye: 'redeye',\n    advancedRedEye: 'adv_redeye',\n    oilPaint: 'oil_paint',\n    unsharpMask: 'unsharp_mask',\n    makeTransparent: 'make_transparent',\n    generativeRestore: 'gen_restore',\n    upscale: 'upscale'\n};\nexport const ACTION_TYPE_TO_QUALITY_MODE_MAP = {\n    autoBest: 'auto:best',\n    autoEco: 'auto:eco',\n    autoGood: 'auto:good',\n    autoLow: 'auto:low',\n    jpegminiHigh: 'jpegmini:1',\n    jpegminiMedium: 'jpegmini:2',\n    jpegminiBest: 'jpegmini:0'\n};\nexport const ACTION_TYPE_TO_STREAMING_PROFILE_MODE_MAP = {\n    fullHd: 'full_hd',\n    fullHdWifi: 'full_hd_wifi',\n    fullHdLean: 'full_hd_lean',\n    hdLean: 'hd_lean'\n};\nexport const CHROMA_VALUE_TO_CHROMA_MODEL_ENUM = {\n    444: \"CHROMA_444\",\n    420: \"CHROMA_420\"\n};\nexport const COLOR_SPACE_MODEL_MODE_TO_COLOR_SPACE_MODE_MAP = {\n    'noCmyk': 'no_cmyk',\n    'keepCmyk': 'keep_cmyk',\n    'tinySrgb': 'tinysrgb',\n    'srgbTrueColor': 'srgb:truecolor'\n};\nexport const ACTION_TYPE_TO_BLEND_MODE_MAP = {\n    'antiRemoval': 'anti_removal'\n};\nexport const CHROMA_MODEL_ENUM_TO_CHROMA_VALUE = objectFlip(CHROMA_VALUE_TO_CHROMA_MODEL_ENUM);\nexport const COLOR_SPACE_MODE_TO_COLOR_SPACE_MODEL_MODE_MAP = objectFlip(COLOR_SPACE_MODEL_MODE_TO_COLOR_SPACE_MODE_MAP);\nexport const CROP_MODE_TO_ACTION_TYPE_MAP = objectFlip(ACTION_TYPE_TO_CROP_MODE_MAP);\nexport const DELIVERY_MODE_TO_ACTION_TYPE_MAP = objectFlip(ACTION_TYPE_TO_DELIVERY_MODE_MAP);\nexport const EFFECT_MODE_TO_ACTION_TYPE_MAP = objectFlip(ACTION_TYPE_TO_EFFECT_MODE_MAP);\nexport const QUALITY_MODE_TO_ACTION_TYPE_MAP = objectFlip(ACTION_TYPE_TO_QUALITY_MODE_MAP);\nexport const STREAMING_PROFILE_TO_ACTION_TYPE_MAP = objectFlip(ACTION_TYPE_TO_STREAMING_PROFILE_MODE_MAP);\n","import { Action } from \"../../internal/Action.js\";\nimport { FormatQualifier } from \"../../qualifiers/format/FormatQualifier.js\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\nimport { DELIVERY_MODE_TO_ACTION_TYPE_MAP } from \"../../internal/internalConstants.js\";\n/**\n * @description Qualifies the delivery of an asset.\n * @memberOf Actions.Delivery\n * @extends SDK.Action\n */\nclass DeliveryAction extends Action {\n    /**\n     * @param {string} deliveryKey A generic Delivery Action Key (such as q, f, dn, etc.)\n     * @param {string} deliveryType A Format Qualifiers for the action, such as Quality.auto()\n     * @param {string} modelProperty internal model property of the action, for example quality uses `level` while dpr uses `density`\n     * @see Visit {@link Actions.Delivery|Delivery} for an example\n     */\n    constructor(deliveryKey, deliveryType, modelProperty) {\n        super();\n        this._actionModel = {};\n        let deliveryTypeValue;\n        if (deliveryType instanceof FormatQualifier) {\n            deliveryTypeValue = deliveryType.getValue();\n        }\n        else {\n            deliveryTypeValue = deliveryType;\n        }\n        this._actionModel.actionType = DELIVERY_MODE_TO_ACTION_TYPE_MAP[deliveryKey];\n        this._actionModel[modelProperty] = deliveryTypeValue;\n        this.addQualifier(new Qualifier(deliveryKey, deliveryType));\n    }\n}\nexport { DeliveryAction };\n","/**\n * @description Contains functions to select the mode when using a progressive format.\n * <b>Learn more</b>: {@link https://cloudinary.com/documentation/transformation_reference#fl_progressive|Progressive modes}\n * @memberOf Qualifiers\n * @namespace Progressive\n * @example\n * import {Cloudinary} from \"@cloudinary/url-gen\";\n * import {format} from \"@cloudinary/url-gen/actions/delivery\";\n * import {jpg} from \"@cloudinary/url-gen/qualifiers/format\";\n * import {steep} from \"@cloudinary/url-gen/qualifiers/progressive\";\n *\n * const yourCldInstance = new Cloudinary({cloud: {cloudName: 'demo'}});\n * const image = yourCldInstance.image('woman');\n * image.delivery(format(jpg()).progressive(steep()))\n */\nimport { FlagQualifier } from \"./flag/FlagQualifier.js\";\nclass ProgressiveQualifier extends FlagQualifier {\n    constructor(mode) {\n        super('progressive', mode);\n    }\n}\n/**\n * @memberOf Qualifiers.Progressive\n */\nfunction none() {\n    return new ProgressiveQualifier('none');\n}\n/**\n * @memberOf Qualifiers.Progressive\n */\nfunction semi() {\n    return new ProgressiveQualifier('semi');\n}\n/**\n * @memberOf Qualifiers.Progressive\n */\nfunction steep() {\n    return new ProgressiveQualifier('steep');\n}\n/**\n * @memberOf Qualifiers.Progressive\n */\nfunction progressive() {\n    return new ProgressiveQualifier();\n}\nconst Progressive = {\n    semi,\n    none,\n    steep,\n    progressive,\n    ProgressiveQualifier\n};\nexport { Progressive, semi, none, steep, progressive, ProgressiveQualifier };\n","import { lossy, preserveTransparency, progressive } from \"../../qualifiers/flag.js\";\nimport { DeliveryAction } from \"./DeliveryAction.js\";\nimport { ProgressiveQualifier } from \"../../qualifiers/progressive.js\";\n/**\n * @memberOf Actions.Delivery\n * @extends {Actions.Delivery.DeliveryAction}\n * @see Visit {@link Actions.Delivery|Delivery} for an example\n */\nclass DeliveryFormatAction extends DeliveryAction {\n    constructor(deliveryKey, deliveryType) {\n        super(deliveryKey, deliveryType, 'formatType');\n    }\n    /**\n     * @description Uses lossy compression when delivering animated GIF files.\n     * @return {this}\n     */\n    lossy() {\n        this._actionModel.lossy = true;\n        this.addFlag(lossy());\n        return this;\n    }\n    /**\n     * @description Uses progressive compression when delivering JPG file format.\n     * @return {this}\n     */\n    progressive(mode) {\n        if (mode instanceof ProgressiveQualifier) {\n            this._actionModel.progressive = { mode: mode.getFlagValue() };\n            this.addFlag(mode);\n        }\n        else {\n            this._actionModel.progressive = { mode: mode };\n            this.addFlag(progressive(mode));\n        }\n        return this;\n    }\n    /**\n     * @description Ensures that images with a transparency channel are delivered in PNG format.\n     */\n    preserveTransparency() {\n        this._actionModel.preserveTransparency = true;\n        this.addFlag(preserveTransparency());\n        return this;\n    }\n    static fromJson(actionModel) {\n        const { formatType, lossy, progressive, preserveTransparency } = actionModel;\n        let result;\n        if (formatType) {\n            result = new this('f', formatType);\n        }\n        else {\n            result = new this('f');\n        }\n        if (progressive) {\n            if (progressive.mode) {\n                result.progressive(progressive.mode);\n            }\n            else {\n                result.progressive();\n            }\n        }\n        lossy && result.lossy();\n        preserveTransparency && result.preserveTransparency();\n        return result;\n    }\n}\nexport { DeliveryFormatAction };\n","import { Action } from \"../internal/Action.js\";\nimport { BackgroundColor } from \"../actions/background/actions/BackgroundColor.js\";\nimport { FlagQualifier } from \"../qualifiers/flag/FlagQualifier.js\";\nimport { RawAction } from \"../internal/RawAction.js\";\nimport { isErrorObject } from \"../internal/models/IErrorObject.js\";\nimport { DeliveryFormatAction } from \"../actions/delivery/DeliveryFormatAction.js\";\n/**\n * @summary SDK\n * @description - Defines how to transform an asset\n * @memberOf SDK\n */\nclass Transformation {\n    constructor() {\n        this.actions = [];\n    }\n    /**\n     * @param {SDK.Action | string} action\n     * @return {this}\n     */\n    addAction(action) {\n        let actionToAdd;\n        if (typeof action === 'string') {\n            if (action.indexOf('/') >= 0) {\n                throw 'addAction cannot accept a string with a forward slash in it - /, use .addTransformation() instead';\n            }\n            else {\n                actionToAdd = new RawAction(action);\n            }\n        }\n        else {\n            actionToAdd = action;\n        }\n        this.actions.push(actionToAdd);\n        return this;\n    }\n    /**\n     * @description Allows the injection of a raw transformation as a string into the transformation, or a Transformation instance that was previously created\n     * @param {string | SDK.Transformation} tx\n     * @example\n     * import {Transformation} from \"@cloudinary/url-gen\";\n     *\n     * const transformation = new Transformation();\n     * transformation.addTransformation('w_100/w_200/w_300');\n     * @return {this}\n     */\n    addTransformation(tx) {\n        if (tx instanceof Transformation) {\n            // Concat the new actions into the existing actions\n            this.actions = this.actions.concat(tx.actions);\n        }\n        else {\n            this.actions.push(new RawAction(tx));\n        }\n        return this;\n    }\n    /**\n     * @return {string}\n     */\n    toString() {\n        return this.actions\n            .map((action) => {\n            return action.toString();\n        })\n            .filter((a) => a)\n            .join('/');\n    }\n    /**\n     * @description Delivers an animated GIF.\n     * @param {AnimatedAction} animatedAction\n     * @return {this}\n     */\n    animated(animatedAction) {\n        return this.addAction(animatedAction);\n    }\n    /**\n     * @description Adds a border around the image.\n     * @param {Border} borderAction\n     * @return {this}\n     */\n    border(borderAction) {\n        return this.addAction(borderAction);\n    }\n    /**\n     * @description Adjusts the shape of the delivered image. </br>\n     * <b>Learn more:</b> {@link https://cloudinary.com/documentation/effects_and_artistic_enhancements#distort|Shape changes and distortion effects}\n     * @param {IReshape} reshapeAction\n     * @return {this}\n     */\n    reshape(reshapeAction) {\n        return this.addAction(reshapeAction);\n    }\n    /**\n     * @description Resize the asset using provided resize action\n     * @param {ResizeSimpleAction} resizeAction\n     * @return {this}\n     */\n    resize(resizeAction) {\n        return this.addAction(resizeAction);\n    }\n    /**\n     * @desc An alias to Action Delivery.quality\n     * @param {string|number} quality\n     * @return {this}\n     */\n    quality(quality) {\n        this.addAction(new DeliveryFormatAction('q', quality));\n        return this;\n    }\n    /**\n     * @desc An alias to Action Delivery.format\n     * @param {string} format\n     * @return {this}\n     */\n    format(format) {\n        this.addAction(new DeliveryFormatAction('f', format));\n        return this;\n    }\n    /**\n     * @description Rounds the specified corners of an image.\n     * @param roundCornersAction\n     * @return {this}\n     */\n    roundCorners(roundCornersAction) {\n        return this.addAction(roundCornersAction);\n    }\n    /**\n     * @description Adds an overlay over the base image.\n     * @param {LayerAction} overlayAction\n     * @return {this}\n     */\n    overlay(overlayAction) {\n        return this.addAction(overlayAction);\n    }\n    /**\n     * @description Adds an underlay under the base image.\n     * @param {LayerAction} underlayAction\n     * @return {this}\n     */\n    underlay(underlayAction) {\n        underlayAction.setLayerType('u');\n        return this.addAction(underlayAction);\n    }\n    /**\n     * @description Defines an new user variable.\n     * @param {VariableAction} variableAction\n     * @return {this}\n     */\n    addVariable(variableAction) {\n        return this.addAction(variableAction);\n    }\n    /**\n     * @description Specifies a condition to be met before applying a transformation.\n     * @param {ConditionalAction} conditionAction\n     * @return {this}\n     */\n    conditional(conditionAction) {\n        return this.addAction(conditionAction);\n    }\n    /**\n     * @description Applies a filter or an effect on an asset.\n     * @param {SimpleEffectAction} effectAction\n     * @return {this}\n     */\n    effect(effectAction) {\n        return this.addAction(effectAction);\n    }\n    /**\n     * @description Applies adjustment effect on an asset.\n     * @param action\n     * @return {this}\n     */\n    adjust(action) {\n        return this.addAction(action);\n    }\n    /**\n     * @description Rotates the asset by the given angle.\n     * @param {RotateAction} rotateAction\n     * @return {this}\n     */\n    rotate(rotateAction) {\n        return this.addAction(rotateAction);\n    }\n    /**\n     * @description Applies a pre-defined named transformation of the given name.\n     * @param {NamedTransformation} namedTransformation\n     * @return {this}\n     */\n    namedTransformation(namedTransformation) {\n        return this.addAction(namedTransformation);\n    }\n    /**\n     * @description Applies delivery action.\n     * @param deliveryAction\n     * @return {this}\n     */\n    delivery(deliveryAction) {\n        return this.addAction(deliveryAction);\n    }\n    /**\n     * @description Sets the color of the background.\n     * @param {Qualifiers.Color} color\n     * @return {this}\n     */\n    backgroundColor(color) {\n        return this.addAction(new BackgroundColor(color));\n    }\n    /**\n     * @description Adds a layer in a Photoshop document.\n     * @param action\n     * @return {this}\n     */\n    psdTools(action) {\n        return this.addAction(action);\n    }\n    /**\n     * @description Extracts an image or a page using an index, a range, or a name from a layered media asset.\n     * @param action\n     * @return {this}\n     */\n    extract(action) {\n        return this.addAction(action);\n    }\n    /**\n     * @description Adds a flag as a separate action.\n     * @param {Qualifiers.Flag | string} flagQualifier\n     * @return {this}\n     */\n    addFlag(flagQualifier) {\n        const action = new Action();\n        let flagToAdd = flagQualifier;\n        if (typeof flagQualifier === 'string') {\n            flagToAdd = new FlagQualifier(flagQualifier);\n        }\n        action.addQualifier(flagToAdd);\n        return this.addAction(action);\n    }\n    /**\n     * @description Inject a custom function into the image transformation pipeline.\n     * @return {this}\n     */\n    customFunction(customFunction) {\n        return this.addAction(customFunction);\n    }\n    /**\n     * Transcodes the video (or audio) to another format.\n     * @param {Action} action\n     * @return {this}\n     */\n    transcode(action) {\n        return this.addAction(action);\n    }\n    /**\n     * Applies the specified video edit action.\n     *\n     * @param {videoEditType} action\n     * @return {this}\n     */\n    videoEdit(action) {\n        return this.addAction(action);\n    }\n    toJson() {\n        const actions = [];\n        for (const action of this.actions) {\n            const json = action.toJson();\n            if (isErrorObject(json)) {\n                // Fail early and return an IErrorObject\n                return json;\n            }\n            actions.push(json);\n        }\n        return { actions };\n    }\n}\nexport { Transformation };\n","/**\n * Validates obj is an instance of IErrorObject\n * @param obj\n */\nfunction isErrorObject(obj) {\n    const errorObj = obj;\n    return ('error' in errorObj) && !!errorObj.error;\n}\nexport { isErrorObject };\n","import { Transformation } from \"./Transformation.js\";\n/**\n * @summary SDK\n * @extends {SDK.Transformation}\n * @memberOf SDK\n */\nclass ImageTransformation extends Transformation {\n}\nexport { ImageTransformation };\n","/**\n *\n * @private\n * @param {any} a\n */\nfunction isObject(a) {\n    if (typeof a !== 'object' || a instanceof Array) {\n        return false;\n    }\n    else {\n        return true;\n    }\n}\nclass Config {\n    filterOutNonSupportedKeys(userProvidedConfig, validKeys) {\n        const obj = Object.create({});\n        if (isObject(userProvidedConfig)) {\n            Object.keys(userProvidedConfig).forEach((key) => {\n                if (validKeys.indexOf(key) >= 0) {\n                    obj[key] = userProvidedConfig[key];\n                }\n                else {\n                    console.warn('Warning - unsupported key provided to configuration: ', key);\n                }\n            });\n            return obj;\n        }\n        else {\n            return Object.create({});\n        }\n    }\n}\nexport default Config;\n","/**\n * This file is for internal constants only.\n * It is not intended for public use and is not part of the public API\n */\n/**\n * @private\n */\nexport const ALLOWED_URL_CONFIG = [\n    'cname',\n    'secureDistribution',\n    'privateCdn',\n    'signUrl',\n    'longUrlSignature',\n    'shorten',\n    'useRootPath',\n    'secure',\n    'forceVersion',\n    'analytics',\n    'queryParams'\n];\n/**\n * @private\n */\nexport const ALLOWED_CLOUD_CONFIG = [\n    'cloudName',\n    'apiKey',\n    'apiSecret',\n    'authToken'\n];\n","import Config from \"./BaseConfig.js\";\nimport { ALLOWED_URL_CONFIG } from \"../internal/internalConstants.js\";\nclass URLConfig extends Config {\n    /**\n     * @param {IURLConfig} userURLConfig\n     */\n    constructor(userURLConfig) {\n        super();\n        const urlConfig = this.filterOutNonSupportedKeys(userURLConfig, ALLOWED_URL_CONFIG);\n        Object.assign(this, {\n            secure: true\n        }, urlConfig);\n    }\n    extend(userURLConfig) {\n        const urlConfig = this.filterOutNonSupportedKeys(userURLConfig, ALLOWED_URL_CONFIG);\n        return new URLConfig(Object.assign({}, this, urlConfig));\n    }\n    /**\n     * @param {string} value Sets the cname\n     */\n    setCname(value) {\n        this.cname = value;\n        return this;\n    }\n    /**\n     * @param {string} value Sets the secureDistribution\n     */\n    setSecureDistribution(value) {\n        this.secureDistribution = value;\n        return this;\n    }\n    /**\n     * @param {boolean} value Sets whether to use a private CDN (Removes cloudName from URL)\n     */\n    setPrivateCdn(value) {\n        this.privateCdn = value;\n        return this;\n    }\n    /**\n     * @param value Sets whether or not to sign the URL\n     */\n    setSignUrl(value) {\n        this.signUrl = value;\n        return this;\n    }\n    /**\n     * @param value Sets whether or not to use a long signature\n     */\n    setLongUrlSignature(value) {\n        this.longUrlSignature = value;\n        return this;\n    }\n    /**\n     * @param value Sets whether or not to shorten the URL\n     */\n    setShorten(value) {\n        this.shorten = value;\n        return this;\n    }\n    /**\n     * @param value Sets whether or not to use a root path\n     */\n    setUseRootPath(value) {\n        this.useRootPath = value;\n        return this;\n    }\n    /**\n     * @param value Sets whether or not to deliver the asset through https\n     */\n    setSecure(value) {\n        this.secure = value;\n        return this;\n    }\n    /**\n     * @param value Sets whether to force a version in the URL\n     */\n    setForceVersion(value) {\n        this.forceVersion = value;\n        return this;\n    }\n    /**\n     * @param params Sets additional params\n     */\n    setQueryParams(params) {\n        this.queryParams = params;\n        return this;\n    }\n}\nexport default URLConfig;\n","/**\n * @private\n * @description Adds left padding to a string with the desired substring the provided number of times\n * @example stringPad(foo, 3, 'a'') // -> aaafoo\n * @param {string} value\n * @param {number} _targetLength\n * @param {string} _padString\n */\nexport function stringPad(value, _targetLength, _padString) {\n    let targetLength = _targetLength >> 0; //truncate if number or convert non-number to 0;\n    let padString = String((typeof _padString !== 'undefined' ? _padString : ' '));\n    if (value.length > targetLength) {\n        return String(value);\n    }\n    else {\n        targetLength = targetLength - value.length;\n        if (targetLength > padString.length) {\n            padString += repeatStringNumTimes(padString, targetLength / padString.length);\n        }\n        return padString.slice(0, targetLength) + String(value);\n    }\n}\n/**\n * @description Repeat a string multiple times, cross-browser-safe alternative to string.repeat()\n * @param string\n * @param _times\n */\nfunction repeatStringNumTimes(string, _times) {\n    let times = _times;\n    let repeatedString = \"\";\n    while (times > 0) {\n        repeatedString += string;\n        times--;\n    }\n    return repeatedString;\n}\n","import { stringPad } from \"./stringPad.js\";\n/**\n * This file maps sequences of 6 bit binary digits to a character in base64.\n * 000000 -> A\n * 110011 -> Z\n * 111111 -> /\n */\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\nconst base64Map = {};\nlet num = 0;\nchars.split('').forEach((char) => {\n    let key = num.toString(2);\n    key = stringPad(key, 6, '0');\n    base64Map[key] = char;\n    num++;\n});\n/**\n * Map of [six-bit binary codes] -> [Base64 characters]\n */\nexport { base64Map };\n","import { base64Map } from \"./base64Map.js\";\nimport { stringPad } from \"./stringPad.js\";\nimport { reverseVersion } from \"./reverseVersion.js\";\nimport { padVersion } from \"./padVersion.js\";\n/**\n * @private\n * @description Encodes a semVer-like version string\n * @param {string} semVer Input can be either x.y.z or x.y\n * @return {string} A string built from 3 characters of the base64 table that encode the semVer\n */\nexport function encodeVersion(semVer) {\n    let strResult = '';\n    // support x.y or x.y.z by using 'parts' as a variable\n    const parts = semVer.split('.').length;\n    const paddedStringLength = parts * 6; // we pad to either 12 or 18 characters\n    // reverse (but don't mirror) the version. 1.5.15 -> 15.5.1\n    const reversedSemver = reverseVersion(semVer);\n    // Pad to two spaces, 15.5.1 -> 15.05.01\n    const paddedSemver = padVersion(reversedSemver);\n    // turn 15.05.01 to a string '150501' then to a number 150501\n    const num = parseInt(paddedSemver.split('.').join(''));\n    // Represent as binary, add left padding to 12 or 18 characters.\n    // 150,501 -> 100100101111100101\n    let paddedBinary = num.toString(2);\n    paddedBinary = stringPad(paddedBinary, paddedStringLength, '0');\n    // Stop in case an invalid version number was provided\n    // paddedBinary must be built from sections of 6 bits\n    if (paddedBinary.length % 6 !== 0) {\n        throw 'Version must be smaller than 43.21.26)';\n    }\n    // turn every 6 bits into a character using the base64Map\n    paddedBinary.match(/.{1,6}/g).forEach((bitString) => {\n        // console.log(bitString);\n        strResult += base64Map[bitString];\n    });\n    return strResult;\n}\n","import { stringPad } from \"./stringPad.js\";\n/**\n * @private\n * @description Pads each segment with '0' so they have length of 2\n * @param {string} semVer Input can be either x.y.z or x.y\n * @return {string} in the form of xx.yy.zz (\n */\nexport function padVersion(semVer) {\n    if (semVer.split('.').length < 2) {\n        throw new Error('invalid semVer, must have at least two segments');\n    }\n    // Split by '.', reverse, create new array with padded values and concat it together\n    return semVer.split('.').map((segment) => {\n        // try to cast to number\n        const asNumber = +segment;\n        if (isNaN(asNumber) || asNumber < 0) {\n            throw 'Invalid version number provided';\n        }\n        return stringPad(segment, 2, '0');\n    }).join('.');\n}\n","/**\n * @private\n * @description Reverses the version positions, x.y.z turns to z.y.x\n *              Example: 1.2.3 -> 03.02.01\n * @param {string} semVer Input can be either x.y.z or x.y\n * @return {string} in the form of zz.yy.xx (\n */\nexport function reverseVersion(semVer) {\n    if (semVer.split('.').length < 2) {\n        throw new Error('invalid semVer, must have at least two segments');\n    }\n    // Split by '.', reverse, create new array\n    return semVer.split('.').reverse().join('.');\n}\n","const packageVersion = '1.21.0';\n/**\n * Export package version (injected during our build).\n * Reason for this is that If we import values from from package.json,\n * it will cause an error for users who do not have an 'import from json' plugin\n * as part of their build process / bundler.\n */\nexport { packageVersion };\n","import { encodeVersion } from \"./encodeVersion.js\";\nimport { getAnalyticsOptions } from \"./getAnalyticsOptions.js\";\nimport { packageVersion } from \"../internal/utils/packageVersion.js\";\nimport { encodeOSVersion } from \"./encodeOSVersion.js\";\n/**\n * @private\n * @description Try to get the node version out of process, if browser just return 0.0.0\n */\nfunction getNodeVersion() {\n    const failedVersion = '0.0.0';\n    if (typeof window !== 'undefined') {\n        return failedVersion;\n    }\n    else {\n        // node env\n        try {\n            return process.versions.node || failedVersion;\n        }\n        catch (e) {\n            return failedVersion;\n        }\n    }\n}\n/**\n * @private\n * @description Ensure that all values ITrackedPropertiesThroughAnalytics are populated.\n * Accept a partial map of values and returns the complete interface of ITrackedPropertiesThroughAnalytics\n * @param {ITrackedPropertiesThroughAnalytics} trackedAnalytics\n * @param {ITrackedPropertiesThroughAnalytics} trackedAnalytics\n */\nfunction ensureShapeOfTrackedProperties(trackedAnalytics) {\n    // try to get the process version from node, but if we're on the client return 0.0.0\n    const defaults = {\n        techVersion: getNodeVersion(),\n        sdkCode: 'T',\n        sdkSemver: packageVersion.split('-')[0],\n        product: 'A',\n        osType: 'Z',\n        osVersion: '0.0',\n        responsive: false,\n        placeholder: false,\n        lazyload: false,\n        accessibility: false\n    };\n    if (!trackedAnalytics) {\n        return defaults;\n    }\n    else {\n        return Object.assign(Object.assign({}, defaults), trackedAnalytics);\n    }\n}\n/**\n * @private\n * @description Creates the complete SDK signature by using all the values provided by ITrackedPropertiesThroughAnalytics\n *              Creation of the signature\n *              - Set the AlgoVersion of the encoding, this is an internal letter that represents the version\n *                of our encoding algorithm, it will allow us to perform breaking changes if we'll need them.\n *              - Take the constant SDK code (Arbitrary letter chosen for each SDK, for Base that letter is 'T')\n *                this is used to tell apart which SDK is being tracked.\n *              - Take the {major.minor} versions of the node version (techVersion) (14.2, 16.2 etc.)\n *              - Take the full semver of the SDK you wish to track\n *              - Take the features used(lazy, placeholder etc.) and turn them to a letter (for example accessibility -> D)\n *              - Before appending the string, the Versions must be encoded, see the function `encodeVersion` for more details\n *              - Append all the variables to a single string\n *              - In any case of an error, return the single letter 'E'\n *\n * @return {string} sdkAnalyticsSignature\n */\nexport function getSDKAnalyticsSignature(_trackedAnalytics) {\n    const trackedAnalytics = ensureShapeOfTrackedProperties(_trackedAnalytics);\n    const analyticsOptions = getAnalyticsOptions(trackedAnalytics);\n    try {\n        const twoPartVersion = removePatchFromSemver(analyticsOptions.techVersion);\n        const encodedSDKVersion = encodeVersion(analyticsOptions.sdkSemver);\n        const encodedTechVersion = encodeVersion(twoPartVersion);\n        const encodedOSVersion = encodeOSVersion(analyticsOptions.osVersion);\n        const featureCode = analyticsOptions.feature;\n        const SDKCode = analyticsOptions.sdkCode;\n        const { product, osType } = analyticsOptions;\n        const algoVersion = 'D'; // The algo version is determined here, it should not be an argument\n        return `${algoVersion}${product}${SDKCode}${encodedSDKVersion}${encodedTechVersion}${osType}${encodedOSVersion}${featureCode}`;\n    }\n    catch (e) {\n        // Either SDK or Node versions were unparsable\n        return 'E';\n    }\n}\n/**\n * @private\n * @description Removes patch version from the semver if it exists\n *              Turns x.y.z OR x.y into x.y\n * @param {'x.y.z' | 'x.y' | string} semVerStr\n */\nfunction removePatchFromSemver(semVerStr) {\n    const parts = semVerStr.split('.');\n    return `${parts[0]}.${parts[1]}`;\n}\n","/**\n * @private\n * @description Gets the analyticsOptions from options- should include sdkSemver, techVersion, sdkCode, and feature\n * @param {ITrackedPropertiesThroughAnalytics} options\n * @returns {IAnalyticsOptions}\n */\nexport function getAnalyticsOptions(options) {\n    const analyticsOptions = {\n        sdkSemver: options.sdkSemver,\n        techVersion: options.techVersion,\n        sdkCode: options.sdkCode,\n        product: options.product,\n        feature: '0',\n        osType: options.osType,\n        osVersion: options.osVersion,\n    };\n    if (options.accessibility) {\n        analyticsOptions.feature = 'D';\n    }\n    if (options.lazyload) {\n        analyticsOptions.feature = 'C';\n    }\n    if (options.responsive) {\n        analyticsOptions.feature = 'A';\n    }\n    if (options.placeholder) {\n        analyticsOptions.feature = 'B';\n    }\n    return analyticsOptions;\n}\n","import { base64Map } from \"./base64Map.js\";\n/**\n * @private\n * @description Encodes a semVer-like version string for OS\n * @param {string} semVer Input is x.y\n * @return {string} A string built from 2 characters of the base64 table that encode the semVer\n */\nexport function encodeOSVersion(semVer) {\n    const [major, minor] = semVer.split('.');\n    //convert to binary\n    const binaryMajorVersion = parseInt(major).toString(2);\n    const binaryMinorVersion = parseInt(minor).toString(2);\n    //pad to 6\n    const paddedMajor = binaryMajorVersion.padStart(6, '0');\n    const paddedMinor = binaryMinorVersion.padStart(6, '0');\n    return base64Map[paddedMajor] + base64Map[paddedMinor];\n}\n","import { getUrlPrefix, getUrlVersion, handleAssetType, handleDeliveryType } from \"../internal/url/cloudinaryURL.js\";\nimport URLConfig from \"../config/URLConfig.js\";\nimport { getSDKAnalyticsSignature } from \"../sdkAnalytics/getSDKAnalyticsSignature.js\";\n/**\n * This const contains all the valid combination of asset/delivery for URL shortening purposes\n * It's exported because it's used in a test, but it's not really shared enough to belong in a separate file\n */\nexport const SEO_TYPES = {\n    \"image/upload\": \"images\",\n    \"image/private\": \"private_images\",\n    \"image/authenticated\": \"authenticated_images\",\n    \"raw/upload\": \"files\",\n    \"video/upload\": \"videos\"\n};\n/**\n * @description Cloudinary file without a transformation\n * @summary SDK\n * @memberOf SDK\n */\nclass CloudinaryFile {\n    constructor(publicID, cloudConfig = {}, urlConfig) {\n        this.setPublicID(publicID);\n        this.setCloudConfig(cloudConfig);\n        this.setURLConfig(urlConfig);\n    }\n    /**\n     * @description Sets the URL Config for this asset\n     * @param urlConfig\n     * @return {this}\n     */\n    setURLConfig(urlConfig) {\n        this.urlConfig = new URLConfig(urlConfig);\n        return this;\n    }\n    /**\n     * @description Sets the Cloud Config for this asset\n     * @param urlConfig\n     * @return {this}\n     */\n    setCloudConfig(cloudConfig) {\n        this.cloudName = cloudConfig.cloudName;\n        this.apiKey = cloudConfig.apiKey;\n        this.apiSecret = cloudConfig.apiSecret;\n        this.authToken = cloudConfig.authToken;\n        return this;\n    }\n    /**\n     * @description Sets the public ID of the asset.\n     * @param {string} publicID The public ID of the asset.\n     * @return {this}\n     */\n    setPublicID(publicID) {\n        // PublicID must be a string!\n        this.publicID = publicID ? publicID.toString() : '';\n        return this;\n    }\n    /**\n     * @description Sets the delivery type of the asset.\n     * @param {DELIVERY_TYPE | string} newType The type of the asset.\n     * @return {this}\n     */\n    setDeliveryType(newType) {\n        this.deliveryType = newType;\n        return this;\n    }\n    /**\n     * @description Sets the URL SEO suffix of the asset.\n     * @param {string} newSuffix The SEO suffix.\n     * @return {this}\n     */\n    setSuffix(newSuffix) {\n        this.suffix = newSuffix;\n        return this;\n    }\n    /**\n     * @description Sets the signature of the asset.\n     * @param {string} signature The signature.\n     * @return {this}\n     */\n    setSignature(signature) {\n        this.signature = signature;\n        return this;\n    }\n    /**\n     * @description Sets the version of the asset.\n     * @param {string} newVersion The version of the asset.\n     * @return {this}\n     */\n    setVersion(newVersion) {\n        if (newVersion) {\n            this.version = newVersion;\n        }\n        return this;\n    }\n    /**\n     * @description Sets the asset type.\n     * @param {string} newType The type of the asset.\n     * @return {this}\n     */\n    setAssetType(newType) {\n        if (newType) {\n            this.assetType = newType;\n        }\n        return this;\n    }\n    sign() {\n        return this;\n    }\n    /**\n     * @description Serializes to URL string\n     * @param overwriteOptions\n     */\n    toURL(overwriteOptions = {}) {\n        return this.createCloudinaryURL(null, overwriteOptions.trackedAnalytics);\n    }\n    /**\n     * @description Validate various options before attempting to create a URL\n     * The function will throw in case a violation\n     * @throws Validation errors\n     */\n    validateAssetForURLCreation() {\n        if (typeof this.cloudName === 'undefined') {\n            throw 'You must supply a cloudName when initializing the asset';\n        }\n        const suffixContainsDot = this.suffix && this.suffix.indexOf('.') >= 0;\n        const suffixContainsSlash = this.suffix && this.suffix.indexOf('/') >= 0;\n        if (suffixContainsDot || suffixContainsSlash) {\n            throw '`suffix`` should not include . or /';\n        }\n    }\n    /**\n     * @description return an SEO friendly name for a combination of asset/delivery, some examples:\n     * * image/upload -> images\n     * * video/upload -> videos\n     * If no match is found, return `{asset}/{delivery}`\n     */\n    getResourceType() {\n        const assetType = handleAssetType(this.assetType);\n        const deliveryType = handleDeliveryType(this.deliveryType);\n        const hasSuffix = !!this.suffix;\n        const regularSEOType = `${assetType}/${deliveryType}`;\n        const shortSEOType = SEO_TYPES[`${assetType}/${deliveryType}`];\n        const useRootPath = this.urlConfig.useRootPath;\n        const shorten = this.urlConfig.shorten;\n        // Quick exit incase of useRootPath\n        if (useRootPath) {\n            if (regularSEOType === 'image/upload') {\n                return ''; // For image/upload we're done, just return nothing\n            }\n            else {\n                throw new Error(`useRootPath can only be used with assetType: 'image' and deliveryType: 'upload'. Provided: ${regularSEOType} instead`);\n            }\n        }\n        if (shorten && regularSEOType === 'image/upload') {\n            return 'iu';\n        }\n        if (hasSuffix) {\n            if (shortSEOType) {\n                return shortSEOType;\n            }\n            else {\n                throw new Error(`URL Suffix only supported for ${Object.keys(SEO_TYPES).join(', ')}, Provided: ${regularSEOType} instead`);\n            }\n        }\n        // If all else fails, return the regular image/upload combination (asset/delivery)\n        return regularSEOType;\n    }\n    getSignature() {\n        if (this.signature) {\n            return `s--${this.signature}--`;\n        }\n        else {\n            return '';\n        }\n    }\n    /**\n     *\n     * @description Creates a fully qualified CloudinaryURL\n     * @return {string} CloudinaryURL\n     * @throws Validation Errors\n     */\n    createCloudinaryURL(transformation, trackedAnalytics) {\n        // In accordance with the existing implementation, if no publicID exists we should return nothing.\n        if (!this.publicID) {\n            return '';\n        }\n        // Throws if some options are mis-configured\n        // See the function for more information on when it throws\n        this.validateAssetForURLCreation();\n        const prefix = getUrlPrefix(this.cloudName, this.urlConfig);\n        const transformationString = transformation ? transformation.toString() : '';\n        const version = getUrlVersion(this.publicID, this.version, this.urlConfig.forceVersion);\n        const publicID = this.publicID;\n        if (typeof transformation === 'string') {\n            const url = [prefix, this.getResourceType(), this.getSignature(), transformationString, version, publicID.replace(/,/g, '%2C'), this.suffix]\n                .filter((a) => a)\n                .join('/');\n            return url;\n        }\n        else {\n            // Avoid applying encodeURI on entire string in case where we have transformations with comma (i.e. f_auto,q_auto)\n            // Since encodeURI does not encode commas we replace commas *only* on the publicID\n            const safeURL = [\n                encodeURI(prefix),\n                this.getResourceType(),\n                this.getSignature(),\n                encodeURI(transformationString),\n                version,\n                encodeURI(publicID).replace(/,/g, '%2C'),\n                this.suffix && encodeURI(this.suffix)\n            ]\n                .filter((a) => a)\n                .join('/')\n                .replace(/\\?/g, '%3F')\n                .replace(/=/g, '%3D');\n            const shouldAddAnalytics = this.urlConfig.analytics !== false && !(publicID.includes('?'));\n            let queryParamsString = '';\n            if (typeof (this.urlConfig.queryParams) === 'object') {\n                try {\n                    const queryParams = new URLSearchParams(this.urlConfig.queryParams);\n                    if (shouldAddAnalytics) {\n                        queryParams.set(\"_a\", getSDKAnalyticsSignature(trackedAnalytics));\n                    }\n                    queryParamsString = queryParams.toString();\n                }\n                catch (err) {\n                    console.error('Error: URLSearchParams is not available so the queryParams object cannot be parsed, please try passing as an already parsed string');\n                }\n            }\n            else {\n                queryParamsString = this.urlConfig.queryParams || '';\n                if (shouldAddAnalytics) {\n                    queryParamsString += `${(queryParamsString.length > 0 ? '&' : '')}_a=${getSDKAnalyticsSignature(trackedAnalytics)}`;\n                }\n            }\n            if (queryParamsString) {\n                return `${safeURL}?${queryParamsString}`;\n            }\n            else {\n                return safeURL;\n            }\n        }\n    }\n}\nexport { CloudinaryFile };\n","import { CloudinaryFile } from \"./CloudinaryFile.js\";\nimport { DeliveryFormatAction } from \"@cloudinary/transformation-builder-sdk/actions/delivery/DeliveryFormatAction\";\n/**\n * @desc Cloudinary Transformable interface, extended by any class that needs a Transformation Interface\n * @summary SDK\n * @memberOf SDK\n */\nclass CloudinaryTransformable extends CloudinaryFile {\n    constructor(publicID, cloudConfig, urlConfig, transformation) {\n        /* istanbul ignore next */\n        super(publicID, cloudConfig, urlConfig);\n        this.transformation = transformation;\n    }\n    /**\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n     * @param {Actions.Animated} animated\n     * @return {this}\n     */\n    animated(animated) {\n        this.transformation.animated(animated);\n        return this;\n    }\n    /**\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n     * @param {Actions.Border} border\n     * @return {this}\n     */\n    border(border) {\n        this.transformation.border(border);\n        return this;\n    }\n    /**\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n     * @param {Actions.Reshape} reshape\n     * @return {this}\n     */\n    reshape(reshape) {\n        this.transformation.reshape(reshape);\n        return this;\n    }\n    /**\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n     * @param {Actions.Resize} resize\n     * @return {this}\n     */\n    resize(resize) {\n        this.transformation.resize(resize);\n        return this;\n    }\n    /**\n     * @desc An alias to Action Delivery.quality\n     * @param {string|number} quality\n     * @return {this}\n     */\n    quality(quality) {\n        this.addAction(new DeliveryFormatAction('q', quality));\n        return this;\n    }\n    /**\n     * @desc An alias to Action Delivery.format\n     * @param {string} format\n     * @return {this}\n     */\n    format(format) {\n        this.addAction(new DeliveryFormatAction('f', format));\n        return this;\n    }\n    /**\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n     * @param {Actions.RoundCorners} roundCorners\n     * @return {this}\n     */\n    roundCorners(roundCorners) {\n        this.transformation.roundCorners(roundCorners);\n        return this;\n    }\n    /**\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n     * @return {this}\n     */\n    overlay(overlayAction) {\n        this.transformation.overlay(overlayAction);\n        return this;\n    }\n    /**\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n     * @param {Actions.Variable} variableAction\n     * @return {this}\n     */\n    addVariable(variableAction) {\n        this.transformation.addVariable(variableAction);\n        return this;\n    }\n    /**\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n     * @param {Actions.Condition} conditionalAction\n     * @return {this}\n     */\n    conditional(conditionalAction) {\n        this.transformation.conditional(conditionalAction);\n        return this;\n    }\n    /**\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n     * @param {Actions.Effect} effect\n     * @return {this}\n     */\n    effect(effect) {\n        this.transformation.effect(effect);\n        return this;\n    }\n    /**\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n     * @param {Actions.Adjust} action\n     * @return {this}\n     */\n    adjust(action) {\n        this.transformation.adjust(action);\n        return this;\n    }\n    /**\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n     * @param {Actions.Rotate} rotate\n     * @return {this}\n     */\n    rotate(rotate) {\n        this.transformation.rotate(rotate);\n        return this;\n    }\n    /**\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n     * @param {Actions.NamedTransformation} namedTransformation\n     * @return {this}\n     */\n    namedTransformation(namedTransformation) {\n        this.transformation.namedTransformation(namedTransformation);\n        return this;\n    }\n    /**\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n     * @param {Actions.Delivery} deliveryAction\n     * @return {this}\n     */\n    delivery(deliveryAction) {\n        this.transformation.delivery(deliveryAction);\n        return this;\n    }\n    /**\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n     * @param {Qualifiers.color} color\n     * @return {this}\n     */\n    backgroundColor(color) {\n        this.transformation.backgroundColor(color);\n        return this;\n    }\n    /**\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n     * @param {Actions.PSDTools} action\n     * @return {this}\n     */\n    psdTools(action) {\n        this.transformation.psdTools(action);\n        return this;\n    }\n    /**\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n     * @param {Actions.Extract} action\n     * @return {this}\n     */\n    extract(action) {\n        this.transformation.extract(action);\n        return this;\n    }\n    /**\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n     * @param {Qualifiers.Flag | string} flagQualifier\n     * @return {this}\n     */\n    addFlag(flagQualifier) {\n        this.transformation.addFlag(flagQualifier);\n        return this;\n    }\n    /**\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n     * @param {Actions.CustomFunction} customFunction\n     * @return {this}\n     */\n    customFunction(customFunction) {\n        this.transformation.customFunction(customFunction);\n        return this;\n    }\n    /**\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n     * @param {SDK.Action | string} action\n     * @return {this}\n     */\n    addAction(action) {\n        this.transformation.addAction(action);\n        return this;\n    }\n    /**\n     * @description Extend your transformation with another transformation\n     * @param { string | SDK.Transformation } tx\n     */\n    addTransformation(tx) {\n        this.transformation.addTransformation(tx);\n        return this;\n    }\n    /**\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n     * @return {string}\n     */\n    toString() {\n        return this.transformation.toString();\n    }\n    /**\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n     * @return {this}\n     */\n    underlay(underlayAction) {\n        this.transformation.underlay(underlayAction);\n        return this;\n    }\n    toURL(overwriteOptions = {}) {\n        return this.createCloudinaryURL(this.transformation, overwriteOptions === null || overwriteOptions === void 0 ? void 0 : overwriteOptions.trackedAnalytics);\n    }\n}\nexport { CloudinaryTransformable };\n","import { isUrl } from \"./urlUtils/isUrl.js\";\nimport { isFileName } from \"./urlUtils/isFileName.js\";\nimport { publicIDContainsVersion } from \"./urlUtils/publicIDContainsVersion.js\";\n/**\n * Create the URL prefix for Cloudinary resources.\n * Available use cases\n * http://res.cloudinary.com/{cloudName}\n * https://res.cloudinary.com/{cloudName}\n * https://{cloudName}-res.cloudinary.com/\n * http://{domain}/${cloudName}\n * https://{domain}/${cloudName}\n * https://{domain}\n * @private\n *\n * @param {string} cloudName\n * @param {IURLConfig} urlConfig\n */\nfunction getUrlPrefix(cloudName, urlConfig) {\n    const secure = urlConfig.secure;\n    const privateCDN = urlConfig.privateCdn;\n    const cname = urlConfig.cname;\n    const secureDistribution = urlConfig.secureDistribution;\n    if (!secure && !cname) {\n        return `http://res.cloudinary.com/${cloudName}`;\n    }\n    if (secure && !secureDistribution && privateCDN) {\n        return `https://${cloudName}-res.cloudinary.com`;\n    }\n    if (secure && !secureDistribution) {\n        return `https://res.cloudinary.com/${cloudName}`;\n    }\n    if (secure && secureDistribution && privateCDN) {\n        return `https://${secureDistribution}`;\n    }\n    if (secure && secureDistribution) {\n        return `https://${secureDistribution}/${cloudName}`;\n    }\n    if (!secure && cname) {\n        return `http://${cname}/${cloudName}`;\n    }\n    else {\n        return 'ERROR';\n    }\n}\n/**\n * @private\n * @param assetType\n */\nfunction handleAssetType(assetType) {\n    //default to image\n    if (!assetType) {\n        return 'image';\n    }\n    return assetType;\n}\n/**\n * @private\n * @param deliveryType\n */\nfunction handleDeliveryType(deliveryType) {\n    //default to upload\n    if (!deliveryType) {\n        return 'upload';\n    }\n    return deliveryType;\n}\n/**\n *\n * @param {string} publicID\n * @param {number} version\n * @param {boolean} forceVersion\n */\nfunction getUrlVersion(publicID, version, forceVersion) {\n    const shouldForceVersion = forceVersion !== false;\n    if (version) {\n        return `v${version}`;\n    }\n    // In all these conditions we never force a version\n    if (publicIDContainsVersion(publicID) || isUrl(publicID) || isFileName(publicID)) {\n        return '';\n    }\n    return shouldForceVersion ? 'v1' : '';\n}\nexport { handleAssetType, getUrlVersion, handleDeliveryType, getUrlPrefix };\n","/**\n *\n * @param publicID\n */\nexport function publicIDContainsVersion(publicID) {\n    return publicID.match(/^v[0-9]+/);\n}\n","/**\n *\n * @param publicID\n */\nexport function isUrl(publicID) {\n    return publicID.match(/^https?:\\//);\n}\n","/**\n *\n * @param publicID\n */\nexport function isFileName(publicID) {\n    return publicID.indexOf('/') < 0;\n}\n","import { ImageTransformation } from \"@cloudinary/transformation-builder-sdk/transformation/ImageTransformation\";\nimport { CloudinaryTransformable } from \"./CloudinaryTransformable.js\";\n/**\n * @desc Cloudinary image asset, with image-related transformations\n * @summary SDK\n * @memberOf SDK\n */\nclass CloudinaryImage extends CloudinaryTransformable {\n    constructor(publicID, cloudConfig, urlConfig) {\n        /* istanbul ignore next */\n        super(publicID, cloudConfig, urlConfig, new ImageTransformation());\n    }\n}\nexport { CloudinaryImage };\n","import { Transformation } from \"./Transformation.js\";\n/**\n * @summary SDK\n * @extends {SDK.Transformation}\n * @memberOf SDK\n */\nclass VideoTransformation extends Transformation {\n}\nexport { VideoTransformation };\n","import { CloudinaryTransformable } from \"./CloudinaryTransformable.js\";\nimport { VideoTransformation } from \"../transformation/VideoTransformation.js\";\n/**\n * @desc Cloudinary video asset, with video-related transformations\n * @summary SDK\n * @memberOf SDK\n */\nclass CloudinaryVideo extends CloudinaryTransformable {\n    constructor(publicID, cloudConfig, urlConfig) {\n        /* istanbul ignore next */\n        super(publicID, cloudConfig, urlConfig, new VideoTransformation());\n        this.assetType = 'video';\n    }\n    /**\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n     * @param {Actions.Transcode} action\n     * @return {this}\n     */\n    transcode(action) {\n        this.transformation.transcode(action);\n        return this;\n    }\n    /**\n     * @desc A proxy to {@link SDK.Transformation| Transformation} - Calls the same method contained in this.transformation\n     * @param {Actions.VideoEdit} action\n     * @return {this}\n     */\n    videoEdit(action) {\n        this.transformation.videoEdit(action);\n        return this;\n    }\n}\nexport { CloudinaryVideo };\n","import { CloudinaryImage } from \"../assets/CloudinaryImage.js\";\nimport { CloudinaryVideo } from \"../assets/CloudinaryVideo.js\";\nclass Cloudinary {\n    constructor(cloudinaryConfig) {\n        if (cloudinaryConfig) {\n            this.cloudinaryConfig = cloudinaryConfig;\n        }\n    }\n    image(publicID) {\n        return new CloudinaryImage(publicID, this.cloudinaryConfig.cloud, this.cloudinaryConfig.url);\n    }\n    video(publicID) {\n        return new CloudinaryVideo(publicID, this.cloudinaryConfig.cloud, this.cloudinaryConfig.url);\n    }\n    setConfig(cloudinaryConfig) {\n        this.cloudinaryConfig = cloudinaryConfig;\n        return this;\n    }\n    getConfig() {\n        return this.cloudinaryConfig;\n    }\n    extendConfig() {\n        // Future implementation\n    }\n}\nexport { Cloudinary };\n","/**\n *\n * @param a\n */\nexport function isObject(a) {\n    return typeof a === 'object' && a !== null;\n}\n","/**\n *\n * @private\n * @description An isomorphic Base64 function, provides browser and server support.\n * @param {string} input - A string to encode with base64\n */\nfunction base64Encode(input) {\n    // Browser\n    let encodedResult = '';\n    if (typeof window !== 'undefined') {\n        // encodeURI the input to support unicode characters\n        // Since the URI might be encoded already, we try to decode it once before\n        encodedResult = btoa(encodeURI(decodeURI(input)));\n    }\n    else {\n        // NodeJS support\n        encodedResult = global.Buffer.from(input).toString('base64');\n    }\n    return encodedResult\n        .replace(/\\+/g, '-') // Convert '+' to '-'\n        .replace(/\\//g, '_'); // Convert '/' to '_';\n}\nexport { base64Encode };\n","export const LEGACY_CONDITIONAL_OPERATORS = {\n    \"=\": 'eq',\n    \"!=\": 'ne',\n    \"<\": 'lt',\n    \">\": 'gt',\n    \"<=\": 'lte',\n    \">=\": 'gte',\n    \"&&\": 'and',\n    \"||\": 'or',\n    \"*\": \"mul\",\n    \"/\": \"div\",\n    \"+\": \"add\",\n    \"-\": \"sub\",\n    \"^\": \"pow\"\n};\nexport const CF_SHARED_CDN = \"d3jpl91pxevbkh.cloudfront.net\";\nexport const OLD_AKAMAI_SHARED_CDN = \"cloudinary-a.akamaihd.net\";\nexport const AKAMAI_SHARED_CDN = \"res.cloudinary.com\";\nexport const SHARED_CDN = AKAMAI_SHARED_CDN;\nexport const LEGACY_PREDEFINED_VARS = {\n    \"aspect_ratio\": \"ar\",\n    \"aspectRatio\": \"ar\",\n    \"current_page\": \"cp\",\n    \"currentPage\": \"cp\",\n    \"duration\": \"du\",\n    \"face_count\": \"fc\",\n    \"faceCount\": \"fc\",\n    \"height\": \"h\",\n    \"initial_aspect_ratio\": \"iar\",\n    \"initial_height\": \"ih\",\n    \"initial_width\": \"iw\",\n    \"initialAspectRatio\": \"iar\",\n    \"initialHeight\": \"ih\",\n    \"initialWidth\": \"iw\",\n    \"initial_duration\": \"idu\",\n    \"initialDuration\": \"idu\",\n    \"page_count\": \"pc\",\n    \"page_x\": \"px\",\n    \"page_y\": \"py\",\n    \"pageCount\": \"pc\",\n    \"pageX\": \"px\",\n    \"pageY\": \"py\",\n    \"tags\": \"tags\",\n    \"width\": \"w\"\n};\nexport const NUMBER_PATTERN = \"([0-9]*)\\\\.([0-9]+)|([0-9]+)\";\nexport const OFFSET_ANY_PATTERN = `(${NUMBER_PATTERN})([%pP])?`;\nexport const RANGE_VALUE_RE = RegExp(`^${OFFSET_ANY_PATTERN}$`);\nexport const OFFSET_ANY_PATTERN_RE = RegExp(`(${OFFSET_ANY_PATTERN})\\\\.\\\\.(${OFFSET_ANY_PATTERN})`);\nexport const LAYER_KEYWORD_PARAMS = {\n    font_weight: \"normal\",\n    font_style: \"normal\",\n    text_decoration: \"none\",\n    text_align: '',\n    stroke: \"none\"\n};\n","// Based on CGI::unescape. In addition does not escape / :\n// smart_escape = (string)->\n//  encodeURIComponent(string).replace(/%3A/g, \":\").replace(/%2F/g, \"/\")\nexport function smartEscape(string, unsafe = /([^a-zA-Z0-9_.\\-\\/:]+)/g) {\n    return string.replace(unsafe, function (match) {\n        return match.split(\"\").map(function (c) {\n            return \"%\" + c.charCodeAt(0).toString(16).toUpperCase();\n        }).join(\"\");\n    });\n}\n","/**\n * Converts string to snake case\n * @param {string} str\n */\nexport const snakeCase = (str) => str.replace(/[A-Z]/g, letter => `_${letter.toLowerCase()}`);\n","import { snakeCase } from \"../utils/snakeCase.js\";\nclass Layer {\n    /**\n     * Layer\n     * @constructor Layer\n     * @param {Object} options - layer parameters\n     */\n    constructor(options) {\n        this.options = {};\n        if (options != null) {\n            [\"resourceType\", \"type\", \"publicId\", \"format\"].forEach((key) => {\n                var ref;\n                // @ts-ignore\n                return this.options[key] = (ref = options[key]) != null ? ref : options[snakeCase(key)];\n            });\n        }\n    }\n    resourceType(value) {\n        this.options.resourceType = value;\n        return this;\n    }\n    type(value) {\n        this.options.type = value;\n        return this;\n    }\n    publicId(value) {\n        this.options.publicId = value;\n        return this;\n    }\n    /**\n     * Get the public ID, formatted for layer parameter\n     * @function Layer#getPublicId\n     * @return {String} public ID\n     */\n    getPublicId() {\n        var ref;\n        return (ref = this.options.publicId) != null ? ref.replace(/\\//g, \":\") : void 0;\n    }\n    /**\n     * Get the public ID, with format if present\n     * @function Layer#getFullPublicId\n     * @return {String} public ID\n     */\n    getFullPublicId() {\n        if (this.options.format != null) {\n            return this.getPublicId() + \".\" + this.options.format;\n        }\n        else {\n            return this.getPublicId();\n        }\n    }\n    format(value) {\n        this.options.format = value;\n        return this;\n    }\n    /**\n     * generate the string representation of the layer\n     * @function Layer#toString\n     */\n    toString() {\n        let components = [];\n        if (this.options.publicId == null) {\n            throw \"Must supply publicId\";\n        }\n        if (!(this.options.resourceType === \"image\")) {\n            components.push(this.options.resourceType);\n        }\n        if (!(this.options.type === \"upload\")) {\n            components.push(this.options.type);\n        }\n        components.push(this.getFullPublicId());\n        return components.filter(x => !!x).join(\":\");\n    }\n    clone() {\n        return new Layer(this.options);\n    }\n}\nexport default Layer;\n","export function isEmpty(value) {\n    return value === undefined ||\n        value === null ||\n        (typeof value === \"object\" && Object.keys(value).length === 0) ||\n        (typeof value === \"string\" && value.trim().length === 0);\n}\n","/**\n * Return true is value is a number or a string representation of a number.\n * @function Util.isNumberLike\n * @param {*} value\n * @returns {boolean} true if value is a number\n * @example\n *    Util.isNumber(0) // true\n *    Util.isNumber(\"1.3\") // true\n *    Util.isNumber(\"\") // false\n *    Util.isNumber(undefined) // false\n */\nexport const isNumberLike = function (value) {\n    return (value != null) && !isNaN(parseFloat(value));\n};\n","import Layer from './layer.js';\nimport { snakeCase } from \"../utils/snakeCase.js\";\nimport { isEmpty } from \"../utils/isEmpty.js\";\nimport { smartEscape } from \"../utils/smartEscape.js\";\nimport { isNumberLike } from \"../utils/isNumberLike.js\";\nclass TextLayer extends Layer {\n    /**\n     * @constructor TextLayer\n     * @param {Object} options - layer parameters\n     */\n    constructor(options) {\n        let keys;\n        super(options);\n        keys = [\"resourceType\", \"resourceType\", \"fontFamily\", \"fontSize\", \"fontWeight\", \"fontStyle\", \"textDecoration\", \"textAlign\", \"stroke\", \"letterSpacing\", \"lineSpacing\", \"fontHinting\", \"fontAntialiasing\", \"text\"];\n        if (options != null) {\n            keys.forEach((key) => {\n                var ref;\n                // @ts-ignore\n                return this.options[key] = (ref = options[key]) != null ? ref : options[snakeCase(key)];\n            });\n        }\n        this.options.resourceType = \"text\";\n    }\n    //@ts-ignore\n    resourceType(resourceType) {\n        throw \"Cannot modify resourceType for text layers\";\n    }\n    //@ts-ignore\n    type(type) {\n        throw \"Cannot modify type for text layers\";\n    }\n    format(format) {\n        throw \"Cannot modify format for text layers\";\n    }\n    fontFamily(fontFamily) {\n        this.options.fontFamily = fontFamily;\n        return this;\n    }\n    fontSize(fontSize) {\n        this.options.fontSize = fontSize;\n        return this;\n    }\n    fontWeight(fontWeight) {\n        this.options.fontWeight = fontWeight;\n        return this;\n    }\n    fontStyle(fontStyle) {\n        this.options.fontStyle = fontStyle;\n        return this;\n    }\n    textDecoration(textDecoration) {\n        this.options.textDecoration = textDecoration;\n        return this;\n    }\n    textAlign(textAlign) {\n        this.options.textAlign = textAlign;\n        return this;\n    }\n    stroke(stroke) {\n        this.options.stroke = stroke;\n        return this;\n    }\n    letterSpacing(letterSpacing) {\n        this.options.letterSpacing = letterSpacing;\n        return this;\n    }\n    lineSpacing(lineSpacing) {\n        this.options.lineSpacing = lineSpacing;\n        return this;\n    }\n    fontHinting(fontHinting) {\n        this.options.fontHinting = fontHinting;\n        return this;\n    }\n    fontAntialiasing(fontAntialiasing) {\n        this.options.fontAntialiasing = fontAntialiasing;\n        return this;\n    }\n    text(text) {\n        this.options.text = text;\n        return this;\n    }\n    /**\n     * generate the string representation of the layer\n     * @function TextLayer#toString\n     * @return {String}\n     */\n    toString() {\n        var components, hasPublicId, hasStyle, publicId, re, res, start, style, text, textSource;\n        style = this.textStyleIdentifier();\n        if (this.options.publicId != null) {\n            publicId = this.getFullPublicId();\n        }\n        if (this.options.text != null) {\n            hasPublicId = !isEmpty(publicId);\n            hasStyle = !isEmpty(style);\n            if (hasPublicId && hasStyle || !hasPublicId && !hasStyle) {\n                throw \"Must supply either style parameters or a public_id when providing text parameter in a text overlay/underlay, but not both!\";\n            }\n            re = /\\$\\([a-zA-Z]\\w*\\)/g;\n            start = 0;\n            //        textSource = text.replace(new RegExp(\"[,/]\", 'g'), (c)-> \"%#{c.charCodeAt(0).toString(16).toUpperCase()}\")\n            textSource = smartEscape(this.options.text, /[,\\/]/g);\n            text = \"\";\n            while (res = re.exec(textSource)) {\n                text += smartEscape(textSource.slice(start, res.index));\n                text += res[0];\n                start = res.index + res[0].length;\n            }\n            text += smartEscape(textSource.slice(start));\n        }\n        components = [this.options.resourceType, style, publicId, text];\n        return (components).filter(x => !!x).join(\":\");\n    }\n    textStyleIdentifier() {\n        var components;\n        components = [];\n        if (this.options.fontWeight !== \"normal\") {\n            components.push(this.options.fontWeight);\n        }\n        if (this.options.fontStyle !== \"normal\") {\n            components.push(this.options.fontStyle);\n        }\n        if (this.options.textDecoration !== \"none\") {\n            components.push(this.options.textDecoration);\n        }\n        components.push(this.options.textAlign);\n        if (this.options.stroke !== \"none\") {\n            components.push(this.options.stroke);\n        }\n        if (!(isEmpty(this.options.letterSpacing) && !isNumberLike(this.options.letterSpacing))) {\n            components.push(\"letter_spacing_\" + this.options.letterSpacing);\n        }\n        if (!(isEmpty(this.options.lineSpacing) && !isNumberLike(this.options.lineSpacing))) {\n            components.push(\"line_spacing_\" + this.options.lineSpacing);\n        }\n        if (!(isEmpty(this.options.fontAntialiasing))) {\n            components.push(\"antialias_\" + this.options.fontAntialiasing);\n        }\n        if (!(isEmpty(this.options.fontHinting))) {\n            components.push(\"hinting_\" + this.options.fontHinting);\n        }\n        if (!isEmpty(components.filter(x => !!x))) {\n            if (isEmpty(this.options.fontFamily)) {\n                throw `Must supply fontFamily. ${components}`;\n            }\n            if (isEmpty(this.options.fontSize) && !isNumberLike(this.options.fontSize)) {\n                throw \"Must supply fontSize.\";\n            }\n        }\n        components.unshift(this.options.fontFamily, this.options.fontSize);\n        components = components.filter(x => !!x).join(\"_\");\n        return components;\n    }\n}\n;\nexport default TextLayer;\n","/**\n * Parse layer options\n * @private\n * @param {object|*} layer The layer to parse.\n * @return {string} layer transformation string\n */\nimport { isObject } from \"../utils/isObject.js\";\nimport { base64Encode } from \"../../internal/utils/base64Encode.js\";\nimport { LAYER_KEYWORD_PARAMS } from \"../consts.js\";\nimport { smartEscape } from \"../utils/smartEscape.js\";\nimport TextLayer from \"../legacyLayer/textlayer.js\";\nimport Layer from \"../legacyLayer/layer.js\";\nexport function textStyle(layer) {\n    const keywords = [];\n    let style = \"\";\n    Object.keys(LAYER_KEYWORD_PARAMS).forEach((attr) => {\n        let default_value = LAYER_KEYWORD_PARAMS[attr];\n        let attr_value = layer[attr] || default_value;\n        if (attr_value !== default_value) {\n            keywords.push(attr_value);\n        }\n    });\n    Object.keys(layer).forEach((attr) => {\n        if (attr === \"letter_spacing\" || attr === \"line_spacing\") {\n            keywords.push(`${attr}_${layer[attr]}`);\n        }\n        if (attr === \"font_hinting\") {\n            keywords.push(`${attr.split(\"_\").pop()}_${layer[attr]}`);\n        }\n        if (attr === \"font_antialiasing\") {\n            keywords.push(`antialias_${layer[attr]}`);\n        }\n    });\n    if (layer.hasOwnProperty(\"font_size\" || \"font_family\") || !keywords || keywords.length === 0) {\n        if (!layer.font_size)\n            throw `Must supply font_size for text in overlay/underlay`;\n        if (!layer.font_family)\n            throw `Must supply font_family for text in overlay/underlay`;\n        keywords.unshift(layer.font_size);\n        keywords.unshift(layer.font_family);\n        style = keywords.filter((a) => a).join(\"_\");\n    }\n    return style;\n}\nexport function processLayer(layer) {\n    if (layer instanceof TextLayer || layer instanceof Layer) {\n        return layer.toString();\n    }\n    let result = '';\n    if (isObject(layer)) {\n        if (layer.resource_type === \"fetch\" || (layer.url != null)) {\n            result = `fetch:${base64Encode(layer.url)}`;\n        }\n        else {\n            let public_id = layer.public_id;\n            let format = layer.format;\n            let resource_type = layer.resource_type || \"image\";\n            let type = layer.type || \"upload\";\n            let text = layer.text;\n            let style = null;\n            let components = [];\n            const noPublicId = !public_id || public_id.length === 0;\n            if (!noPublicId) {\n                public_id = public_id.replace(new RegExp(\"/\", 'g'), \":\");\n                if (format != null) {\n                    public_id = `${public_id}.${format}`;\n                }\n            }\n            if ((!text || text.length === 0) && resource_type !== \"text\") {\n                if (noPublicId) {\n                    throw \"Must supply public_id for resource_type layer_parameter\";\n                }\n                if (resource_type === \"subtitles\") {\n                    style = textStyle(layer);\n                }\n            }\n            else {\n                resource_type = \"text\";\n                type = null;\n                // type is ignored for text layers\n                style = textStyle(layer);\n                if (text && text.length >= 0) {\n                    const noStyle = !style;\n                    if (!(noPublicId || noStyle) || (noPublicId && noStyle)) {\n                        throw \"Must supply either style parameters or a public_id when providing text parameter in a text overlay/underlay\";\n                    }\n                    let re = /\\$\\([a-zA-Z]\\w*\\)/g;\n                    let start = 0;\n                    let textSource = smartEscape(decodeURIComponent(text), /[,\\/]/g);\n                    text = \"\";\n                    for (let res = re.exec(textSource); res; res = re.exec(textSource)) {\n                        text += smartEscape(textSource.slice(start, res.index));\n                        text += res[0];\n                        start = res.index + res[0].length;\n                    }\n                    text += encodeURIComponent(textSource.slice(start));\n                }\n            }\n            if (resource_type !== \"image\") {\n                components.push(resource_type);\n            }\n            if (type !== \"upload\") {\n                components.push(type);\n            }\n            components.push(style);\n            components.push(public_id);\n            components.push(text);\n            result = components.filter((a) => a).join(\":\");\n        }\n    }\n    else if (/^fetch:.+/.test(layer)) {\n        result = `fetch:${base64Encode(layer.substr(6))}`;\n    }\n    else {\n        result = layer;\n    }\n    return result;\n}\n","import { LEGACY_PREDEFINED_VARS, LEGACY_CONDITIONAL_OPERATORS } from \"../consts.js\";\n/**\n * Normalize an offset value\n * @param {String} expression a decimal value which may have a 'p' or '%' postfix. E.g. '35%', '0.4p'\n * @return {Object|String} a normalized String of the input value if possible otherwise the value itself\n */\nexport function legacyNormalizeExpression(expression) {\n    if (typeof expression !== 'string' || expression.length === 0 || expression.match(/^!.+!$/)) {\n        if (expression) {\n            return expression.toString();\n        }\n        else {\n            return expression;\n        }\n    }\n    expression = String(expression);\n    const operators = \"\\\\|\\\\||>=|<=|&&|!=|>|=|<|/|-|\\\\+|\\\\*|\\\\^\";\n    // operators\n    const operatorsPattern = \"((\" + operators + \")(?=[ _]))\";\n    const operatorsReplaceRE = new RegExp(operatorsPattern, \"g\");\n    expression = expression.replace(operatorsReplaceRE, (match) => {\n        return LEGACY_CONDITIONAL_OPERATORS[match];\n    });\n    // predefined variables\n    const predefinedVarsPattern = \"(\" + Object.keys(LEGACY_PREDEFINED_VARS).join(\"|\") + \")\";\n    const userVariablePattern = '(\\\\$_*[^_ ]+)';\n    const variablesReplaceRE = new RegExp(`${userVariablePattern}|${predefinedVarsPattern}`, \"g\");\n    // @ts-ignore\n    expression = expression.replace(variablesReplaceRE, (match) => (LEGACY_PREDEFINED_VARS[match] || match));\n    return expression.replace(/[ _]+/g, '_');\n}\n","/**\n *\n * @param arg\n */\nexport function toArray(arg) {\n    switch (true) {\n        case arg == null:\n            return [];\n        case Array.isArray(arg):\n            return arg;\n        default:\n            return [arg];\n    }\n}\n","import { base64Encode } from \"../../internal/utils/base64Encode.js\";\nimport { isObject } from \"../utils/isObject.js\";\n/**\n * Parse custom_function options\n * @private\n * @param {object|*} customFunction a custom function object containing function_type and source values\n * @return {string|*} custom_function transformation string\n */\nexport function processCustomFunction(customFunction) {\n    if (!isObject(customFunction)) {\n        return customFunction;\n    }\n    if (customFunction.function_type === \"remote\") {\n        const encodedSource = base64Encode(customFunction.source)\n            .replace(/\\+/g, '-') // Convert '+' to '-'\n            .replace(/\\//g, '_') // Convert '/' to '_'\n            .replace(/=+$/, ''); // Remove ending '='\n        return [customFunction.function_type, encodedSource].join(\":\");\n    }\n    return [customFunction.function_type, customFunction.source].join(\":\");\n}\n","/**\n * Split a range into the start and end values\n * @param range\n */\nimport { OFFSET_ANY_PATTERN_RE } from \"../consts.js\";\nexport function splitRange(range) {\n    switch (range && range.constructor) {\n        case String:\n            if (!OFFSET_ANY_PATTERN_RE.test(range)) {\n                return range;\n            }\n            return range.split(\"..\");\n        case Array:\n            return [[range], range[range.length - 1]];\n        default:\n            return [null, null];\n    }\n}\n","import { RANGE_VALUE_RE } from \"../consts.js\";\n/**\n *\n * @param value\n */\nexport function normRangeValues(value) {\n    const offset = String(value).match(RANGE_VALUE_RE);\n    if (offset) {\n        const modifier = offset[5] ? 'p' : '';\n        return `${offset[1] || offset[4]}${modifier}`;\n    }\n    else {\n        return value;\n    }\n}\n","/**\n * Represents a transformation expression.\n * @param {string} expressionStr - An expression in string format.\n * @class Expression\n *\n */\nclass Expression {\n    constructor(expressionStr) {\n        /**\n         * @protected\n         * @inner Expression-expressions\n         */\n        this.expressions = [];\n        if (expressionStr != null) {\n            this.expressions.push(Expression.normalize(expressionStr));\n        }\n    }\n    /**\n     * Convenience constructor method\n     * @function Expression.new\n     */\n    static new(expressionStr) {\n        return new this(expressionStr);\n    }\n    /**\n     * Normalize a string expression\n     * @function Cloudinary#normalize\n     * @param {string} expression a expression, e.g. \"w gt 100\", \"width_gt_100\", \"width > 100\"\n     * @return {string} the normalized form of the value expression, e.g. \"w_gt_100\"\n     */\n    static normalize(expression) {\n        var operators, operatorsPattern, operatorsReplaceRE, predefinedVarsPattern, predefinedVarsReplaceRE;\n        if (expression == null) {\n            return expression;\n        }\n        expression = String(expression);\n        operators = \"\\\\|\\\\||>=|<=|&&|!=|>|=|<|/|-|\\\\+|\\\\*|\\\\^\";\n        // operators\n        operatorsPattern = \"((\" + operators + \")(?=[ _]))\";\n        operatorsReplaceRE = new RegExp(operatorsPattern, \"g\");\n        // @ts-ignore\n        expression = expression.replace(operatorsReplaceRE, match => OPERATORS[match]);\n        // predefined variables\n        predefinedVarsPattern = \"(\" + Object.keys(PREDEFINED_VARS).join(\"|\") + \")\";\n        predefinedVarsReplaceRE = new RegExp(predefinedVarsPattern, \"g\");\n        // @ts-ignore\n        expression = expression.replace(predefinedVarsReplaceRE, (match, p1, offset) => (expression[offset - 1] === '$' ? match : PREDEFINED_VARS[match]));\n        return expression.replace(/[ _]+/g, '_');\n    }\n    /**\n     * Serialize the expression\n     * @return {string} the expression as a string\n     */\n    serialize() {\n        return Expression.normalize(this.expressions.join(\"_\"));\n    }\n    toString() {\n        return this.serialize();\n    }\n    /**\n     * Get the parent transformation of this expression\n     * @return Transformation\n     */\n    getParent() {\n        return this.parent;\n    }\n    /**\n     * Set the parent transformation of this expression\n     * @param {Transformation} the parent transformation\n     * @return {Expression} this expression\n     */\n    setParent(parent) {\n        this.parent = parent;\n        return this;\n    }\n    /**\n     * Add a expression\n     * @function Expression#predicate\n     * @internal\n     */\n    predicate(name, operator, value) {\n        // @ts-ignore\n        if (OPERATORS[operator] != null) {\n            // @ts-ignore\n            operator = OPERATORS[operator];\n        }\n        this.expressions.push(`${name}_${operator}_${value}`);\n        return this;\n    }\n    /**\n     * @function Expression#and\n     */\n    and() {\n        this.expressions.push(\"and\");\n        return this;\n    }\n    /**\n     * @function Expression#or\n     */\n    or() {\n        this.expressions.push(\"or\");\n        return this;\n    }\n    /**\n     * Conclude expression\n     * @function Expression#then\n     * @return {Transformation} the transformation this expression is defined for\n     */\n    then() {\n        return this.getParent().if(this.toString());\n    }\n    /**\n     * @function Expression#height\n     * @param {string} operator the comparison operator (e.g. \"<\", \"lt\")\n     * @param {string|number} value the right hand side value\n     * @return {Expression} this expression\n     */\n    height(operator, value) {\n        return this.predicate(\"h\", operator, value);\n    }\n    /**\n     * @function Expression#width\n     * @param {string} operator the comparison operator (e.g. \"<\", \"lt\")\n     * @param {string|number} value the right hand side value\n     * @return {Expression} this expression\n     */\n    width(operator, value) {\n        return this.predicate(\"w\", operator, value);\n    }\n    /**\n     * @function Expression#aspectRatio\n     * @param {string} operator the comparison operator (e.g. \"<\", \"lt\")\n     * @param {string|number} value the right hand side value\n     * @return {Expression} this expression\n     */\n    aspectRatio(operator, value) {\n        return this.predicate(\"ar\", operator, value);\n    }\n    /**\n     * @function Expression#pages\n     * @param {string} operator the comparison operator (e.g. \"<\", \"lt\")\n     * @param {string|number} value the right hand side value\n     * @return {Expression} this expression\n     */\n    pageCount(operator, value) {\n        return this.predicate(\"pc\", operator, value);\n    }\n    /**\n     * @function Expression#faces\n     * @param {string} operator the comparison operator (e.g. \"<\", \"lt\")\n     * @param {string|number} value the right hand side value\n     * @return {Expression} this expression\n     */\n    faceCount(operator, value) {\n        return this.predicate(\"fc\", operator, value);\n    }\n    value(value) {\n        this.expressions.push(value);\n        return this;\n    }\n    /**\n     */\n    static variable(name, value) {\n        return new this(name).value(value);\n    }\n    /**\n     * @returns Expression a new expression with the predefined variable \"width\"\n     * @function Expression.width\n     */\n    static width() {\n        return new this(\"width\");\n    }\n    /**\n     * @returns Expression a new expression with the predefined variable \"height\"\n     * @function Expression.height\n     */\n    static height() {\n        return new this(\"height\");\n    }\n    /**\n     * @returns Expression a new expression with the predefined variable \"initialWidth\"\n     * @function Expression.initialWidth\n     */\n    static initialWidth() {\n        return new this(\"initialWidth\");\n    }\n    /**\n     * @returns Expression a new expression with the predefined variable \"initialHeight\"\n     * @function Expression.initialHeight\n     */\n    static initialHeight() {\n        return new this(\"initialHeight\");\n    }\n    /**\n     * @returns Expression a new expression with the predefined variable \"aspectRatio\"\n     * @function Expression.aspectRatio\n     */\n    static aspectRatio() {\n        return new this(\"aspectRatio\");\n    }\n    /**\n     * @returns Expression a new expression with the predefined variable \"initialAspectRatio\"\n     * @function Expression.initialAspectRatio\n     */\n    static initialAspectRatio() {\n        return new this(\"initialAspectRatio\");\n    }\n    /**\n     * @returns Expression a new expression with the predefined variable \"pageCount\"\n     * @function Expression.pageCount\n     */\n    static pageCount() {\n        return new this(\"pageCount\");\n    }\n    /**\n     * @returns Expression new expression with the predefined variable \"faceCount\"\n     * @function Expression.faceCount\n     */\n    static faceCount() {\n        return new this(\"faceCount\");\n    }\n    /**\n     * @returns Expression a new expression with the predefined variable \"currentPage\"\n     * @function Expression.currentPage\n     */\n    static currentPage() {\n        return new this(\"currentPage\");\n    }\n    /**\n     * @returns Expression a new expression with the predefined variable \"tags\"\n     * @function Expression.tags\n     */\n    static tags() {\n        return new this(\"tags\");\n    }\n    /**\n     * @returns Expression a new expression with the predefined variable \"pageX\"\n     * @function Expression.pageX\n     */\n    static pageX() {\n        return new this(\"pageX\");\n    }\n    /**\n     * @returns Expression a new expression with the predefined variable \"pageY\"\n     * @function Expression.pageY\n     */\n    static pageY() {\n        return new this(\"pageY\");\n    }\n}\n/**\n * @internal\n */\nconst OPERATORS = {\n    \"=\": 'eq',\n    \"!=\": 'ne',\n    \"<\": 'lt',\n    \">\": 'gt',\n    \"<=\": 'lte',\n    \">=\": 'gte',\n    \"&&\": 'and',\n    \"||\": 'or',\n    \"*\": \"mul\",\n    \"/\": \"div\",\n    \"+\": \"add\",\n    \"-\": \"sub\",\n    \"^\": \"pow\",\n};\n/**\n * @internal\n */\nconst PREDEFINED_VARS = {\n    \"aspect_ratio\": \"ar\",\n    \"aspectRatio\": \"ar\",\n    \"current_page\": \"cp\",\n    \"currentPage\": \"cp\",\n    \"preview:duration\": \"preview:duration\",\n    \"duration\": \"du\",\n    \"face_count\": \"fc\",\n    \"faceCount\": \"fc\",\n    \"height\": \"h\",\n    \"initial_aspect_ratio\": \"iar\",\n    \"initial_duration\": \"idu\",\n    \"initial_height\": \"ih\",\n    \"initial_width\": \"iw\",\n    \"initialAspectRatio\": \"iar\",\n    \"initialDuration\": \"idu\",\n    \"initialHeight\": \"ih\",\n    \"initialWidth\": \"iw\",\n    \"page_count\": \"pc\",\n    \"page_x\": \"px\",\n    \"page_y\": \"py\",\n    \"pageCount\": \"pc\",\n    \"pageX\": \"px\",\n    \"pageY\": \"py\",\n    \"tags\": \"tags\",\n    \"width\": \"w\"\n};\n/**\n * @internal\n */\nconst BOUNDRY = \"[ _]+\";\nexport default Expression;\n","import Expression from './expression.js';\n/**\n * Represents a transformation condition.\n * @param {string} conditionStr - a condition in string format\n * @class Condition\n * @example\n * // normally this class is not instantiated directly\n * var tr = cloudinary.Transformation.new()\n *    .if().width( \">\", 1000).and().aspectRatio(\"<\", \"3:4\").then()\n *      .width(1000)\n *      .crop(\"scale\")\n *    .else()\n *      .width(500)\n *      .crop(\"scale\")\n *\n * var tr = cloudinary.Transformation.new()\n *    .if(\"w > 1000 and aspectRatio < 3:4\")\n *      .width(1000)\n *      .crop(\"scale\")\n *    .else()\n *      .width(500)\n *      .crop(\"scale\")\n *\n */\nclass Condition extends Expression {\n    constructor(conditionStr) {\n        super(conditionStr);\n    }\n    /**\n     * @function Condition#height\n     * @param {string} operator the comparison operator (e.g. \"<\", \"lt\")\n     * @param {string|number} value the right hand side value\n     * @return {Condition} this condition\n     */\n    height(operator, value) {\n        return this.predicate(\"h\", operator, value);\n    }\n    /**\n     * @function Condition#width\n     * @param {string} operator the comparison operator (e.g. \"<\", \"lt\")\n     * @param {string|number} value the right hand side value\n     * @return {Condition} this condition\n     */\n    width(operator, value) {\n        return this.predicate(\"w\", operator, value);\n    }\n    /**\n     * @function Condition#aspectRatio\n     * @param {string} operator the comparison operator (e.g. \"<\", \"lt\")\n     * @param {string|number} value the right hand side value\n     * @return {Condition} this condition\n     */\n    aspectRatio(operator, value) {\n        return this.predicate(\"ar\", operator, value);\n    }\n    /**\n     * @function Condition#pages\n     * @param {string} operator the comparison operator (e.g. \"<\", \"lt\")\n     * @param {string|number} value the right hand side value\n     * @return {Condition} this condition\n     */\n    pageCount(operator, value) {\n        return this.predicate(\"pc\", operator, value);\n    }\n    /**\n     * @function Condition#faces\n     * @param {string} operator the comparison operator (e.g. \"<\", \"lt\")\n     * @param {string|number} value the right hand side value\n     * @return {Condition} this condition\n     */\n    faceCount(operator, value) {\n        return this.predicate(\"fc\", operator, value);\n    }\n    /**\n     * @function Condition#duration\n     * @param {string} operator the comparison operator (e.g. \"<\", \"lt\")\n     * @param {string|number} value the right hand side value\n     * @return {Condition} this condition\n     */\n    duration(operator, value) {\n        return this.predicate(\"du\", operator, value);\n    }\n    /**\n     * @function Condition#initialDuration\n     * @param {string} operator the comparison operator (e.g. \"<\", \"lt\")\n     * @param {string|number} value the right hand side value\n     * @return {Condition} this condition\n     */\n    initialDuration(operator, value) {\n        return this.predicate(\"idu\", operator, value);\n    }\n}\nexport default Condition;\n","import { cloneDeep } from '../internal/utils/cloneDeep.js';\nimport { isObject } from \"./utils/isObject.js\";\n/**\n * Class for defining account configuration options.\n * Depends on 'utils'\n */\n/**\n * Assign values from sources if they are not defined in the destination.\n * Once a value is set it does not change\n * @function Util.defaults\n * @param {Object} destination - the object to assign defaults to\n * @param sources\n * @param {...Object} source - the source object(s) to assign defaults from\n * @return {Object} destination after it was modified\n */\nconst useDefaultValues = (destination, ...sources) => {\n    return sources.reduce(function (dest, source) {\n        let key, value;\n        for (key in source) {\n            // @ts-ignore\n            value = source[key];\n            // @ts-ignore\n            if (dest[key] === void 0) {\n                // @ts-ignore\n                dest[key] = value;\n            }\n        }\n        return dest;\n    }, destination);\n};\n/**\n * Class for defining account configuration options.\n * @constructor Configuration\n * @param {Object} options - The account configuration parameters to set.\n * @see <a href=\"https://cloudinary.com/documentation/solution_overview#configuration_parameters\"\n *  target=\"_new\">Available configuration options</a>\n */\nclass Configuration {\n    constructor(options) {\n        this.configuration = options == null ? {} : cloneDeep(options);\n        useDefaultValues(this.configuration, DEFAULT_CONFIGURATION_PARAMS);\n    }\n    /**\n     * Initializes the configuration. This method is a convenience method that invokes both\n     *  {@link Configuration#fromEnvironment|fromEnvironment()} (Node.js environment only)\n     *  and {@link Configuration#fromDocument|fromDocument()}.\n     *  It first tries to retrieve the configuration from the environment variable.\n     *  If not available, it tries from the document meta tags.\n     * @function Configuration#init\n     * @return {Configuration} returns `this` for chaining\n     * @see fromDocument\n     * @see fromEnvironment\n     */\n    init() {\n        this.fromEnvironment();\n        this.fromDocument();\n        return this;\n    }\n    /**\n     * Set a new configuration item\n     * @function Configuration#set\n     * @param {string} name - the name of the item to set\n     * @param {*} value - the value to be set\n     * @return {Configuration}\n     *\n     */\n    set(name, value) {\n        // @ts-ignore\n        this.configuration[name] = value;\n        return this;\n    }\n    /**\n     * Get the value of a configuration item\n     * @function Configuration#get\n     * @param {string} name - the name of the item to set\n     * @return {*} the configuration item\n     */\n    get(name) {\n        return this.configuration[name];\n    }\n    merge(config) {\n        Object.assign(this.configuration, cloneDeep(config));\n        return this;\n    }\n    /**\n     * Initialize Cloudinary from HTML meta tags.\n     * @function Configuration#fromDocument\n     * @return {Configuration}\n     * @example <meta name=\"cloudinary_cloud_name\" content=\"mycloud\">\n     *\n     */\n    fromDocument() {\n        var el, i, len, meta_elements;\n        meta_elements = typeof document !== \"undefined\" && document !== null ? document.querySelectorAll('meta[name^=\"cloudinary_\"]') : void 0;\n        if (meta_elements) {\n            for (i = 0, len = meta_elements.length; i < len; i++) {\n                el = meta_elements[i];\n                this.configuration[el.getAttribute('name').replace('cloudinary_', '')] = el.getAttribute('content');\n            }\n        }\n        return this;\n    }\n    /**\n     * Initialize Cloudinary from the `CLOUDINARY_URL` environment variable.\n     *\n     * This function will only run under Node.js environment.\n     * @function Configuration#fromEnvironment\n     * @requires Node.js\n     */\n    fromEnvironment() {\n        var cloudinary_url, query, uri, uriRegex;\n        if (typeof process !== \"undefined\" && process !== null && process.env && process.env.CLOUDINARY_URL) {\n            cloudinary_url = process.env.CLOUDINARY_URL;\n            uriRegex = /cloudinary:\\/\\/(?:(\\w+)(?:\\:([\\w-]+))?@)?([\\w\\.-]+)(?:\\/([^?]*))?(?:\\?(.+))?/;\n            uri = uriRegex.exec(cloudinary_url);\n            if (uri) {\n                if (uri[3] != null) {\n                    this.configuration['cloud_name'] = uri[3];\n                }\n                if (uri[1] != null) {\n                    this.configuration['api_key'] = uri[1];\n                }\n                if (uri[2] != null) {\n                    this.configuration['api_secret'] = uri[2];\n                }\n                if (uri[4] != null) {\n                    this.configuration['private_cdn'] = uri[4] != null;\n                }\n                if (uri[4] != null) {\n                    this.configuration['secure_distribution'] = uri[4];\n                }\n                query = uri[5];\n                if (query != null) {\n                    query.split('&').forEach(value => {\n                        let [k, v] = value.split('=');\n                        if (v == null) {\n                            // @ts-ignore\n                            v = true;\n                        }\n                        this.configuration[k] = v;\n                    });\n                }\n            }\n        }\n        return this;\n    }\n    /**\n     * Create or modify the Cloudinary client configuration\n     *\n     * Warning: `config()` returns the actual internal configuration object. modifying it will change the configuration.\n     *\n     * This is a backward compatibility method. For new code, use get(), merge() etc.\n     * @function Configuration#config\n     * @param {hash|string|boolean} new_config\n     * @param {string} new_value\n     * @returns {*} configuration, or value\n     *\n     * @see {@link fromEnvironment} for initialization using environment variables\n     * @see {@link fromDocument} for initialization using HTML meta tags\n     */\n    config(new_config, new_value) {\n        switch (false) {\n            case new_value === void 0:\n                this.set(new_config, new_value);\n                return this.configuration;\n            case typeof new_config != 'string':\n                return this.get(new_config);\n            case !isObject(new_config):\n                this.merge(new_config);\n                return this.configuration;\n            default:\n                // Backward compatibility - return the internal object\n                return this.configuration;\n        }\n    }\n    /**\n     * Returns a copy of the configuration parameters\n     * @function Configuration#toOptions\n     * @returns {Object} a key:value collection of the configuration parameters\n     */\n    toOptions() {\n        return cloneDeep(this.configuration);\n    }\n}\nconst DEFAULT_CONFIGURATION_PARAMS = {\n    responsive_class: 'cld-responsive',\n    responsive_use_breakpoints: true,\n    round_dpr: true,\n    secure: (typeof window !== \"undefined\" && window !== null ? window.location ? window.location.protocol : void 0 : void 0) === 'https:'\n};\nexport const CONFIG_PARAMS = [\n    \"api_key\",\n    \"api_secret\",\n    \"callback\",\n    \"cdn_subdomain\",\n    \"cloud_name\",\n    \"cname\",\n    \"private_cdn\",\n    \"protocol\",\n    \"resource_type\",\n    \"responsive\",\n    \"responsive_class\",\n    \"responsive_use_breakpoints\",\n    \"responsive_width\",\n    \"round_dpr\",\n    \"secure\",\n    \"secure_cdn_subdomain\",\n    \"secure_distribution\",\n    \"shorten\",\n    \"type\",\n    \"upload_preset\",\n    \"url_suffix\",\n    \"use_root_path\",\n    \"version\",\n    \"externalLibraries\",\n    \"max_timeout_ms\"\n];\nexport default Configuration;\n","/* eslint-disable */\n// @ts-nocheck\n// This file is a direct copy from lodash.clonedeep\n// Lodash.clonedeep has problems with the module exports, thus a copy was the shortest and cleanest solution\n/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/** Used as references for constious `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]', arrayTag = '[object Array]', boolTag = '[object Boolean]', dateTag = '[object Date]', errorTag = '[object Error]', funcTag = '[object Function]', genTag = '[object GeneratorFunction]', mapTag = '[object Map]', numberTag = '[object Number]', objectTag = '[object Object]', promiseTag = '[object Promise]', regexpTag = '[object RegExp]', setTag = '[object Set]', stringTag = '[object String]', symbolTag = '[object Symbol]', weakMapTag = '[object WeakMap]';\nvar arrayBufferTag = '[object ArrayBuffer]', dataViewTag = '[object DataView]', float32Tag = '[object Float32Array]', float64Tag = '[object Float64Array]', int8Tag = '[object Int8Array]', int16Tag = '[object Int16Array]', int32Tag = '[object Int32Array]', uint8Tag = '[object Uint8Array]', uint8ClampedTag = '[object Uint8ClampedArray]', uint16Tag = '[object Uint16Array]', uint32Tag = '[object Uint32Array]';\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\n    cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n        cloneableTags[boolTag] = cloneableTags[dateTag] =\n            cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n                cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n                    cloneableTags[int32Tag] = cloneableTags[mapTag] =\n                        cloneableTags[numberTag] = cloneableTags[objectTag] =\n                            cloneableTags[regexpTag] = cloneableTags[setTag] =\n                                cloneableTags[stringTag] = cloneableTags[symbolTag] =\n                                    cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n                                        cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\n    cloneableTags[weakMapTag] = false;\n/** Detect free constiable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n/** Detect free constiable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n/** Detect free constiable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n/** Detect free constiable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n/**\n * Adds the key-value `pair` to `map`.\n *\n * @private\n * @param {Object} map The map to modify.\n * @param {Array} pair The key-value pair to add.\n * @returns {Object} Returns `map`.\n */\nfunction addMapEntry(map, pair) {\n    // Don't return `map.set` because it's not chainable in IE 11.\n    map.set(pair[0], pair[1]);\n    return map;\n}\n/**\n * Adds `value` to `set`.\n *\n * @private\n * @param {Object} set The set to modify.\n * @param {*} value The value to add.\n * @returns {Object} Returns `set`.\n */\nfunction addSetEntry(set, value) {\n    // Don't return `set.add` because it's not chainable in IE 11.\n    set.add(value);\n    return set;\n}\n/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n    var index = -1, length = array ? array.length : 0;\n    while (++index < length) {\n        if (iteratee(array[index], index, array) === false) {\n            break;\n        }\n    }\n    return array;\n}\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n    var index = -1, length = values.length, offset = array.length;\n    while (++index < length) {\n        array[offset + index] = values[index];\n    }\n    return array;\n}\n/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n    var index = -1, length = array ? array.length : 0;\n    if (initAccum && length) {\n        accumulator = array[++index];\n    }\n    while (++index < length) {\n        accumulator = iteratee(accumulator, array[index], index, array);\n    }\n    return accumulator;\n}\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n    var index = -1, result = Array(n);\n    while (++index < n) {\n        result[index] = iteratee(index);\n    }\n    return result;\n}\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n    return object == null ? undefined : object[key];\n}\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n    // Many host objects are `Object` objects that can coerce to strings\n    // despite having improperly defined `toString` methods.\n    var result = false;\n    if (value != null && typeof value.toString != 'function') {\n        try {\n            result = !!(`${value}`);\n        }\n        catch (e) {\n        }\n    }\n    return result;\n}\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n    var index = -1, result = Array(map.size);\n    map.forEach(function (value, key) {\n        result[++index] = [key, value];\n    });\n    return result;\n}\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n    return function (arg) {\n        return func(transform(arg));\n    };\n}\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n    var index = -1, result = Array(set.size);\n    set.forEach(function (value) {\n        result[++index] = value;\n    });\n    return result;\n}\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype, funcProto = Function.prototype, objectProto = Object.prototype;\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function () {\n    var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n    return uid ? (`Symbol(src)_1.${uid}`) : '';\n}());\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp(`^${funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n    .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?')}$`);\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined, Symbol = root.Symbol, Uint8Array = root.Uint8Array, getPrototype = overArg(Object.getPrototypeOf, Object), objectCreate = Object.create, propertyIsEnumerable = objectProto.propertyIsEnumerable, splice = arrayProto.splice;\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols, nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined, nativeKeys = overArg(Object.keys, Object);\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView'), Map = getNative(root, 'Map'), Promise = getNative(root, 'Promise'), Set = getNative(root, 'Set'), WeakMap = getNative(root, 'WeakMap'), nativeCreate = getNative(Object, 'create');\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView), mapCtorString = toSource(Map), promiseCtorString = toSource(Promise), setCtorString = toSource(Set), weakMapCtorString = toSource(WeakMap);\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined, symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n    var index = -1, length = entries ? entries.length : 0;\n    this.clear();\n    while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n    }\n}\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n    this.__data__ = nativeCreate ? nativeCreate(null) : {};\n}\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n    return this.has(key) && delete this.__data__[key];\n}\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n    var data = this.__data__;\n    if (nativeCreate) {\n        var result = data[key];\n        return result === HASH_UNDEFINED ? undefined : result;\n    }\n    return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n    var data = this.__data__;\n    return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n    var data = this.__data__;\n    data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n    return this;\n}\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype.delete = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n    var index = -1, length = entries ? entries.length : 0;\n    this.clear();\n    while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n    }\n}\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n    this.__data__ = [];\n}\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n    var data = this.__data__, index = assocIndexOf(data, key);\n    if (index < 0) {\n        return false;\n    }\n    var lastIndex = data.length - 1;\n    if (index == lastIndex) {\n        data.pop();\n    }\n    else {\n        splice.call(data, index, 1);\n    }\n    return true;\n}\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n    var data = this.__data__, index = assocIndexOf(data, key);\n    return index < 0 ? undefined : data[index][1];\n}\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n    return assocIndexOf(this.__data__, key) > -1;\n}\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n    var data = this.__data__, index = assocIndexOf(data, key);\n    if (index < 0) {\n        data.push([key, value]);\n    }\n    else {\n        data[index][1] = value;\n    }\n    return this;\n}\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype.delete = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n    var index = -1, length = entries ? entries.length : 0;\n    this.clear();\n    while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n    }\n}\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n    this.__data__ = {\n        'hash': new Hash,\n        'map': new (Map || ListCache),\n        'string': new Hash\n    };\n}\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n    return getMapData(this, key).delete(key);\n}\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n    return getMapData(this, key).get(key);\n}\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n    return getMapData(this, key).has(key);\n}\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n    getMapData(this, key).set(key, value);\n    return this;\n}\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype.delete = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n    this.__data__ = new ListCache(entries);\n}\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n    this.__data__ = new ListCache;\n}\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n    return this.__data__.delete(key);\n}\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n    return this.__data__.get(key);\n}\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n    return this.__data__.has(key);\n}\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n    var cache = this.__data__;\n    if (cache instanceof ListCache) {\n        var pairs = cache.__data__;\n        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n            pairs.push([key, value]);\n            return this;\n        }\n        cache = this.__data__ = new MapCache(pairs);\n    }\n    cache.set(key, value);\n    return this;\n}\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype.delete = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n    // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n    // Safari 9 makes `arguments.length` enumerable in strict mode.\n    var result = (isArray(value) || isArguments(value))\n        ? baseTimes(value.length, String)\n        : [];\n    var length = result.length, skipIndexes = !!length;\n    for (var key in value) {\n        if ((inherited || hasOwnProperty.call(value, key)) &&\n            !(skipIndexes && (key == 'length' || isIndex(key, length)))) {\n            result.push(key);\n        }\n    }\n    return result;\n}\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n    var objValue = object[key];\n    if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n        (value === undefined && !(key in object))) {\n        object[key] = value;\n    }\n}\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n    var length = array.length;\n    while (length--) {\n        if (eq(array[length][0], key)) {\n            return length;\n        }\n    }\n    return -1;\n}\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n    return object && copyObject(source, keys(source), object);\n}\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @param {boolean} [isFull] Specify a clone including symbols.\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, isDeep, isFull, customizer, key, object, stack) {\n    var result;\n    if (customizer) {\n        result = object ? customizer(value, key, object, stack) : customizer(value);\n    }\n    if (result !== undefined) {\n        return result;\n    }\n    if (!isObject(value)) {\n        return value;\n    }\n    var isArr = isArray(value);\n    if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n            return copyArray(value, result);\n        }\n    }\n    else {\n        var tag = getTag(value), isFunc = tag == funcTag || tag == genTag;\n        if (isBuffer(value)) {\n            return cloneBuffer(value, isDeep);\n        }\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n            if (isHostObject(value)) {\n                return object ? value : {};\n            }\n            result = initCloneObject(isFunc ? {} : value);\n            if (!isDeep) {\n                return copySymbols(value, baseAssign(result, value));\n            }\n        }\n        else {\n            if (!cloneableTags[tag]) {\n                return object ? value : {};\n            }\n            result = initCloneByTag(value, tag, baseClone, isDeep);\n        }\n    }\n    // Check for circular references and return its corresponding clone.\n    stack || (stack = new Stack);\n    var stacked = stack.get(value);\n    if (stacked) {\n        return stacked;\n    }\n    stack.set(value, result);\n    if (!isArr) {\n        var props = isFull ? getAllKeys(value) : keys(value);\n    }\n    arrayEach(props || value, function (subValue, key) {\n        if (props) {\n            key = subValue;\n            subValue = value[key];\n        }\n        // Recursively populate clone (susceptible to call stack limits).\n        assignValue(result, key, baseClone(subValue, isDeep, isFull, customizer, key, value, stack));\n    });\n    return result;\n}\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} prototype The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nfunction baseCreate(proto) {\n    return isObject(proto) ? objectCreate(proto) : {};\n}\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n    var result = keysFunc(object);\n    return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n/**\n * The base implementation of `getTag`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n    return objectToString.call(value);\n}\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n    if (!isObject(value) || isMasked(value)) {\n        return false;\n    }\n    var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n    return pattern.test(toSource(value));\n}\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n    if (!isPrototype(object)) {\n        return nativeKeys(object);\n    }\n    var result = [];\n    for (var key in Object(object)) {\n        if (hasOwnProperty.call(object, key) && key != 'constructor') {\n            result.push(key);\n        }\n    }\n    return result;\n}\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n    if (isDeep) {\n        return buffer.slice();\n    }\n    var result = new buffer.constructor(buffer.length);\n    buffer.copy(result);\n    return result;\n}\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n    var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n    new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n    return result;\n}\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n    var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n    return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n/**\n * Creates a clone of `map`.\n *\n * @private\n * @param {Object} map The map to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned map.\n */\nfunction cloneMap(map, isDeep, cloneFunc) {\n    var array = isDeep ? cloneFunc(mapToArray(map), true) : mapToArray(map);\n    return arrayReduce(array, addMapEntry, new map.constructor);\n}\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n    var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n    result.lastIndex = regexp.lastIndex;\n    return result;\n}\n/**\n * Creates a clone of `set`.\n *\n * @private\n * @param {Object} set The set to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned set.\n */\nfunction cloneSet(set, isDeep, cloneFunc) {\n    var array = isDeep ? cloneFunc(setToArray(set), true) : setToArray(set);\n    return arrayReduce(array, addSetEntry, new set.constructor);\n}\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n    return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n    var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n    return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n    var index = -1, length = source.length;\n    array || (array = Array(length));\n    while (++index < length) {\n        array[index] = source[index];\n    }\n    return array;\n}\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n    object || (object = {});\n    var index = -1, length = props.length;\n    while (++index < length) {\n        var key = props[index];\n        var newValue = customizer\n            ? customizer(object[key], source[key], key, object, source)\n            : undefined;\n        assignValue(object, key, newValue === undefined ? source[key] : newValue);\n    }\n    return object;\n}\n/**\n * Copies own symbol properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n    return copyObject(source, getSymbols(source), object);\n}\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n    return baseGetAllKeys(object, keys, getSymbols);\n}\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n    var data = map.__data__;\n    return isKeyable(key)\n        ? data[typeof key == 'string' ? 'string' : 'hash']\n        : data.map;\n}\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n    var value = getValue(object, key);\n    return baseIsNative(value) ? value : undefined;\n}\n/**\n * Creates an array of the own enumerable symbol properties of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = nativeGetSymbols ? overArg(nativeGetSymbols, Object) : stubArray;\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n// Fallback for data views, maps, sets, and weak maps in IE 11,\n// for data views in Edge < 14, and promises in Node.js.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n    getTag = function (value) {\n        var result = objectToString.call(value), Ctor = result == objectTag ? value.constructor : undefined, ctorString = Ctor ? toSource(Ctor) : undefined;\n        if (ctorString) {\n            switch (ctorString) {\n                case dataViewCtorString:\n                    return dataViewTag;\n                case mapCtorString:\n                    return mapTag;\n                case promiseCtorString:\n                    return promiseTag;\n                case setCtorString:\n                    return setTag;\n                case weakMapCtorString:\n                    return weakMapTag;\n            }\n        }\n        return result;\n    };\n}\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n    var length = array.length, result = array.constructor(length);\n    // Add properties assigned by `RegExp#exec`.\n    if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n    }\n    return result;\n}\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n    return (typeof object.constructor == 'function' && !isPrototype(object))\n        ? baseCreate(getPrototype(object))\n        : {};\n}\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, cloneFunc, isDeep) {\n    var Ctor = object.constructor;\n    switch (tag) {\n        case arrayBufferTag:\n            return cloneArrayBuffer(object);\n        case boolTag:\n        case dateTag:\n            return new Ctor(+object);\n        case dataViewTag:\n            return cloneDataView(object, isDeep);\n        case float32Tag:\n        case float64Tag:\n        case int8Tag:\n        case int16Tag:\n        case int32Tag:\n        case uint8Tag:\n        case uint8ClampedTag:\n        case uint16Tag:\n        case uint32Tag:\n            return cloneTypedArray(object, isDeep);\n        case mapTag:\n            return cloneMap(object, isDeep, cloneFunc);\n        case numberTag:\n        case stringTag:\n            return new Ctor(object);\n        case regexpTag:\n            return cloneRegExp(object);\n        case setTag:\n            return cloneSet(object, isDeep, cloneFunc);\n        case symbolTag:\n            return cloneSymbol(object);\n    }\n}\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n    length = length == null ? MAX_SAFE_INTEGER : length;\n    return !!length &&\n        (typeof value == 'number' || reIsUint.test(value)) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n    var type = typeof value;\n    return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n        ? (value !== '__proto__')\n        : (value === null);\n}\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n    return !!maskSrcKey && (maskSrcKey in func);\n}\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n    var Ctor = value && value.constructor, proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n    return value === proto;\n}\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n    if (func != null) {\n        try {\n            return funcToString.call(func);\n        }\n        catch (e) {\n        }\n        try {\n            return (`${func}`);\n        }\n        catch (e) {\n        }\n    }\n    return '';\n}\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n    return baseClone(value, true, true);\n}\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n    return value === other || (value !== value && other !== other);\n}\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n    // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n    return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n        (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n}\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n    return value != null && isLength(value.length) && !isFunction(value);\n}\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n    return isObjectLike(value) && isArrayLike(value);\n}\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n    // The use of `Object#toString` avoids issues with the `typeof` operator\n    // in Safari 8-9 which returns 'object' for typed array and other constructors.\n    var tag = isObject(value) ? objectToString.call(value) : '';\n    return tag == funcTag || tag == genTag;\n}\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n    return typeof value == 'number' &&\n        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n    var type = typeof value;\n    return !!value && (type == 'object' || type == 'function');\n}\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n    return !!value && typeof value == 'object';\n}\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n    return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n    return [];\n}\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n    return false;\n}\nexport { cloneDeep };\n","/**\n * Create a copy of the source object with all keys in camelCase\n * @function Util.withCamelCaseKeys\n * @return {Object} a new object\n * @param source\n */\nimport { isEmpty } from \"./isEmpty.js\";\nexport const withCamelCaseKeys = function (source) {\n    return convertKeys(source, camelCase);\n};\n/**\n * Convert string to camelCase\n * @function Util.camelCase\n * @param {string} source - the string to convert\n * @return {string} in camelCase format\n */\nexport const camelCase = function (source) {\n    let words = source.match(reWords);\n    words = words.map(word => word.charAt(0).toLocaleUpperCase() + word.slice(1).toLocaleLowerCase());\n    words[0] = words[0].toLocaleLowerCase();\n    return words.join('');\n};\n/**\n * Creates a new object from source, with the keys transformed using the converter.\n * @param {object} source\n * @param {function|null} converter\n * @returns {object}\n */\nexport var convertKeys = function (source, converter) {\n    var result, value;\n    result = {};\n    for (let key in source) {\n        value = source[key];\n        if (converter) {\n            key = converter(key);\n        }\n        if (!isEmpty(key)) {\n            // @ts-ignore\n            result[key] = value;\n        }\n    }\n    return result;\n};\nexport var reWords = (function () {\n    var lower, upper;\n    upper = '[A-Z]';\n    lower = '[a-z]+';\n    return RegExp(upper + '+(?=' + upper + lower + ')|' + upper + '?' + lower + '|' + upper + '+|[0-9]+', 'g');\n})();\nexport function identity(x) {\n    return x;\n}\nexport function contains(a, obj) {\n    for (let i = 0; i < a.length; i++) {\n        if (a[i] === obj) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function difference(arr1, arr2) {\n    return arr1.filter(x => !arr2.includes(x));\n}\n","import TextLayer from './textlayer.js';\nclass SubtitlesLayer extends TextLayer {\n    /**\n     * Represent a subtitles layer\n     * @constructor SubtitlesLayer\n     * @param {Object} options - layer parameters\n     */\n    constructor(options) {\n        super(options);\n        this.options.resourceType = \"subtitles\";\n    }\n}\nexport default SubtitlesLayer;\n","/**\n * Sort a map by key\n * @private\n * @param map <string, any>\n * @Return array of map's values sorted by key\n */\nfunction mapToSortedArray(map, flags) {\n    const array = Array.from(map.entries());\n    // objects from the Array.from() method above are stored in array of arrays:\n    // [[qualifierKey, QualifierObj], [qualifierKey, QualifierObj]]\n    // Flags is an array of FlagQualifierObj\n    // We need to convert it to the same form: [flagQualifier] =>  ['fl', flagQualifier]\n    flags.forEach((flag) => {\n        array.push(['fl', flag]); // push ['fl', flagQualifier]\n    });\n    return array.sort().map((v) => v[1]);\n}\n/**\n * Checks if `value` is a string.\n * @private\n * @param {*} value The value to check.\n * @return {boolean} `true` if `value` is a string, else `false`.\n */\nfunction isString(value) {\n    return (typeof value === 'string' || value instanceof String);\n}\nexport { isString, mapToSortedArray };\n","import Layer from './layer.js';\nimport { isString } from \"../../internal/utils/dataStructureUtils.js\";\nimport { base64Encode } from \"../../internal/utils/base64Encode.js\";\nclass FetchLayer extends Layer {\n    /**\n     * @class FetchLayer\n     * @classdesc Creates an image layer using a remote URL.\n     * @param {Object|string} options - layer parameters or a url\n     * @param {string} options.url the url of the image to fetch\n     */\n    constructor(options) {\n        super(options);\n        if (isString(options)) {\n            this.options.url = options;\n        }\n        else if (options != null ? options.url : void 0) {\n            this.options.url = options.url;\n        }\n    }\n    url(url) {\n        this.options.url = url;\n        return this;\n    }\n    /**\n     * generate the string representation of the layer\n     * @function FetchLayer#toString\n     * @return {String}\n     */\n    toString() {\n        return `fetch:${base64Encode(this.options.url)}`;\n    }\n}\nexport default FetchLayer;\n","/**\n * Simple Is Function check\n *\n * @param variableToCheck\n * @returns {boolean}\n */\nexport function isFunction(variableToCheck) {\n    return variableToCheck instanceof Function;\n}\n","import Condition from './condition.js';\nimport { CONFIG_PARAMS } from './configuration.js';\nimport { cloneDeep } from '../internal/utils/cloneDeep.js';\nimport { camelCase, contains, difference, } from \"./utils/legacyBaseUtil.js\";\nimport { snakeCase } from \"./utils/snakeCase.js\";\nimport Expression from './expression.js';\nimport Layer from './legacyLayer/layer.js';\nimport TextLayer from './legacyLayer/textlayer.js';\nimport SubtitlesLayer from './legacyLayer/subtitleslayer.js';\nimport FetchLayer from './legacyLayer/fetchlayer.js';\nimport { isObject } from \"./utils/isObject.js\";\nimport { isString } from \"../internal/utils/dataStructureUtils.js\";\nimport { isEmpty } from \"./utils/isEmpty.js\";\nimport { isFunction } from \"./utils/isFunction.js\";\nimport { identity, withCamelCaseKeys } from \"./utils/legacyBaseUtil.js\";\n/**\n * A list of keys used by the url() function.\n * @private\n */\nexport const URL_KEYS = [\n    'accessibility',\n    'api_secret',\n    'auth_token',\n    'cdn_subdomain',\n    'cloud_name',\n    'cname',\n    'format',\n    'placeholder',\n    'private_cdn',\n    'resource_type',\n    'secure',\n    'secure_cdn_subdomain',\n    'secure_distribution',\n    'shorten',\n    'sign_url',\n    'signature',\n    'ssl_detected',\n    'type',\n    'url_suffix',\n    'use_root_path',\n    'version'\n];\n/**\n * Assign key, value to target, when value is not null.<br>\n *   This function mutates the target!\n * @param {object} target the object to assign the values to\n * @param {object} sources one or more objects to get values from\n * @returns {object} the target after the assignment\n */\nfunction assignNotNull(target, ...sources) {\n    sources.forEach(source => {\n        Object.keys(source).forEach(key => {\n            // @ts-ignore\n            if (source[key] != null) {\n                // @ts-ignore\n                target[key] = source[key];\n            }\n        });\n    });\n    return target;\n}\n/**\n * Return true if all items in list are strings\n * @function Util.allString\n * @param {Array} list - an array of items\n */\nconst allStrings = function (list) {\n    return list.length && list.every(isString);\n};\n/**\n * Transformation parameters\n * Depends on 'util', 'transformation'\n */\nclass Param {\n    /**\n     * Represents a single parameter.\n     * @class Param\n     * @param {string} name - The name of the parameter in snake_case\n     * @param {string} shortName - The name of the serialized form of the parameter.\n     *                         If a value is not provided, the parameter will not be serialized.\n     * @param {function} [process=Util.identity ] - Manipulate origValue when value is called\n     * @ignore\n     */\n    constructor(name, shortName, process = identity) {\n        /**\n         * The name of the parameter in snake_case\n         * @member {string} Param#name\n         */\n        this.name = name;\n        /**\n         * The name of the serialized form of the parameter\n         * @member {string} Param#shortName\n         */\n        this.shortName = shortName;\n        /**\n         * Manipulate origValue when value is called\n         * @member {function} Param#process\n         */\n        this.process = process;\n    }\n    /**\n     * Set a (unprocessed) value for this parameter\n     * @function Param#set\n     * @param {*} origValue - the value of the parameter\n     * @return {Param} self for chaining\n     */\n    set(origValue) {\n        this.origValue = origValue;\n        return this;\n    }\n    /**\n     * Generate the serialized form of the parameter\n     * @function Param#serialize\n     * @return {string} the serialized form of the parameter\n     */\n    serialize() {\n        var val, valid;\n        val = this.value();\n        valid = Array.isArray(val) || isObject(val) || isString(val) ? !isEmpty(val) : val != null;\n        if ((this.shortName != null) && valid) {\n            return `${this.shortName}_${val}`;\n        }\n        else {\n            return '';\n        }\n    }\n    /**\n     * Return the processed value of the parameter\n     * @function Param#value\n     */\n    value() {\n        return this.process(this.origValue);\n    }\n    static norm_color(value) {\n        return value != null ? value.replace(/^#/, 'rgb:') : void 0;\n    }\n    static build_array(arg) {\n        if (arg == null) {\n            return [];\n        }\n        else if (Array.isArray(arg)) {\n            return arg;\n        }\n        else {\n            return [arg];\n        }\n    }\n    /**\n     * Covert value to video codec string.\n     *\n     * If the parameter is an object,\n     * @param {(string|Object)} param - the video codec as either a String or a Hash\n     * @return {string} the video codec string in the format codec:profile:level\n     * @example\n     * vc_[ :profile : [level]]\n     * or\n     { codec: 'h264', profile: 'basic', level: '3.1' }\n     * @ignore\n     */\n    static process_video_params(param) {\n        var video;\n        switch (param.constructor) {\n            case Object:\n                video = \"\";\n                if ('codec' in param) {\n                    video = param.codec;\n                    if ('profile' in param) {\n                        video += \":\" + param.profile;\n                        if ('level' in param) {\n                            video += \":\" + param.level;\n                        }\n                    }\n                }\n                return video;\n            case String:\n                return param;\n            default:\n                return null;\n        }\n    }\n}\nclass ArrayParam extends Param {\n    /**\n     * A parameter that represents an array.\n     * @param {string} name - The name of the parameter in snake_case.\n     * @param {string} shortName - The name of the serialized form of the parameter\n     *                         If a value is not provided, the parameter will not be serialized.\n     * @param {string} [sep='.'] - The separator to use when joining the array elements together\n     * @param {function} [process=Util.identity ] - Manipulate origValue when value is called\n     * @class ArrayParam\n     * @extends Param\n     * @ignore\n     */\n    constructor(name, shortName, sep = '.', process = undefined) {\n        super(name, shortName, process);\n        this.sep = sep;\n    }\n    serialize() {\n        if (this.shortName != null) {\n            let arrayValue = this.value();\n            if (isEmpty(arrayValue)) {\n                return '';\n            }\n            else if (isString(arrayValue)) {\n                return `${this.shortName}_${arrayValue}`;\n            }\n            else {\n                let flat = arrayValue.map((t) => isFunction(t.serialize) ? t.serialize() : t).join(this.sep);\n                return `${this.shortName}_${flat}`;\n            }\n        }\n        else {\n            return '';\n        }\n    }\n    value() {\n        if (Array.isArray(this.origValue)) {\n            return this.origValue.map(v => this.process(v));\n        }\n        else {\n            return this.process(this.origValue);\n        }\n    }\n    set(origValue) {\n        if ((origValue == null) || Array.isArray(origValue)) {\n            return super.set(origValue);\n        }\n        else {\n            return super.set([origValue]);\n        }\n    }\n}\nclass TransformationParam extends Param {\n    /**\n     * A parameter that represents a transformation\n     * @param {string} name - The name of the parameter in snake_case\n     * @param {string} [shortName='t'] - The name of the serialized form of the parameter\n     * @param {string} [sep='.'] - The separator to use when joining the array elements together\n     * @param {function} [process=Util.identity ] - Manipulate origValue when value is called\n     * @class TransformationParam\n     * @extends Param\n     * @ignore\n     */\n    constructor(name, shortName = \"t\", sep = '.', process = undefined) {\n        super(name, shortName, process);\n        this.sep = sep;\n    }\n    /**\n     * Generate string representations of the transformation.\n     * @returns {*} Returns either the transformation as a string, or an array of string representations.\n     */\n    serialize() {\n        let result = '';\n        const val = this.value();\n        if (isEmpty(val)) {\n            return result;\n        }\n        // val is an array of strings so join them\n        if (allStrings(val)) {\n            const joined = val.join(this.sep); // creates t1.t2.t3 in case multiple named transformations were configured\n            if (!isEmpty(joined)) {\n                // in case options.transformation was not set with an empty string (val != ['']);\n                result = `${this.shortName}_${joined}`;\n            }\n        }\n        else { // Convert val to an array of strings\n            result = val.map((t) => {\n                if (isString(t) && !isEmpty(t)) {\n                    return `${this.shortName}_${t}`;\n                }\n                if (isFunction(t.serialize)) {\n                    return t.serialize();\n                }\n                if (isObject(t) && !isEmpty(t)) {\n                    return new Transformation(t).serialize();\n                }\n                return undefined;\n            }).filter((t) => t);\n        }\n        return result;\n    }\n    set(origValue1) {\n        this.origValue = origValue1;\n        if (Array.isArray(this.origValue)) {\n            return super.set(this.origValue);\n        }\n        else {\n            return super.set([this.origValue]);\n        }\n    }\n}\nconst number_pattern = \"([0-9]*)\\\\.([0-9]+)|([0-9]+)\";\nconst offset_any_pattern = \"(\" + number_pattern + \")([%pP])?\";\nclass RangeParam extends Param {\n    /**\n     * A parameter that represents a range\n     * @param {string} name - The name of the parameter in snake_case\n     * @param {string} shortName - The name of the serialized form of the parameter\n     *                         If a value is not provided, the parameter will not be serialized.\n     * @param {function} [process=norm_range_value ] - Manipulate origValue when value is called\n     * @class RangeParam\n     * @extends Param\n     * @ignore\n     */\n    constructor(name, shortName, process = RangeParam.norm_range_value) {\n        super(name, shortName, process);\n    }\n    static norm_range_value(value) {\n        let offset = String(value).match(new RegExp('^' + offset_any_pattern + '$'));\n        if (offset) {\n            let modifier = offset[5] != null ? 'p' : '';\n            value = (offset[1] || offset[4]) + modifier;\n        }\n        return value;\n    }\n}\nclass RawParam extends Param {\n    constructor(name, shortName, process = identity) {\n        super(name, shortName, process);\n    }\n    serialize() {\n        return this.value();\n    }\n}\nclass LayerParam extends Param {\n    // Parse layer options\n    // @return [string] layer transformation string\n    // @private\n    value() {\n        if (this.origValue == null) {\n            return '';\n        }\n        let result;\n        if (this.origValue instanceof Layer) {\n            result = this.origValue;\n        }\n        else if (isObject(this.origValue)) {\n            let layerOptions = withCamelCaseKeys(this.origValue);\n            // @ts-ignore\n            if (layerOptions.resourceType === \"text\" || (layerOptions.text != null)) {\n                result = new TextLayer(layerOptions);\n            }\n            else { // @ts-ignore\n                if (layerOptions.resourceType === \"subtitles\") {\n                    result = new SubtitlesLayer(layerOptions);\n                }\n                else { // @ts-ignore\n                    if (layerOptions.resourceType === \"fetch\" || (layerOptions.url != null)) {\n                        result = new FetchLayer(layerOptions);\n                    }\n                    else {\n                        result = new Layer(layerOptions);\n                    }\n                }\n            }\n        }\n        else if (isString(this.origValue)) {\n            if (/^fetch:.+/.test(this.origValue)) {\n                result = new FetchLayer(this.origValue.substr(6));\n            }\n            else {\n                result = this.origValue;\n            }\n        }\n        else {\n            result = '';\n        }\n        return result.toString();\n    }\n    static textStyle(layer) {\n        return (new TextLayer(layer)).textStyleIdentifier();\n    }\n}\n/**\n * TransformationBase\n * Depends on 'configuration', 'parameters','util'\n * @internal\n */\nclass TransformationBase {\n    /**\n     * The base class for transformations.\n     * Members of this class are documented as belonging to the {@link Transformation} class for convenience.\n     * @class TransformationBase\n     */\n    constructor(options) {\n        /** @private */\n        /** @private */\n        let parent;\n        let trans;\n        parent = void 0;\n        trans = {};\n        /**\n         * Return an options object that can be used to create an identical Transformation\n         * @function Transformation#toOptions\n         * @return {Object} Returns a plain object representing this transformation\n         */\n        this.toOptions = (withChain) => {\n            let opt = {};\n            if (withChain == null) {\n                withChain = true;\n            }\n            // @ts-ignore\n            Object.keys(trans).forEach(key => opt[key] = trans[key].origValue);\n            assignNotNull(opt, this.otherOptions);\n            if (withChain && !isEmpty(this.chained)) {\n                let list = this.chained.map((tr) => tr.toOptions());\n                list.push(opt);\n                opt = {};\n                assignNotNull(opt, this.otherOptions);\n                // @ts-ignore\n                opt.transformation = list;\n            }\n            return opt;\n        };\n        /**\n         * Set a parent for this object for chaining purposes.\n         *\n         * @function Transformation#setParent\n         * @param {Object} object - the parent to be assigned to\n         * @returns {Transformation} Returns this instance for chaining purposes.\n         */\n        this.setParent = (object) => {\n            parent = object;\n            if (object != null) {\n                // @ts-ignore\n                this.fromOptions(typeof object.toOptions === \"function\" ? object.toOptions() : void 0);\n            }\n            return this;\n        };\n        /**\n         * Returns the parent of this object in the chain\n         * @function Transformation#getParent\n         * @protected\n         * @return {Object} Returns the parent of this object if there is any\n         */\n        this.getParent = () => {\n            return parent;\n        };\n        // Helper methods to create parameter methods\n        // These methods are defined here because they access `trans` which is\n        // a private member of `TransformationBase`\n        /** @protected */\n        this.param = (value, name, abbr, defaultValue, process) => {\n            if (process == null) {\n                if (isFunction(defaultValue)) {\n                    process = defaultValue;\n                }\n                else {\n                    process = identity;\n                }\n            }\n            // @ts-ignore\n            trans[name] = new Param(name, abbr, process).set(value);\n            return this;\n        };\n        /** @protected */\n        this.rawParam = function (value, name, abbr, defaultValue, process) {\n            process = lastArgCallback(arguments);\n            // @ts-ignore\n            trans[name] = new RawParam(name, abbr, process).set(value);\n            return this;\n        };\n        /** @protected */\n        this.rangeParam = function (value, name, abbr, defaultValue, process) {\n            process = lastArgCallback(arguments);\n            // @ts-ignore\n            trans[name] = new RangeParam(name, abbr, process).set(value);\n            return this;\n        };\n        /** @protected */\n        this.arrayParam = function (value, name, abbr, sep = \":\", defaultValue = [], process = undefined) {\n            process = lastArgCallback(arguments);\n            // @ts-ignore\n            trans[name] = new ArrayParam(name, abbr, sep, process).set(value);\n            return this;\n        };\n        /** @protected */\n        this.transformationParam = function (value, name, abbr, sep = \".\", defaultValue = undefined, process = undefined) {\n            process = lastArgCallback(arguments);\n            // @ts-ignore\n            trans[name] = new TransformationParam(name, abbr, sep, process).set(value);\n            return this;\n        };\n        this.layerParam = function (value, name, abbr) {\n            // @ts-ignore\n            trans[name] = new LayerParam(name, abbr).set(value);\n            return this;\n        };\n        // End Helper methods\n        /**\n         * Get the value associated with the given name.\n         * Get the value associated with the given name.\n         * @function Transformation#getValue\n         * @param {string} name - the name of the parameter\n         * @return {*} the processed value associated with the given name\n         * @description Use {@link get}.origValue for the value originally provided for the parameter\n         */\n        this.getValue = function (name) {\n            // @ts-ignore\n            let value = trans[name] && trans[name].value();\n            return value != null ? value : this.otherOptions[name];\n        };\n        /**\n         * Get the parameter object for the given parameter name\n         * @function Transformation#get\n         * @param {string} name the name of the transformation parameter\n         * @returns {Param} the param object for the given name, or undefined\n         */\n        this.get = function (name) {\n            // @ts-ignore\n            return trans[name];\n        };\n        /**\n         * Remove a transformation option from the transformation.\n         * @function Transformation#remove\n         * @param {string} name - the name of the option to remove\n         * @return {*} Returns the option that was removed or null if no option by that name was found. The type of the\n         *              returned value depends on the value.\n         */\n        this.remove = function (name) {\n            var temp;\n            switch (false) {\n                // @ts-ignore\n                case trans[name] == null:\n                    // @ts-ignore\n                    temp = trans[name];\n                    // @ts-ignore\n                    delete trans[name];\n                    return temp.origValue;\n                case this.otherOptions[name] == null:\n                    temp = this.otherOptions[name];\n                    delete this.otherOptions[name];\n                    return temp;\n                default:\n                    return null;\n            }\n        };\n        /**\n         * Return an array of all the keys (option names) in the transformation.\n         * @return {Array<string>} the keys in snakeCase format\n         */\n        this.keys = function () {\n            var key;\n            return ((function () {\n                var results;\n                results = [];\n                for (key in trans) {\n                    if (key != null) {\n                        results.push(key.match(VAR_NAME_RE) ? key : snakeCase(key));\n                    }\n                }\n                return results;\n            })()).sort();\n        };\n        /**\n         * Returns a plain object representation of the transformation. Values are processed.\n         * @function Transformation#toPlainObject\n         * @return {Object} the transformation options as plain object\n         */\n        this.toPlainObject = function () {\n            var hash, key, list;\n            hash = {};\n            for (key in trans) {\n                // @ts-ignore\n                hash[key] = trans[key].value();\n                // @ts-ignore\n                if (isObject(hash[key])) {\n                    // @ts-ignore\n                    hash[key] = cloneDeep(hash[key]);\n                }\n            }\n            if (!isEmpty(this.chained)) {\n                list = this.chained.map((tr) => tr.toPlainObject());\n                list.push(hash);\n                hash = {\n                    transformation: list\n                };\n            }\n            return hash;\n        };\n        /**\n         * Complete the current transformation and chain to a new one.\n         * In the URL, transformations are chained together by slashes.\n         * @function Transformation#chain\n         * @return {Transformation} Returns this transformation for chaining\n         * @example\n         * var tr = cloudinary.Transformation.new();\n         * tr.width(10).crop('fit').chain().angle(15).serialize()\n         * // produces \"c_fit,w_10/a_15\"\n         */\n        this.chain = function () {\n            var names, tr;\n            names = Object.getOwnPropertyNames(trans);\n            if (names.length !== 0) {\n                tr = new this.constructor(this.toOptions(false));\n                this.resetTransformations();\n                this.chained.push(tr);\n            }\n            return this;\n        };\n        this.resetTransformations = function () {\n            trans = {};\n            return this;\n        };\n        this.otherOptions = {};\n        this.chained = [];\n        this.fromOptions(options);\n    }\n    /**\n     * Merge the provided options with own's options\n     * @param {Object} [options={}] key-value list of options\n     * @returns {Transformation} Returns this instance for chaining\n     */\n    fromOptions(options = {}) {\n        if (options instanceof TransformationBase) {\n            this.fromTransformation(options);\n        }\n        else {\n            if (isString(options) || Array.isArray(options)) {\n                options = {\n                    transformation: options\n                };\n            }\n            options = cloneDeep(options);\n            // Handling of \"if\" statements precedes other options as it creates a chained transformation\n            // @ts-ignore\n            if (options[\"if\"]) {\n                // @ts-ignore\n                this.set(\"if\", options[\"if\"]);\n                // @ts-ignore\n                delete options[\"if\"];\n            }\n            for (let key in options) {\n                // @ts-ignore\n                let opt = options[key];\n                if (opt != null) {\n                    if (key.match(VAR_NAME_RE)) {\n                        if (key !== '$attr') {\n                            this.set('variable', key, opt);\n                        }\n                    }\n                    else {\n                        this.set(key, opt);\n                    }\n                }\n            }\n        }\n        return this;\n    }\n    fromTransformation(other) {\n        if (other instanceof TransformationBase) {\n            other.keys().forEach(key => this.set(key, other.get(key).origValue));\n        }\n        return this;\n    }\n    /**\n     * Set a parameter.\n     * The parameter name `key` is converted to\n     * @param {string} key - the name of the parameter\n     * @param {*} values - the value of the parameter\n     * @returns {Transformation} Returns this instance for chaining\n     */\n    set(key, ...values) {\n        let camelKey;\n        camelKey = camelCase(key);\n        if (contains(methods, camelKey)) {\n            // @ts-ignore\n            this[camelKey].apply(this, values);\n        }\n        else {\n            this.otherOptions[key] = values[0];\n        }\n        return this;\n    }\n    hasLayer() {\n        return this.getValue(\"overlay\") || this.getValue(\"underlay\");\n    }\n    /**\n     * Generate a string representation of the transformation.\n     * @function Transformation#serialize\n     * @return {string} Returns the transformation as a string\n     */\n    serialize() {\n        var ifParam, j, len, paramList, ref, ref1, ref2, ref3, ref4, resultArray, t, transformationList, transformationString, transformations, value, variables, vars;\n        resultArray = this.chained.map((tr) => tr.serialize());\n        paramList = this.keys();\n        transformations = (ref = this.get(\"transformation\")) != null ? ref.serialize() : void 0;\n        ifParam = (ref1 = this.get(\"if\")) != null ? ref1.serialize() : void 0;\n        variables = processVar((ref2 = this.get(\"variables\")) != null ? ref2.value() : void 0);\n        paramList = difference(paramList, [\"transformation\", \"if\", \"variables\"]);\n        vars = [];\n        transformationList = [];\n        for (j = 0, len = paramList.length; j < len; j++) {\n            t = paramList[j];\n            if (t.match(VAR_NAME_RE)) {\n                vars.push(t + \"_\" + Expression.normalize((ref3 = this.get(t)) != null ? ref3.value() : void 0));\n            }\n            else {\n                transformationList.push((ref4 = this.get(t)) != null ? ref4.serialize() : void 0);\n            }\n        }\n        switch (false) {\n            case !isString(transformations):\n                transformationList.push(transformations);\n                break;\n            case !Array.isArray(transformations):\n                resultArray = resultArray.concat(transformations);\n        }\n        transformationList = (function () {\n            var k, len1, results;\n            results = [];\n            for (k = 0, len1 = transformationList.length; k < len1; k++) {\n                value = transformationList[k];\n                if (Array.isArray(value) && !isEmpty(value) || !Array.isArray(value) && value) {\n                    results.push(value);\n                }\n            }\n            return results;\n        })();\n        transformationList = vars.sort().concat(variables).concat(transformationList.sort());\n        if (ifParam === \"if_end\") {\n            transformationList.push(ifParam);\n        }\n        else if (!isEmpty(ifParam)) {\n            transformationList.unshift(ifParam);\n        }\n        transformationString = (transformationList).filter(x => !!x).join(param_separator);\n        if (!isEmpty(transformationString)) {\n            resultArray.push(transformationString);\n        }\n        return (resultArray).filter((x) => !!x).join(trans_separator);\n    }\n    /**\n     * Provide a list of all the valid transformation option names\n     * @function Transformation#listNames\n     * @private\n     * @return {Array<string>} a array of all the valid option names\n     */\n    static listNames() {\n        return methods;\n    }\n    /**\n     * Returns the attributes for an HTML tag.\n     * @function Cloudinary.toHtmlAttributes\n     * @return PlainObject\n     */\n    toHtmlAttributes() {\n        let attrName, height, options, ref2, ref3, value, width;\n        options = {};\n        let snakeCaseKey;\n        Object.keys(this.otherOptions).forEach(key => {\n            value = this.otherOptions[key];\n            snakeCaseKey = snakeCase(key);\n            if (!contains(PARAM_NAMES, snakeCaseKey) && !contains(URL_KEYS, snakeCaseKey)) {\n                attrName = /^html_/.test(key) ? key.slice(5) : key;\n                options[attrName] = value;\n            }\n        });\n        // convert all \"html_key\" to \"key\" with the same value\n        this.keys().forEach(key => {\n            if (/^html_/.test(key)) {\n                options[camelCase(key.slice(5))] = this.getValue(key);\n            }\n        });\n        if (!(this.hasLayer() || this.getValue(\"angle\") || contains([\"fit\", \"limit\", \"lfill\"], this.getValue(\"crop\")))) {\n            width = (ref2 = this.get(\"width\")) != null ? ref2.origValue : void 0;\n            height = (ref3 = this.get(\"height\")) != null ? ref3.origValue : void 0;\n            if (parseFloat(width) >= 1.0) {\n                if (options.width == null) {\n                    options.width = width;\n                }\n            }\n            if (parseFloat(height) >= 1.0) {\n                if (options.height == null) {\n                    options.height = height;\n                }\n            }\n        }\n        return options;\n    }\n    static isValidParamName(name) {\n        return methods.indexOf(camelCase(name)) >= 0;\n    }\n    /**\n     * Delegate to the parent (up the call chain) to produce HTML\n     * @function Transformation#toHtml\n     * @return {string} HTML representation of the parent if possible.\n     * @example\n     * tag = cloudinary.ImageTag.new(\"sample\", {cloud_name: \"demo\"})\n     * // ImageTag {name: \"img\", publicId: \"sample\"}\n     * tag.toHtml()\n     * // <img src=\"http://res.cloudinary.com/demo/image/upload/sample\">\n     * tag.transformation().crop(\"fit\").width(300).toHtml()\n     * // <img src=\"http://res.cloudinary.com/demo/image/upload/c_fit,w_300/sample\">\n     */\n    toHtml() {\n        var ref;\n        return (ref = this.getParent()) != null ? typeof ref.toHtml === \"function\" ? ref.toHtml() : void 0 : void 0;\n    }\n    toString() {\n        return this.serialize();\n    }\n    clone() {\n        return new TransformationBase(this.toOptions(true));\n    }\n}\nconst VAR_NAME_RE = /^\\$[a-zA-Z0-9]+$/;\nconst trans_separator = '/';\nconst param_separator = ',';\nfunction lastArgCallback(args) {\n    var callback;\n    callback = args != null ? args[args.length - 1] : void 0;\n    if (isFunction(callback)) {\n        return callback;\n    }\n    else {\n        return void 0;\n    }\n}\nfunction processVar(varArray) {\n    var j, len, name, results, v;\n    if (Array.isArray(varArray)) {\n        results = [];\n        for (j = 0, len = varArray.length; j < len; j++) {\n            [name, v] = varArray[j];\n            results.push(`${name}_${Expression.normalize(v)}`);\n        }\n        return results;\n    }\n    else {\n        return varArray;\n    }\n}\n// @ts-ignore\nfunction processCustomFunction({ function_type, source }) {\n    if (function_type === 'remote') {\n        return [function_type, btoa(source)].join(\":\");\n    }\n    else if (function_type === 'wasm') {\n        return [function_type, source].join(\":\");\n    }\n}\n/**\n * Transformation Class methods.\n * This is a list of the parameters defined in Transformation.\n * Values are camelCased.\n * @const Transformation.methods\n * @private\n * @ignore\n * @type {Array<string>}\n */\n/**\n * Parameters that are filtered out before passing the options to an HTML tag.\n *\n * The list of parameters is a combination of `Transformation::methods` and `Configuration::CONFIG_PARAMS`\n * @const {Array<string>} Transformation.PARAM_NAMES\n * @private\n * @ignore\n * @see toHtmlAttributes\n */\nclass Transformation extends TransformationBase {\n    /**\n     * Represents a single transformation.\n     * @class Transformation\n     * @example\n     * t = new cloudinary.Transformation();\n     * t.angle(20).crop(\"scale\").width(\"auto\");\n     *\n     * // or\n     *\n     * t = new cloudinary.Transformation( {angle: 20, crop: \"scale\", width: \"auto\"});\n     * @see <a href=\"https://cloudinary.com/documentation/image_transformation_reference\"\n     *  target=\"_blank\">Available image transformations</a>\n     * @see <a href=\"https://cloudinary.com/documentation/video_transformation_reference\"\n     *  target=\"_blank\">Available video transformations</a>\n     */\n    constructor(options) {\n        super(options);\n    }\n    /**\n     * Convenience constructor\n     * @param {Object} options\n     * @return {Transformation}\n     * @example cl = cloudinary.Transformation.new( {angle: 20, crop: \"scale\", width: \"auto\"})\n     */\n    static new(options) {\n        return new Transformation(options);\n    }\n    /*\n      Transformation Parameters\n    */\n    angle(value) {\n        this.arrayParam(value, \"angle\", \"a\", \".\", Expression.normalize);\n        return this;\n    }\n    audioCodec(value) {\n        this.param(value, \"audio_codec\", \"ac\");\n        return this;\n    }\n    audioFrequency(value) {\n        this.param(value, \"audio_frequency\", \"af\");\n        return this;\n    }\n    aspectRatio(value) {\n        this.param(value, \"aspect_ratio\", \"ar\", Expression.normalize);\n        return this;\n    }\n    background(value) {\n        this.param(value, \"background\", \"b\", Param.norm_color);\n        return this;\n    }\n    bitRate(value) {\n        this.param(value, \"bit_rate\", \"br\");\n        return this;\n    }\n    border(value) {\n        return this.param(value, \"border\", \"bo\", (border) => {\n            if (isObject(border)) {\n                border = Object.assign({}, {\n                    color: \"black\",\n                    width: 2\n                }, border);\n                return `${border.width}px_solid_${Param.norm_color(border.color)}`;\n            }\n            else {\n                return border;\n            }\n        });\n    }\n    color(value) {\n        this.param(value, \"color\", \"co\", Param.norm_color);\n        return this;\n    }\n    colorSpace(value) {\n        this.param(value, \"color_space\", \"cs\");\n        return this;\n    }\n    crop(value) {\n        this.param(value, \"crop\", \"c\");\n        return this;\n    }\n    customFunction(value) {\n        return this.param(value, \"custom_function\", \"fn\", () => {\n            return processCustomFunction(value);\n        });\n    }\n    customPreFunction(value) {\n        if (this.get('custom_function')) {\n            return;\n        }\n        return this.rawParam(value, \"custom_function\", \"\", () => {\n            value = processCustomFunction(value);\n            return value ? `fn_pre:${value}` : value;\n        });\n    }\n    defaultImage(value) {\n        this.param(value, \"default_image\", \"d\");\n        return this;\n    }\n    delay(value) {\n        this.param(value, \"delay\", \"dl\");\n        return this;\n    }\n    density(value) {\n        this.param(value, \"density\", \"dn\");\n        return this;\n    }\n    duration(value) {\n        this.rangeParam(value, \"duration\", \"du\");\n        return this;\n    }\n    dpr(value) {\n        return this.param(value, \"dpr\", \"dpr\", (dpr) => {\n            dpr = dpr.toString();\n            if (dpr != null ? dpr.match(/^\\d+$/) : void 0) {\n                return dpr + \".0\";\n            }\n            else {\n                return Expression.normalize(dpr);\n            }\n        });\n    }\n    effect(value) {\n        this.arrayParam(value, \"effect\", \"e\", \":\", Expression.normalize);\n        return this;\n    }\n    else() {\n        return this.if('else');\n    }\n    endIf() {\n        return this.if('end');\n    }\n    endOffset(value) {\n        this.rangeParam(value, \"end_offset\", \"eo\");\n        return this;\n    }\n    fallbackContent(value) {\n        this.param(value, \"fallback_content\");\n        return this;\n    }\n    fetchFormat(value) {\n        this.param(value, \"fetch_format\", \"f\");\n        return this;\n    }\n    format(value) {\n        this.param(value, \"format\");\n        return this;\n    }\n    flags(value) {\n        this.arrayParam(value, \"flags\", \"fl\", \".\");\n        return this;\n    }\n    gravity(value) {\n        this.param(value, \"gravity\", \"g\");\n        return this;\n    }\n    fps(value) {\n        return this.param(value, \"fps\", \"fps\", (fps) => {\n            if (isString(fps)) {\n                return fps;\n            }\n            else if (Array.isArray(fps)) {\n                return fps.join(\"-\");\n            }\n            else {\n                return fps;\n            }\n        });\n    }\n    height(value) {\n        return this.param(value, \"height\", \"h\", () => {\n            if (this.getValue(\"crop\") || this.getValue(\"overlay\") || this.getValue(\"underlay\")) {\n                return Expression.normalize(value);\n            }\n            else {\n                return null;\n            }\n        });\n    }\n    htmlHeight(value) {\n        this.param(value, \"html_height\");\n        return this;\n    }\n    htmlWidth(value) {\n        this.param(value, \"html_width\");\n        return this;\n    }\n    if(value = \"\") {\n        var i, ifVal, j, ref, trIf, trRest;\n        switch (value) {\n            case \"else\":\n                this.chain();\n                return this.param(value, \"if\", \"if\");\n            case \"end\":\n                this.chain();\n                for (i = j = ref = this.chained.length - 1; j >= 0; i = j += -1) {\n                    ifVal = this.chained[i].getValue(\"if\");\n                    if (ifVal === \"end\") {\n                        break;\n                    }\n                    else if (ifVal != null) {\n                        trIf = Transformation.new().if(ifVal);\n                        this.chained[i].remove(\"if\");\n                        trRest = this.chained[i];\n                        this.chained[i] = Transformation.new().transformation([trIf, trRest]);\n                        if (ifVal !== \"else\") {\n                            break;\n                        }\n                    }\n                }\n                return this.param(value, \"if\", \"if\");\n            case \"\":\n                return Condition.new().setParent(this);\n            default:\n                return this.param(value, \"if\", \"if\", (value) => {\n                    return Condition.new(value).toString();\n                });\n        }\n    }\n    keyframeInterval(value) {\n        this.param(value, \"keyframe_interval\", \"ki\");\n        return this;\n    }\n    ocr(value) {\n        this.param(value, \"ocr\", \"ocr\");\n        return this;\n    }\n    offset(value) {\n        var end_o, start_o;\n        [start_o, end_o] = (isFunction(value != null ? value.split : void 0)) ? value.split('..') : Array.isArray(value) ? value : [null, null];\n        if (start_o != null) {\n            this.startOffset(start_o);\n        }\n        if (end_o != null) {\n            return this.endOffset(end_o);\n        }\n    }\n    opacity(value) {\n        this.param(value, \"opacity\", \"o\", Expression.normalize);\n        return this;\n    }\n    overlay(value) {\n        this.layerParam(value, \"overlay\", \"l\");\n        return this;\n    }\n    page(value) {\n        this.param(value, \"page\", \"pg\");\n        return this;\n    }\n    poster(value) {\n        this.param(value, \"poster\");\n        return this;\n    }\n    prefix(value) {\n        this.param(value, \"prefix\", \"p\");\n        return this;\n    }\n    quality(value) {\n        this.param(value, \"quality\", \"q\", Expression.normalize);\n        return this;\n    }\n    radius(value) {\n        this.arrayParam(value, \"radius\", \"r\", \":\", Expression.normalize);\n        return this;\n    }\n    rawTransformation(value) {\n        this.rawParam(value, \"raw_transformation\");\n        return this;\n    }\n    size(value) {\n        let height, width;\n        if (isFunction(value != null ? value.split : void 0)) {\n            [width, height] = value.split('x');\n            this.width(width);\n            return this.height(height);\n        }\n    }\n    sourceTypes(value) {\n        this.param(value, \"source_types\");\n        return this;\n    }\n    sourceTransformation(value) {\n        return this.param(value, \"source_transformation\");\n    }\n    startOffset(value) {\n        this.rangeParam(value, \"start_offset\", \"so\");\n        return this;\n    }\n    streamingProfile(value) {\n        this.param(value, \"streaming_profile\", \"sp\");\n        return this;\n    }\n    transformation(value) {\n        this.transformationParam(value, \"transformation\", \"t\");\n        return this;\n    }\n    underlay(value) {\n        this.layerParam(value, \"underlay\", \"u\");\n        return this;\n    }\n    variable(name, value) {\n        this.param(value, name, name);\n        return this;\n    }\n    variables(values) {\n        this.arrayParam(values, \"variables\");\n        return this;\n    }\n    videoCodec(value) {\n        this.param(value, \"video_codec\", \"vc\", Param.process_video_params);\n        return this;\n    }\n    videoSampling(value) {\n        this.param(value, \"video_sampling\", \"vs\");\n        return this;\n    }\n    width(value) {\n        this.param(value, \"width\", \"w\", () => {\n            if (this.getValue(\"crop\") || this.getValue(\"overlay\") || this.getValue(\"underlay\")) {\n                return Expression.normalize(value);\n            }\n            else {\n                return null;\n            }\n        });\n        return this;\n    }\n    x(value) {\n        this.param(value, \"x\", \"x\", Expression.normalize);\n        return this;\n    }\n    y(value) {\n        this.param(value, \"y\", \"y\", Expression.normalize);\n        return this;\n    }\n    zoom(value) {\n        this.param(value, \"zoom\", \"z\", Expression.normalize);\n        return this;\n    }\n}\n/**\n * Transformation Class methods.\n * This is a list of the parameters defined in Transformation.\n * Values are camelCased.\n */\nconst methods = [\n    \"angle\",\n    \"audioCodec\",\n    \"audioFrequency\",\n    \"aspectRatio\",\n    \"background\",\n    \"bitRate\",\n    \"border\",\n    \"color\",\n    \"colorSpace\",\n    \"crop\",\n    \"customFunction\",\n    \"customPreFunction\",\n    \"defaultImage\",\n    \"delay\",\n    \"density\",\n    \"duration\",\n    \"dpr\",\n    \"effect\",\n    \"else\",\n    \"endIf\",\n    \"endOffset\",\n    \"fallbackContent\",\n    \"fetchFormat\",\n    \"format\",\n    \"flags\",\n    \"gravity\",\n    \"fps\",\n    \"height\",\n    \"htmlHeight\",\n    \"htmlWidth\",\n    \"if\",\n    \"keyframeInterval\",\n    \"ocr\",\n    \"offset\",\n    \"opacity\",\n    \"overlay\",\n    \"page\",\n    \"poster\",\n    \"prefix\",\n    \"quality\",\n    \"radius\",\n    \"rawTransformation\",\n    \"size\",\n    \"sourceTypes\",\n    \"sourceTransformation\",\n    \"startOffset\",\n    \"streamingProfile\",\n    \"transformation\",\n    \"underlay\",\n    \"variable\",\n    \"variables\",\n    \"videoCodec\",\n    \"videoSampling\",\n    \"width\",\n    \"x\",\n    \"y\",\n    \"zoom\"\n];\n/**\n * Parameters that are filtered out before passing the options to an HTML tag.\n *\n * The list of parameters is a combination of `Transformation::methods` and `Configuration::CONFIG_PARAMS`\n */\nconst PARAM_NAMES = methods.map(snakeCase).concat(CONFIG_PARAMS);\nexport default Transformation;\n","'use strict';\n\n/* global CLOUDINARY_CONFIG, cloudinary, tinymce */\nimport { transformationStringFromObject, Cloudinary } from \"@cloudinary/url-gen\";\n\n(() => {\n    const stateSelector = 'img[data-shortcode=\"image\"]';\n    const ssmedia = {\n\n        /**\n         * @var editor\n         */\n        editor: null,\n\n        /**\n         * Initialise the plugin\n         *\n         * @param {*} editor\n         */\n        init(editor) {\n            this.openCloudinaryBrowser = this.openCloudinaryBrowser.bind(this);\n            this.insertImageHandler = this.insertImageHandler.bind(this);\n            this.insertLinkHandler = this.insertLinkHandler.bind(this);\n\n            this.editor = editor;\n\n            const insertText = editor.translate('Insert from Files'),\n                editText = editor.translate('Edit image'),\n                fileText = editor.translate('File');\n\n            editor.ui.registry.addButton('ssmedia', {\n                title: insertText,\n                icon: 'image',\n                cmd: 'ssmedia',\n                onAction: () => editor.execCommand('ssmedia'),\n                stateSelector: stateSelector\n            });\n            editor.ui.registry.addMenuItem('ssmedia', {\n                text: fileText,\n                icon: 'image',\n                cmd: 'ssmedia'\n            });\n            editor.ui.registry.addButton('ssmediaedit', {\n                title: editText,\n                icon: 'editimage',\n                cmd: 'ssmedia'\n            });\n\n            editor.addCommand('ssmedia', () => {\n                this.openCloudinaryBrowser(this.insertImageHandler);\n            });\n\n            editor.addCommand('sslinkfile', () => {\n                this.openCloudinaryBrowser(this.insertLinkHandler);\n            });\n        },\n\n        /**\n         * @callback cloudinaryInsertHandler\n         * @param {*} response\n         */\n\n        /**\n         * Opens Cloudinary Media Library modal and assigns the `insertHandler` callback to insert the image into editor\n         *\n         * @param {cloudinaryInsertHandler} insertHandler\n         */\n        openCloudinaryBrowser(insertHandler) {\n            // See https://cloudinary.com/documentation/media_library_widget#3_set_the_configuration_options\n            const options = {\n                ...CLOUDINARY_CONFIG,\n                multiple: false,\n            };\n\n            // Safari is the devil. Force users to login manually.\n            if (navigator.userAgent.indexOf('Safari') != -1 && navigator.userAgent.indexOf('Chrome') == -1) {\n                delete options.username;\n                delete options.timestamp;\n                delete options.signature;\n            }\n\n            cloudinary.openMediaLibrary(options, {\n                insertHandler,\n            });\n        },\n\n        cloudinaryInstance() {\n            return new Cloudinary({\n                cloud: {\n                    cloudName: CLOUDINARY_CONFIG.cloud_name,\n                }\n            });\n        },\n\n        /**\n         * Inserts the data into the editor\n         *\n         * @param {*} response\n         */\n        insertImageHandler(response) {\n            const asset = response.assets[0];\n            if (asset.resource_type !== 'image') {\n                throw `Resource type of [${asset.resource_type}] is not supported`;\n            }\n\n            const image = this.cloudinaryInstance().image(asset.public_id);\n            const defaultTransformations = this.editor.getParam('default_transformations');\n\n            if (defaultTransformations) {\n                const transformationString = transformationStringFromObject(defaultTransformations);\n                image.addTransformation(transformationString);\n            }\n\n            // Copied same logic from `API::extractDescription()`\n            const defaultAltText = asset.context?.custom?.alt;\n            // Copied same logic from `API::extractTitle()`\n            const defaultTitle = asset.context?.custom?.caption;\n\n            const altText = prompt('Description', defaultAltText);\n            const titleText = prompt('Title', defaultTitle);\n            const img = document.createElement('img');\n            img.src = image.toURL();\n\n            if (altText) {\n                img.alt = altText;\n            }\n            if (titleText) {\n                img.title = titleText;\n            }\n\n            this.editor.execCommand('mceInsertContent', false, img.outerHTML);\n        },\n\n        /**\n         * Inserts the data into the editor as a link\n         *\n         * @param {*} response\n         */\n        insertLinkHandler(response) {\n            const asset = response.assets[0];\n\n            let secureUrl;\n\n            if (asset.derived && asset.derived.length > 0) {\n                secureUrl = asset.derived[0].secure_url;\n            } else {\n                secureUrl = asset.secure_url;\n            }\n\n            let linkText = this.editor.selection.getContent({format: 'html'});\n\n            if (linkText.trim().length <= 0) {\n                linkText = prompt('Link text');\n            }\n\n            let defaultDescription;\n\n            if (\n                asset.context &&\n                asset.context.custom &&\n                asset.context.custom.alt\n            ) {\n                defaultDescription = asset.context.custom.alt;\n            }\n\n            const description = prompt('Description', defaultDescription);\n            const titleAttribute = description ? `title=\"${description}\"` : '';\n\n            const link = `<a href=\"${secureUrl}\" ${titleAttribute}>${linkText}</a>`;\n            this.editor.execCommand('mceInsertContent', false, link);\n        },\n    };\n    tinymce.PluginManager.add('ssmedia', function (editor) {\n        ssmedia.init(editor);\n    });\n})();\n","import { processLayer } from \"./transformationProcessing/processLayer.js\";\nimport { process_if } from \"./transformationProcessing/processIf.js\";\nimport { toArray } from \"./utils/toArray.js\";\nimport { processRadius } from \"./transformationProcessing/processRadius.js\";\nimport { isObject } from \"./utils/isObject.js\";\nimport { processCustomFunction } from \"./transformationProcessing/processCustomFunction.js\";\nimport { processCustomPreFunction } from \"./transformationProcessing/processCustomPreFunction.js\";\nimport { splitRange } from \"./utils/splitRange.js\";\nimport { legacyNormalizeExpression } from \"./utils/legacyNormalizeExpression.js\";\nimport { normRangeValues } from \"./utils/norm_range_values.js\";\nimport { processVideoParams } from \"./transformationProcessing/processVideoParams.js\";\nimport Transformation from \"./transformation.js\";\nimport { processDpr } from \"./transformationProcessing/processDpr.js\";\nimport { isNumberLike } from \"./utils/isNumberLike.js\";\n/**\n * Things dropped\n * - responsive_width\n * - config().dpr\n * - SSL Detected\n * - Provisioning API\n * - Magical configuration auto-mapping (everything has to be explicit)\n * - Signatures\n * - Secure is default true\n * @param transformationOptions\n */\nexport function generateTransformationString(transformationOptions) {\n    if (typeof transformationOptions === 'string') {\n        return transformationOptions;\n    }\n    if (transformationOptions instanceof Transformation) {\n        return transformationOptions.toString();\n    }\n    if (Array.isArray(transformationOptions)) {\n        return transformationOptions\n            .map((singleTransformation) => {\n            return generateTransformationString(singleTransformation);\n        }).filter((a) => { return a; }).join('/');\n    }\n    // let responsive_width = consumeOption(transformationOptions, \"responsive_width\", config().responsive_width);\n    let width;\n    let height;\n    const size = transformationOptions.size;\n    const hasLayer = transformationOptions.overlay || transformationOptions.underlay;\n    const crop = transformationOptions.crop;\n    const angle = toArray(transformationOptions.angle).join(\".\");\n    const background = (transformationOptions.background || '').replace(/^#/, \"rgb:\");\n    const color = (transformationOptions.color || '').replace(/^#/, \"rgb:\");\n    const flags = (toArray(transformationOptions.flags || [])).join('.');\n    const dpr = transformationOptions.dpr === undefined ? transformationOptions.dpr : processDpr(transformationOptions.dpr);\n    const overlay = processLayer(transformationOptions.overlay);\n    const radius = processRadius(transformationOptions.radius);\n    const underlay = processLayer(transformationOptions.underlay);\n    const ifValue = process_if(transformationOptions.if);\n    const custom_function = processCustomFunction(transformationOptions.custom_function);\n    const custom_pre_function = processCustomPreFunction(transformationOptions.custom_pre_function);\n    // These will change down the line, heads up!\n    let fps = transformationOptions.fps;\n    let namedTransformations = [];\n    let childTransformations = toArray(transformationOptions.transformation || []);\n    let effect = transformationOptions.effect;\n    // TODO, Do we need this?\n    const no_html_sizes = hasLayer || angle || crop === \"fit\" || crop === \"limit\";\n    if (size) {\n        const [sizeWidth, sizeHeight] = size.split(\"x\");\n        width = sizeWidth;\n        height = sizeHeight;\n    }\n    else {\n        width = transformationOptions.width;\n        height = transformationOptions.height;\n    }\n    if (width && (width.toString().indexOf(\"auto\") === 0 || no_html_sizes || parseFloat(width.toString()) < 1)) {\n        delete transformationOptions.width;\n    }\n    if (height && (no_html_sizes || parseFloat(height.toString()) < 1)) {\n        delete transformationOptions.height;\n    }\n    // Is any child transformation an object?\n    const isAnyChildAnObject = childTransformations.some((transformation) => typeof transformation === 'object');\n    // If array of objects, or array of strings?\n    if (isAnyChildAnObject) {\n        childTransformations = childTransformations.map((transformation) => {\n            if (isObject(transformation)) {\n                return generateTransformationString(transformation);\n            }\n            else {\n                return generateTransformationString({ transformation });\n            }\n        }).filter((a) => a);\n    }\n    else {\n        namedTransformations = childTransformations.join(\".\");\n        childTransformations = []; // Reset child transfomrations\n    }\n    if (Array.isArray(effect)) {\n        effect = effect.join(\":\");\n    }\n    else if (isObject(effect)) {\n        effect = Object.entries(effect).map(([key, value]) => `${key}:${value}`);\n    }\n    let border = transformationOptions.border;\n    if (isObject(border)) {\n        border = `${border.width != null ? border.width : 2}px_solid_${(border.color != null ? border.color : \"black\").replace(/^#/, 'rgb:')}`;\n    }\n    else {\n        // @ts-ignore\n        if (/^\\d+$/.exec(border)) { // fallback to html border attributes\n            transformationOptions.border = border;\n            border = void 0;\n        }\n    }\n    if (Array.isArray(fps)) {\n        fps = fps.join('-');\n    }\n    // ocr(value) {\n    //   return this.param(value, \"ocr\", \"ocr\");\n    // }\n    const urlParams = {\n        a: legacyNormalizeExpression(angle),\n        ar: legacyNormalizeExpression(transformationOptions.aspect_ratio),\n        b: background,\n        bo: border,\n        c: crop,\n        co: color,\n        dpr: legacyNormalizeExpression(dpr),\n        e: legacyNormalizeExpression(effect),\n        fl: flags,\n        fn: custom_function || custom_pre_function,\n        fps: fps,\n        h: legacyNormalizeExpression(height),\n        ki: legacyNormalizeExpression(transformationOptions.keyframe_interval),\n        l: overlay,\n        o: legacyNormalizeExpression(transformationOptions.opacity),\n        q: legacyNormalizeExpression(transformationOptions.quality),\n        r: radius,\n        t: namedTransformations,\n        u: underlay,\n        w: legacyNormalizeExpression(width),\n        x: legacyNormalizeExpression(transformationOptions.x),\n        y: legacyNormalizeExpression(transformationOptions.y),\n        z: legacyNormalizeExpression(transformationOptions.zoom),\n        ac: transformationOptions.audio_codec,\n        af: transformationOptions.audio_frequency,\n        br: transformationOptions.bit_rate,\n        cs: transformationOptions.color_space,\n        d: transformationOptions.default_image,\n        dl: transformationOptions.delay,\n        dn: transformationOptions.density,\n        du: normRangeValues(transformationOptions.duration),\n        eo: normRangeValues(transformationOptions.end_offset || isNumberLike(transformationOptions.end_offset) ? transformationOptions.end_offset : splitRange(transformationOptions.offset)[1]),\n        f: transformationOptions.fetch_format,\n        g: transformationOptions.gravity,\n        pg: transformationOptions.page,\n        p: transformationOptions.prefix,\n        so: normRangeValues(transformationOptions.start_offset || isNumberLike(transformationOptions.start_offset) ? transformationOptions.start_offset : splitRange(transformationOptions.offset)[0]),\n        sp: transformationOptions.streaming_profile,\n        vc: processVideoParams(transformationOptions.video_codec),\n        vs: transformationOptions.video_sampling\n    };\n    // We can accept variables in here transformationOptions, or in here transformationOptions.variables\n    const variables = Object.entries(transformationOptions)\n        .filter(([key, value]) => key.startsWith('$'))\n        .map(([key, value]) => {\n        // delete transformationOptions[key]; // Delete the variables, so we don't add them twice\n        return `${key}_${legacyNormalizeExpression(value)}`;\n    }).sort().concat(\n    // @ts-ignore\n    (transformationOptions.variables || []).map(([name, value]) => `${name}_${legacyNormalizeExpression(value)}`)).join(',');\n    // Clean up!\n    const urlImageTransfomrations = Object.entries(urlParams)\n        .filter(([key, value]) => {\n        if (typeof value === 'undefined' || value === null) {\n            return false;\n        }\n        if (typeof value === 'string' && value.length === 0) {\n            return false;\n        }\n        if (Array.isArray(value) && value.length === 0) {\n            return false;\n        }\n        return true;\n    })\n        .map(([key, value]) => `${key}_${value}`)\n        .sort()\n        .join(',');\n    const finalTransformationString = [\n        ifValue,\n        variables,\n        urlImageTransfomrations,\n        transformationOptions.raw_transformation\n    ].filter((a) => a).join(\",\");\n    if (finalTransformationString) {\n        childTransformations.push(finalTransformationString);\n    }\n    // console.log(childTransformations);\n    return childTransformations.join(\"/\");\n}\nexport const transformationStringFromObject = generateTransformationString;\n","import Expression from \"../expression.js\";\n/**\n * Process DPR value. If input is 1 returns 1.0\n * @param value\n */\nexport function processDpr(value) {\n    let dpr = value.toString();\n    if (dpr != null ? dpr.match(/^\\d+$/) : void 0) {\n        return dpr + \".0\";\n    }\n    else {\n        return Expression.normalize(dpr);\n    }\n}\n","import { legacyNormalizeExpression } from \"../utils/legacyNormalizeExpression.js\";\n/**\n * Parse radius options\n * @private\n * @param {Array<string|number>|string|number} _radius The radius to parse\n * @return {string} radius transformation string\n */\nexport function processRadius(_radius) {\n    let radius = _radius;\n    if (!radius) {\n        return radius;\n    }\n    if (!Array.isArray(radius)) {\n        radius = [radius];\n    }\n    if (radius.length === 0 || radius.length > 4) {\n        throw new Error(\"Radius array should contain between 1 and 4 values\");\n    }\n    if (radius.findIndex((x) => x === null) >= 0) {\n        throw new Error(\"Corner: Cannot be null\");\n    }\n    return radius.map(legacyNormalizeExpression).join(':');\n}\n","import { legacyNormalizeExpression } from \"../utils/legacyNormalizeExpression.js\";\n/**\n * Parse \"if\" parameter\n * Translates the condition if provided.\n * @private\n * @return {string} \"if_\" + ifValue\n */\nexport function process_if(ifValue) {\n    return ifValue ? \"if_\" + legacyNormalizeExpression(ifValue) : ifValue;\n}\n","import { processCustomFunction } from \"./processCustomFunction.js\";\n/**\n * Parse custom_pre_function options\n * @private\n * @param {object|*} customPreFunction a custom function object containing function_type and source values\n * @return {string|*} custom_pre_function transformation string\n */\nexport function processCustomPreFunction(customPreFunction) {\n    const result = processCustomFunction(customPreFunction);\n    return typeof result === 'string' ? `pre:${result}` : null;\n}\n","/**\n * A video codec parameter can be either a String or a Hash.\n * @param {Object} param <code>vc_<codec>[ : <profile> : [<level>]]</code>\n *                       or <code>{ codec: 'h264', profile: 'basic', level: '3.1' }</code>\n * @return {String} <code><codec> : <profile> : [<level>]]</code> if a Hash was provided\n *                   or the param if a String was provided.\n *                   Returns null if param is not a Hash or String\n */\nexport function processVideoParams(param) {\n    switch (param && param.constructor) {\n        case Object: {\n            let video = \"\";\n            if ('codec' in param) {\n                video = param.codec;\n                if ('profile' in param) {\n                    video += \":\" + param.profile;\n                    if ('level' in param) {\n                        video += \":\" + param.level;\n                    }\n                }\n            }\n            return video;\n        }\n        case String:\n            return param;\n        default:\n            return null;\n    }\n}\n"],"sourceRoot":""}