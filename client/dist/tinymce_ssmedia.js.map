{"version":3,"file":"tinymce_ssmedia.js","mappings":";;;IAEA,SAAAA,QAAAC;QAAA,OAAAD,UAAA,qBAAAE,UAAA,mBAAAA,OAAAC,WAAA,SAAAF;YAAA,cAAAA;AAAA,qBAAAA;YAAA,OAAAA,KAAA,qBAAAC,UAAAD,EAAAG,gBAAAF,UAAAD,MAAAC,OAAAG,YAAA,kBAAAJ;AAAA,WAAAD,QAAAC;AAAA;IAAA,SAAAK,QAAAC,GAAAC;QAAA,IAAAC,IAAAC,OAAAC,KAAAJ;QAAA,IAAAG,OAAAE,uBAAA;YAAA,IAAAX,IAAAS,OAAAE,sBAAAL;YAAAC,MAAAP,IAAAA,EAAAY,QAAA,SAAAL;gBAAA,OAAAE,OAAAI,yBAAAP,GAAAC,GAAAO;AAAA,kBAAAN,EAAAO,KAAAC,MAAAR,GAAAR;AAAA;QAAA,OAAAQ;AAAA;IAAA,SAAAS,cAAAX;QAAA,SAAAC,IAAA,GAAAA,IAAAW,UAAAC,QAAAZ,KAAA;YAAA,IAAAC,IAAA,QAAAU,UAAAX,KAAAW,UAAAX,KAAA;YAAAA,IAAA,IAAAF,QAAAI,OAAAD,KAAA,GAAAY,SAAA,SAAAb;gBAAAc,gBAAAf,GAAAC,GAAAC,EAAAD;AAAA,kBAAAE,OAAAa,4BAAAb,OAAAc,iBAAAjB,GAAAG,OAAAa,0BAAAd,MAAAH,QAAAI,OAAAD,IAAAY,SAAA,SAAAb;gBAAAE,OAAAe,eAAAlB,GAAAC,GAAAE,OAAAI,yBAAAL,GAAAD;AAAA;AAAA;QAAA,OAAAD;AAAA;IAAA,SAAAe,gBAAAf,GAAAC,GAAAC;QAAA,QAAAD,IAAA,SAAAC;YAAA,IAAAiB,IAAA,SAAAjB,GAAAD;gBAAA,gBAAAR,QAAAS,OAAAA,GAAA,OAAAA;gBAAA,IAAAF,IAAAE,EAAAP,OAAAyB;gBAAA,eAAApB,GAAA;oBAAA,IAAAmB,IAAAnB,EAAAqB,KAAAnB,GAAAD,KAAA;oBAAA,gBAAAR,QAAA0B,IAAA,OAAAA;oBAAA,UAAAG,UAAA;AAAA;gBAAA,qBAAArB,IAAAsB,SAAAC,QAAAtB;AAAA,aAAAuB,CAAAvB,GAAA;YAAA,mBAAAT,QAAA0B,KAAAA,IAAAA,IAAA;AAAA,SAAAO,CAAAzB,OAAAD,IAAAG,OAAAe,eAAAlB,GAAAC,GAAA;YAAA0B,OAAAzB;YAAAM,aAAA;YAAAoB,eAAA;YAAAC,WAAA;aAAA7B,EAAAC,KAAAC,GAAAF;AAAA;IAEA,IAEU8B;IAAAA,IAAU;QAKZC,QAAQ;QAORC,MAAI,SAACD;YAAQ,IAAAE,IAAA;YACTC,KAAKC,wBAAwBD,KAAKC,sBAAsBC,KAAKF,OAC7DA,KAAKG,gBAAgBH,KAAKG,cAAcD,KAAKF;YAC7CA,KAAKI,cAAcJ,KAAKI,YAAYF,KAAKF,OAEzCA,KAAKH,SAASA;YAEd,IAAMQ,IAAaR,EAAOS,UAAU,sBAChCC,IAAWV,EAAOS,UAAU,eAC5BE,IAAWX,EAAOS,UAAU;YAEhCT,EAAOY,UAAU,WAAW;gBACxBC,OAAOL;gBACPM,MAAM;gBACNC,KAAK;gBACLC,eA5BU;gBA8BdhB,EAAOiB,YAAY,WAAW;gBAC1BC,MAAMP;gBACNG,MAAM;gBACNC,KAAK;gBAETf,EAAOY,UAAU,eAAe;gBAC5BC,OAAOH;gBACPI,MAAM;gBACNC,KAAK;gBAGTf,EAAOmB,WAAW,YAAW;gBACzBjB,EAAKE,sBAAsBF,EAAKI;AACpC,iBAEAN,EAAOmB,WAAW,eAAc;gBAC5BjB,EAAKE,sBAAsBF,EAAKK;AACpC;AACJ;QAYAH,uBAAqB,SAACE;YAElB,IAAMc,IAAOxC,cAAAA,cAAA,IACNyC,oBAAiB;gBACpBC,WAAU;gBAGRC,IAAyBpB,KAAKH,OAAOwB,SAAS;YAEhDD,MACAH,EAAQK,0BAA0B,EAACF,MAGvCG,WAAWC,iBAAiBP,GAAS;gBACjCd,eAAAA;;AAER;QAOAA,eAAa,SAACsB;YACV,IAKIC,GALEC,IAAQF,EAASG,OAAO;YAC9B,IAA4B,YAAxBD,EAAME,eACN,MAAM,qBAANC,OAA2BH,EAAME,eAAa;YAK9CH,IADAC,EAAMI,WAAWJ,EAAMI,QAAQpD,SAAS,IAC5BgD,EAAMI,QAAQ,GAAGC,aAEjBL,EAAMK;YAGtB,IAAMC,IAAM,aAAHH,OAAgBJ,GAAS;YAClC1B,KAAKH,OAAOqC,YAAY,qBAAoB,GAAOD;AACvD;QAOA7B,aAAW,SAACqB;YACR,IAEIC,GAFEC,IAAQF,EAASG,OAAO;YAK1BF,IADAC,EAAMI,WAAWJ,EAAMI,QAAQpD,SAAS,IAC5BgD,EAAMI,QAAQ,GAAGC,aAEjBL,EAAMK;YAGtB,IAMIG,GANAC,IAAWpC,KAAKH,OAAOwC,UAAUC,WAAW;gBAACC,QAAQ;;YAErDH,EAASI,OAAO7D,UAAU,MAC1ByD,IAAWK,OAAO,eAMlBd,EAAMe,WACNf,EAAMe,QAAQC,UACdhB,EAAMe,QAAQC,OAAOC,QAErBT,IAAqBR,EAAMe,QAAQC,OAAOC;YAG9C,IAAMC,IAAcJ,OAAO,eAAeN,IACpCW,IAAiBD,IAAc,UAAHf,OAAae,GAAW,OAAM,IAE1DE,IAAO,YAAHjB,OAAeJ,GAAS,MAAAI,OAAKgB,GAAc,KAAAhB,OAAIM,GAAQ;YACjEpC,KAAKH,OAAOqC,YAAY,qBAAoB,GAAOa;AACvD;OAEJC,QAAQC,cAAcC,IAAI,YAAW,SAAUrD;QAC3CD,EAAQE,KAAKD;AACjB","sources":["webpack:///./tinymce_ssmedia.js"],"sourcesContent":["'use strict';\n\n/* global CLOUDINARY_CONFIG, cloudinary, tinymce */\n\n(() => {\n    const stateSelector = 'img[data-shortcode=\"image\"]';\n    const ssmedia = {\n\n        /**\n         * @var editor\n         */\n        editor: null,\n\n        /**\n         * Initialise the plugin\n         *\n         * @param {*} editor\n         */\n        init(editor) {\n            this.openCloudinaryBrowser = this.openCloudinaryBrowser.bind(this);\n            this.insertHandler = this.insertHandler.bind(this);\n            this.linkHandler = this.linkHandler.bind(this);\n\n            this.editor = editor;\n\n            const insertText = editor.translate('Insert from Files'),\n                editText = editor.translate('Edit image'),\n                fileText = editor.translate('File');\n\n            editor.addButton('ssmedia', {\n                title: insertText,\n                icon: 'image',\n                cmd: 'ssmedia',\n                stateSelector: stateSelector\n            });\n            editor.addMenuItem('ssmedia', {\n                text: fileText,\n                icon: 'image',\n                cmd: 'ssmedia'\n            });\n            editor.addButton('ssmediaedit', {\n                title: editText,\n                icon: 'editimage',\n                cmd: 'ssmedia'\n            });\n\n            editor.addCommand('ssmedia', () => {\n                this.openCloudinaryBrowser(this.insertHandler);\n            });\n\n            editor.addCommand('sslinkfile', () => {\n                this.openCloudinaryBrowser(this.linkHandler);\n            });\n        },\n\n        /**\n         * @callback cloudinaryInsertHandler\n         * @param {*} response\n         */\n\n        /**\n         * Opens Cloudinary Media Library modal and assigns the `insertHandler` callback to insert the image into editor\n         *\n         * @param {cloudinaryInsertHandler} insertHandler\n         */\n        openCloudinaryBrowser(insertHandler) {\n            // See https://cloudinary.com/documentation/media_library_widget#3_set_the_configuration_options\n            const options = {\n                ...CLOUDINARY_CONFIG,\n                multiple: false,\n            };\n\n            const defaultTransformations = this.editor.getParam('default_transformations');\n\n            if (defaultTransformations) {\n                options.default_transformations = [defaultTransformations];\n            }\n\n            cloudinary.openMediaLibrary(options, {\n                insertHandler,\n            });\n        },\n\n        /**\n         * Inserts the data into the editor\n         *\n         * @param {*} response\n         */\n        insertHandler(response) {\n            const asset = response.assets[0];\n            if (asset.resource_type !== 'image') {\n                throw `Resource type of [${asset.resource_type}] is not supported`;\n            }\n\n            let secureUrl;\n            if (asset.derived && asset.derived.length > 0) {\n                secureUrl = asset.derived[0].secure_url;\n            } else {\n                secureUrl = asset.secure_url;\n            }\n\n            const img = `<img src=\"${secureUrl}\" />`;\n            this.editor.execCommand('mceInsertContent', false, img);\n        },\n\n        /**\n         * Inserts the data into the editor as a link\n         *\n         * @param {*} response\n         */\n        linkHandler(response) {\n            const asset = response.assets[0];\n\n            let secureUrl;\n\n            if (asset.derived && asset.derived.length > 0) {\n                secureUrl = asset.derived[0].secure_url;\n            } else {\n                secureUrl = asset.secure_url;\n            }\n\n            let linkText = this.editor.selection.getContent({format: 'html'});\n\n            if (linkText.trim().length <= 0) {\n                linkText = prompt('Link text');\n            }\n\n            let defaultDescription;\n\n            if (\n                asset.context &&\n                asset.context.custom &&\n                asset.context.custom.alt\n            ) {\n                defaultDescription = asset.context.custom.alt;\n            }\n\n            const description = prompt('Description', defaultDescription);\n            const titleAttribute = description ? `title=\"${description}\"` : '';\n\n            const link = `<a href=\"${secureUrl}\" ${titleAttribute}>${linkText}</a>`;\n            this.editor.execCommand('mceInsertContent', false, link);\n        },\n    };\n    tinymce.PluginManager.add('ssmedia', function (editor) {\n        ssmedia.init(editor);\n    });\n})();\n"],"names":["_typeof","o","Symbol","iterator","constructor","prototype","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","i","toPrimitive","call","TypeError","String","Number","_toPrimitive","_toPropertyKey","value","configurable","writable","ssmedia","editor","init","_this","this","openCloudinaryBrowser","bind","insertHandler","linkHandler","insertText","translate","editText","fileText","addButton","title","icon","cmd","stateSelector","addMenuItem","text","addCommand","options","CLOUDINARY_CONFIG","multiple","defaultTransformations","getParam","default_transformations","cloudinary","openMediaLibrary","response","secureUrl","asset","assets","resource_type","concat","derived","secure_url","img","execCommand","defaultDescription","linkText","selection","getContent","format","trim","prompt","context","custom","alt","description","titleAttribute","link","tinymce","PluginManager","add"],"sourceRoot":""}